
"""
Created on  Thu Jul 6 19:19:52 2023

@author: Bhavesh Soni
Email : Bhaveshkumar.soni@hs-nordhausen.de  or letter.to.bhavesh@gmail.com

Phone : +49 15222010411
"""

from PyQt5 import QtCore, QtGui, QtWidgets, uic
from PyQt5.QtWidgets import QFileDialog, QHeaderView, QTableWidgetItem, QApplication, QMainWindow, QTreeView, QPushButton, QTextEdit, QWidget
from PyQt5.QtGui import QStandardItemModel, QStandardItem, QFont
from PyQt5.QtCore import Qt

from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
import matplotlib.pyplot as plt

from ramp import User, Appliance, UseCase, get_day_type
import pandas as pd
from openpyxl import load_workbook
from openpyxl.worksheet.cell_range import CellRange

import matplotlib
import matplotlib.pyplot as plt

import os
from contextlib import redirect_stdout, redirect_stderr
from io import StringIO
import sys
import shutil

from PyQt5 import QtCore, QtGui, QtWidgets



# Will Show Errors and Messege in MessegeBox
class QTextEditLogger(QTextEdit):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setReadOnly(True)  # Set read-only mode

        # Set size and read-only mode
        self.setFixedSize(1850, 200)  # Adjust the size according to your needs
        self.setReadOnly(True)

        font = QFont()
        font.setPointSize(10)
        self.setFont(font)
        self.setVerticalScrollBarPolicy(Qt.ScrollBarAlwaysOn)

    def write(self, message):
        self.append(message)
        



class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setWindowModality(QtCore.Qt.NonModal)
        MainWindow.resize(1830, 1020)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("C:/Users/sonib/RAMP_logo_basic.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("border-color: rgb(252, 255, 255);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_34 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_34.setObjectName("gridLayout_34")
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.tabWidget = QtWidgets.QTabWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.tabWidget.sizePolicy().hasHeightForWidth())
        self.tabWidget.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.tabWidget.setFont(font)
        self.tabWidget.setObjectName("tabWidget")
        self.Ramp_Lite_tab = QtWidgets.QWidget()
        self.Ramp_Lite_tab.setObjectName("Ramp_Lite_tab")
        self.gridLayout_31 = QtWidgets.QGridLayout(self.Ramp_Lite_tab)
        self.gridLayout_31.setObjectName("gridLayout_31")
        self.splitter_4 = QtWidgets.QSplitter(self.Ramp_Lite_tab)
        self.splitter_4.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_4.setObjectName("splitter_4")
        self.layoutWidget = QtWidgets.QWidget(self.splitter_4)
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.gridLayout_36 = QtWidgets.QGridLayout()
        self.gridLayout_36.setObjectName("gridLayout_36")
        self.user_name_label_1 = QtWidgets.QLabel(self.layoutWidget)
        self.user_name_label_1.setMinimumSize(QtCore.QSize(0, 20))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.user_name_label_1.setFont(font)
        self.user_name_label_1.setObjectName("user_name_label_1")
        self.gridLayout_36.addWidget(self.user_name_label_1, 0, 0, 1, 1)
        self.user_name_lineEdit_1 = QtWidgets.QLineEdit(self.layoutWidget)
        self.user_name_lineEdit_1.setMinimumSize(QtCore.QSize(0, 31))
        self.user_name_lineEdit_1.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.user_name_lineEdit_1.setToolTipDuration(-1)
        self.user_name_lineEdit_1.setInputMask("")
        self.user_name_lineEdit_1.setObjectName("user_name_lineEdit_1")
        self.gridLayout_36.addWidget(self.user_name_lineEdit_1, 0, 1, 1, 1)

        self.verticalLayout_4.addLayout(self.gridLayout_36)
        self.label_106 = QtWidgets.QLabel(self.layoutWidget)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_106.setFont(font)
        self.label_106.setObjectName("label_106")
        self.verticalLayout_4.addWidget(self.label_106)
        self.scrollArea = QtWidgets.QScrollArea(self.layoutWidget)
        self.scrollArea.setEnabled(False)
        self.scrollArea.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.scrollArea.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.scrollArea.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.scrollArea.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.scrollArea.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContentsOnFirstShow)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 647, 13272))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontallayout_1 = QtWidgets.QHBoxLayout()
        self.horizontallayout_1.setObjectName("horizontallayout_1")
        self.appliancename_label_1 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_1.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_1.setFont(font)
        self.appliancename_label_1.setObjectName("appliancename_label_1")
        self.horizontallayout_1.addWidget(self.appliancename_label_1)
        self.appliancename_lineEdit_1 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_1.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_1.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_1.setObjectName("appliancename_lineEdit_1")
        self.horizontallayout_1.addWidget(self.appliancename_lineEdit_1)
        self.Togglebutton_1 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_1.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_1.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_1.setObjectName("Togglebutton_1")
        self.horizontallayout_1.addWidget(self.Togglebutton_1)
        self.verticalLayout.addLayout(self.horizontallayout_1)
        self.widget_1 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        self.widget_1.setEnabled(False)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_1.setPalette(palette)
        self.widget_1.setTabletTracking(False)
        self.widget_1.setAutoFillBackground(False)
        self.widget_1.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_1.setObjectName("widget_1")
        self.gridLayout = QtWidgets.QGridLayout(self.widget_1)
        self.gridLayout.setObjectName("gridLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 3, 5, 1, 3)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 7, 5, 1, 3)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 3, 0, 1, 4)
        self.line_3 = QtWidgets.QFrame(self.widget_1)
        self.line_3.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_3.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_3.setObjectName("line_3")
        self.gridLayout.addWidget(self.line_3, 0, 4, 3, 1)
        self.power_1 = QtWidgets.QLabel(self.widget_1)
        self.power_1.setMinimumSize(QtCore.QSize(0, 31))
        self.power_1.setObjectName("power_1")
        self.gridLayout.addWidget(self.power_1, 0, 5, 1, 1)
        self.number_1 = QtWidgets.QLabel(self.widget_1)
        self.number_1.setMinimumSize(QtCore.QSize(151, 31))
        self.number_1.setObjectName("number_1")
        self.gridLayout.addWidget(self.number_1, 0, 0, 1, 3)
        self.power_spinBox_1 = QtWidgets.QSpinBox(self.widget_1)
        self.power_spinBox_1.setMinimumSize(QtCore.QSize(97, 31))
        self.power_spinBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_1.setMaximum(999999999)
        self.power_spinBox_1.setObjectName("power_spinBox_1")
        self.gridLayout.addWidget(self.power_spinBox_1, 0, 6, 1, 3)
        self.number_spinBox_1 = QtWidgets.QSpinBox(self.widget_1)
        self.number_spinBox_1.setMinimumSize(QtCore.QSize(97, 31))
        self.number_spinBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_1.setMinimum(1)
        self.number_spinBox_1.setMaximum(999999999)
        self.number_spinBox_1.setProperty("value", 1)
        self.number_spinBox_1.setObjectName("number_spinBox_1")
        self.gridLayout.addWidget(self.number_spinBox_1, 0, 3, 1, 1)
        self.r_var_spinBox_1 = QtWidgets.QSpinBox(self.widget_1)
        self.r_var_spinBox_1.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_1.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_1.setMaximum(100)
        self.r_var_spinBox_1.setObjectName("r_var_spinBox_1")
        self.gridLayout.addWidget(self.r_var_spinBox_1, 8, 3, 1, 1)
        self.line = QtWidgets.QFrame(self.widget_1)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 8, 4, 3, 1)
        self.wd_we_comboBox_1 = QtWidgets.QComboBox(self.widget_1)
        self.wd_we_comboBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_1.setObjectName("wd_we_comboBox_1")
        self.wd_we_comboBox_1.addItem("")
        self.wd_we_comboBox_1.addItem("")
        self.wd_we_comboBox_1.addItem("")
        self.gridLayout.addWidget(self.wd_we_comboBox_1, 2, 6, 1, 3)
        self.num_windows_spinBox_1 = QtWidgets.QSpinBox(self.widget_1)
        self.num_windows_spinBox_1.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_1.setMinimum(1)
        self.num_windows_spinBox_1.setMaximum(3)
        self.num_windows_spinBox_1.setObjectName("num_windows_spinBox_1")
        self.gridLayout.addWidget(self.num_windows_spinBox_1, 1, 8, 1, 1)
        self.num_windows_1 = QtWidgets.QLabel(self.widget_1)
        self.num_windows_1.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_1.setObjectName("num_windows_1")
        self.gridLayout.addWidget(self.num_windows_1, 1, 5, 1, 3)
        self.w1start_1 = QtWidgets.QLabel(self.widget_1)
        self.w1start_1.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_1.setObjectName("w1start_1")
        self.gridLayout.addWidget(self.w1start_1, 4, 0, 1, 1)
        self.function_time_spinBox_1 = QtWidgets.QSpinBox(self.widget_1)
        self.function_time_spinBox_1.setMinimumSize(QtCore.QSize(97, 31))
        self.function_time_spinBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_1.setMaximum(1440)
        self.function_time_spinBox_1.setProperty("value", 0)
        self.function_time_spinBox_1.setObjectName("function_time_spinBox_1")
        self.gridLayout.addWidget(self.function_time_spinBox_1, 1, 3, 1, 1)
        self.label_5 = QtWidgets.QLabel(self.widget_1)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 6, 4, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.widget_1)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 4, 4, 1, 1)
        self.wd_we_1 = QtWidgets.QLabel(self.widget_1)
        self.wd_we_1.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_1.setObjectName("wd_we_1")
        self.gridLayout.addWidget(self.wd_we_1, 2, 5, 1, 1)
        self.function_time_1 = QtWidgets.QLabel(self.widget_1)
        self.function_time_1.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_1.setObjectName("function_time_1")
        self.gridLayout.addWidget(self.function_time_1, 1, 0, 1, 3)
        self.label_4 = QtWidgets.QLabel(self.widget_1)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 5, 4, 1, 1)
        self.r_var_1 = QtWidgets.QLabel(self.widget_1)
        self.r_var_1.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_1.setObjectName("r_var_1")
        self.gridLayout.addWidget(self.r_var_1, 8, 0, 1, 3)
        self.occationaluse_1 = QtWidgets.QLabel(self.widget_1)
        self.occationaluse_1.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_1.setObjectName("occationaluse_1")
        self.gridLayout.addWidget(self.occationaluse_1, 2, 0, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem3, 7, 0, 1, 4)
        self.occationaluse_spinBox_1 = QtWidgets.QSpinBox(self.widget_1)
        self.occationaluse_spinBox_1.setMinimumSize(QtCore.QSize(97, 31))
        self.occationaluse_spinBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_1.setMinimum(1)
        self.occationaluse_spinBox_1.setMaximum(100)
        self.occationaluse_spinBox_1.setProperty("value", 100)
        self.occationaluse_spinBox_1.setObjectName("occationaluse_spinBox_1")
        self.gridLayout.addWidget(self.occationaluse_spinBox_1, 2, 3, 1, 1)
        self.func_cycle_spinBox_1 = QtWidgets.QSpinBox(self.widget_1)
        self.func_cycle_spinBox_1.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_1.setMaximum(1440)
        self.func_cycle_spinBox_1.setProperty("value", 1)
        self.func_cycle_spinBox_1.setObjectName("func_cycle_spinBox_1")
        self.gridLayout.addWidget(self.func_cycle_spinBox_1, 9, 7, 1, 2)
        self.fixed_1 = QtWidgets.QLabel(self.widget_1)
        self.fixed_1.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_1.setObjectName("fixed_1")
        self.gridLayout.addWidget(self.fixed_1, 10, 0, 1, 1)
        self.tfrv_1 = QtWidgets.QLabel(self.widget_1)
        self.tfrv_1.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_1.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_1.setObjectName("tfrv_1")
        self.gridLayout.addWidget(self.tfrv_1, 8, 5, 1, 2)
        self.flat_1 = QtWidgets.QLabel(self.widget_1)
        self.flat_1.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_1.setObjectName("flat_1")
        self.gridLayout.addWidget(self.flat_1, 10, 5, 1, 1)
        self.tfrv_spinBox_1 = QtWidgets.QSpinBox(self.widget_1)
        self.tfrv_spinBox_1.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_1.setMaximum(100)
        self.tfrv_spinBox_1.setObjectName("tfrv_spinBox_1")
        self.gridLayout.addWidget(self.tfrv_spinBox_1, 8, 8, 1, 1)
        self.flat_comboBox_1 = QtWidgets.QComboBox(self.widget_1)
        self.flat_comboBox_1.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_1.setObjectName("flat_comboBox_1")
        self.flat_comboBox_1.addItem("")
        self.flat_comboBox_1.addItem("")
        self.gridLayout.addWidget(self.flat_comboBox_1, 10, 7, 1, 2)
        self.thermal_v_spinBox_1 = QtWidgets.QSpinBox(self.widget_1)
        self.thermal_v_spinBox_1.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_1.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_1.setMaximum(100)
        self.thermal_v_spinBox_1.setObjectName("thermal_v_spinBox_1")
        self.gridLayout.addWidget(self.thermal_v_spinBox_1, 9, 3, 1, 1)
        self.fixe_comboBox_1 = QtWidgets.QComboBox(self.widget_1)
        self.fixe_comboBox_1.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_1.setObjectName("fixe_comboBox_1")
        self.fixe_comboBox_1.addItem("")
        self.fixe_comboBox_1.addItem("")
        self.gridLayout.addWidget(self.fixe_comboBox_1, 10, 3, 1, 1)
        self.func_cycle_1 = QtWidgets.QLabel(self.widget_1)
        self.func_cycle_1.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_1.setObjectName("func_cycle_1")
        self.gridLayout.addWidget(self.func_cycle_1, 9, 5, 1, 1)
        self.thermal_v_1 = QtWidgets.QLabel(self.widget_1)
        self.thermal_v_1.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_1.setObjectName("thermal_v_1")
        self.gridLayout.addWidget(self.thermal_v_1, 9, 0, 1, 3)
        self.w1start_timeEdit_1 = QtWidgets.QTimeEdit(self.widget_1)
        self.w1start_timeEdit_1.setMinimumSize(QtCore.QSize(97, 31))
        self.w1start_timeEdit_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_1.setObjectName("w1start_timeEdit_1")
        self.gridLayout.addWidget(self.w1start_timeEdit_1, 4, 3, 1, 1)
        self.w2end_1 = QtWidgets.QLabel(self.widget_1)
        self.w2end_1.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_1.setObjectName("w2end_1")
        self.gridLayout.addWidget(self.w2end_1, 5, 5, 1, 1)
        self.w2start_1 = QtWidgets.QLabel(self.widget_1)
        self.w2start_1.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_1.setObjectName("w2start_1")
        self.gridLayout.addWidget(self.w2start_1, 5, 0, 1, 2)
        self.w1end_timeEdit_1 = QtWidgets.QTimeEdit(self.widget_1)
        self.w1end_timeEdit_1.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_1.setObjectName("w1end_timeEdit_1")
        self.gridLayout.addWidget(self.w1end_timeEdit_1, 4, 6, 1, 2)
        self.w2start_timeEdit_1 = QtWidgets.QTimeEdit(self.widget_1)
        self.w2start_timeEdit_1.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_1.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_1.setObjectName("w2start_timeEdit_1")
        self.gridLayout.addWidget(self.w2start_timeEdit_1, 5, 3, 1, 1)
        self.w3start_1 = QtWidgets.QLabel(self.widget_1)
        self.w3start_1.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_1.setObjectName("w3start_1")
        self.gridLayout.addWidget(self.w3start_1, 6, 0, 1, 3)
        self.w1end_1 = QtWidgets.QLabel(self.widget_1)
        self.w1end_1.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_1.setObjectName("w1end_1")
        self.gridLayout.addWidget(self.w1end_1, 4, 5, 1, 1)
        self.w3end_1 = QtWidgets.QLabel(self.widget_1)
        self.w3end_1.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_1.setObjectName("w3end_1")
        self.gridLayout.addWidget(self.w3end_1, 6, 5, 1, 1)
        self.w2end_timeEdit_1 = QtWidgets.QTimeEdit(self.widget_1)
        self.w2end_timeEdit_1.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_1.setObjectName("w2end_timeEdit_1")
        self.gridLayout.addWidget(self.w2end_timeEdit_1, 5, 6, 1, 2)
        self.w3start_timeEdit_1 = QtWidgets.QTimeEdit(self.widget_1)
        self.w3start_timeEdit_1.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_1.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_1.setObjectName("w3start_timeEdit_1")
        self.gridLayout.addWidget(self.w3start_timeEdit_1, 6, 3, 1, 1)
        self.w3end_timeEdit_1 = QtWidgets.QTimeEdit(self.widget_1)
        self.w3end_timeEdit_1.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_1.setObjectName("w3end_timeEdit_1")
        self.gridLayout.addWidget(self.w3end_timeEdit_1, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_1)
        self.horizontallayout_2 = QtWidgets.QHBoxLayout()
        self.horizontallayout_2.setObjectName("horizontallayout_2")
        self.appliancename_label_2 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_2.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_2.setFont(font)
        self.appliancename_label_2.setObjectName("appliancename_label_2")
        self.horizontallayout_2.addWidget(self.appliancename_label_2)
        self.appliancename_lineEdit_2 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_2.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_2.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_2.setObjectName("appliancename_lineEdit_2")
        self.horizontallayout_2.addWidget(self.appliancename_lineEdit_2)
        self.Togglebutton_2 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_2.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_2.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_2.setObjectName("Togglebutton_2")
        self.horizontallayout_2.addWidget(self.Togglebutton_2)
        self.verticalLayout.addLayout(self.horizontallayout_2)
        self.widget_2 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        self.widget_2.setEnabled(False)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_2.setPalette(palette)
        self.widget_2.setTabletTracking(False)
        self.widget_2.setAutoFillBackground(False)
        self.widget_2.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_2.setObjectName("widget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget_2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem4, 3, 5, 1, 3)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem5, 7, 5, 1, 3)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem6, 3, 0, 1, 4)
        self.line_4 = QtWidgets.QFrame(self.widget_2)
        self.line_4.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_4.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_4.setObjectName("line_4")
        self.gridLayout_2.addWidget(self.line_4, 0, 4, 3, 1)
        self.power_2 = QtWidgets.QLabel(self.widget_2)
        self.power_2.setMinimumSize(QtCore.QSize(0, 31))
        self.power_2.setObjectName("power_2")
        self.gridLayout_2.addWidget(self.power_2, 0, 5, 1, 1)
        self.number_2 = QtWidgets.QLabel(self.widget_2)
        self.number_2.setMinimumSize(QtCore.QSize(151, 31))
        self.number_2.setObjectName("number_2")
        self.gridLayout_2.addWidget(self.number_2, 0, 0, 1, 3)
        self.power_spinBox_2 = QtWidgets.QSpinBox(self.widget_2)
        self.power_spinBox_2.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_2.setMaximum(999999999)
        self.power_spinBox_2.setObjectName("power_spinBox_2")
        self.gridLayout_2.addWidget(self.power_spinBox_2, 0, 6, 1, 3)
        self.number_spinBox_2 = QtWidgets.QSpinBox(self.widget_2)
        self.number_spinBox_2.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_2.setMinimum(1)
        self.number_spinBox_2.setMaximum(999999999)
        self.number_spinBox_2.setProperty("value", 1)
        self.number_spinBox_2.setObjectName("number_spinBox_2")
        self.gridLayout_2.addWidget(self.number_spinBox_2, 0, 3, 1, 1)
        self.r_var_spinBox_2 = QtWidgets.QSpinBox(self.widget_2)
        self.r_var_spinBox_2.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_2.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_2.setMaximum(100)
        self.r_var_spinBox_2.setObjectName("r_var_spinBox_2")
        self.gridLayout_2.addWidget(self.r_var_spinBox_2, 8, 3, 1, 1)
        self.line_5 = QtWidgets.QFrame(self.widget_2)
        self.line_5.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_5.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_5.setObjectName("line_5")
        self.gridLayout_2.addWidget(self.line_5, 8, 4, 3, 1)
        self.wd_we_comboBox_2 = QtWidgets.QComboBox(self.widget_2)
        self.wd_we_comboBox_2.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_2.setObjectName("wd_we_comboBox_2")
        self.wd_we_comboBox_2.addItem("")
        self.wd_we_comboBox_2.addItem("")
        self.wd_we_comboBox_2.addItem("")
        self.gridLayout_2.addWidget(self.wd_we_comboBox_2, 2, 6, 1, 3)
        self.num_windows_spinBox_2 = QtWidgets.QSpinBox(self.widget_2)
        self.num_windows_spinBox_2.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_2.setMinimum(1)
        self.num_windows_spinBox_2.setMaximum(3)
        self.num_windows_spinBox_2.setObjectName("num_windows_spinBox_2")
        self.gridLayout_2.addWidget(self.num_windows_spinBox_2, 1, 8, 1, 1)
        self.num_windows_2 = QtWidgets.QLabel(self.widget_2)
        self.num_windows_2.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_2.setObjectName("num_windows_2")
        self.gridLayout_2.addWidget(self.num_windows_2, 1, 5, 1, 3)
        self.w1start_2 = QtWidgets.QLabel(self.widget_2)
        self.w1start_2.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_2.setObjectName("w1start_2")
        self.gridLayout_2.addWidget(self.w1start_2, 4, 0, 1, 1)
        self.function_time_spinBox_2 = QtWidgets.QSpinBox(self.widget_2)
        self.function_time_spinBox_2.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_2.setMaximum(1440)
        self.function_time_spinBox_2.setProperty("value", 0)
        self.function_time_spinBox_2.setObjectName("function_time_spinBox_2")
        self.gridLayout_2.addWidget(self.function_time_spinBox_2, 1, 3, 1, 1)
        self.label_12 = QtWidgets.QLabel(self.widget_2)
        self.label_12.setObjectName("label_12")
        self.gridLayout_2.addWidget(self.label_12, 6, 4, 1, 1)
        self.label_13 = QtWidgets.QLabel(self.widget_2)
        self.label_13.setObjectName("label_13")
        self.gridLayout_2.addWidget(self.label_13, 4, 4, 1, 1)
        self.wd_we_2 = QtWidgets.QLabel(self.widget_2)
        self.wd_we_2.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_2.setObjectName("wd_we_2")
        self.gridLayout_2.addWidget(self.wd_we_2, 2, 5, 1, 1)
        self.function_time_2 = QtWidgets.QLabel(self.widget_2)
        self.function_time_2.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_2.setObjectName("function_time_2")
        self.gridLayout_2.addWidget(self.function_time_2, 1, 0, 1, 3)
        self.label_14 = QtWidgets.QLabel(self.widget_2)
        self.label_14.setObjectName("label_14")
        self.gridLayout_2.addWidget(self.label_14, 5, 4, 1, 1)
        self.r_var_2 = QtWidgets.QLabel(self.widget_2)
        self.r_var_2.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_2.setObjectName("r_var_2")
        self.gridLayout_2.addWidget(self.r_var_2, 8, 0, 1, 3)
        self.occationaluse_2 = QtWidgets.QLabel(self.widget_2)
        self.occationaluse_2.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_2.setObjectName("occationaluse_2")
        self.gridLayout_2.addWidget(self.occationaluse_2, 2, 0, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_2.addItem(spacerItem7, 7, 0, 1, 4)
        self.occationaluse_spinBox_2 = QtWidgets.QSpinBox(self.widget_2)
        self.occationaluse_spinBox_2.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_2.setMinimum(1)
        self.occationaluse_spinBox_2.setMaximum(100)
        self.occationaluse_spinBox_2.setProperty("value", 100)
        self.occationaluse_spinBox_2.setObjectName("occationaluse_spinBox_2")
        self.gridLayout_2.addWidget(self.occationaluse_spinBox_2, 2, 3, 1, 1)
        self.func_cycle_spinBox_2 = QtWidgets.QSpinBox(self.widget_2)
        self.func_cycle_spinBox_2.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_2.setMaximum(1440)
        self.func_cycle_spinBox_2.setProperty("value", 1)
        self.func_cycle_spinBox_2.setObjectName("func_cycle_spinBox_2")
        self.gridLayout_2.addWidget(self.func_cycle_spinBox_2, 9, 7, 1, 2)
        self.fixed_2 = QtWidgets.QLabel(self.widget_2)
        self.fixed_2.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_2.setObjectName("fixed_2")
        self.gridLayout_2.addWidget(self.fixed_2, 10, 0, 1, 1)
        self.tfrv_2 = QtWidgets.QLabel(self.widget_2)
        self.tfrv_2.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_2.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_2.setObjectName("tfrv_2")
        self.gridLayout_2.addWidget(self.tfrv_2, 8, 5, 1, 2)
        self.flat_2 = QtWidgets.QLabel(self.widget_2)
        self.flat_2.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_2.setObjectName("flat_2")
        self.gridLayout_2.addWidget(self.flat_2, 10, 5, 1, 1)
        self.tfrv_spinBox_2 = QtWidgets.QSpinBox(self.widget_2)
        self.tfrv_spinBox_2.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_2.setMaximum(100)
        self.tfrv_spinBox_2.setObjectName("tfrv_spinBox_2")
        self.gridLayout_2.addWidget(self.tfrv_spinBox_2, 8, 8, 1, 1)
        self.flat_comboBox_2 = QtWidgets.QComboBox(self.widget_2)
        self.flat_comboBox_2.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_2.setObjectName("flat_comboBox_2")
        self.flat_comboBox_2.addItem("")
        self.flat_comboBox_2.addItem("")
        self.gridLayout_2.addWidget(self.flat_comboBox_2, 10, 7, 1, 2)
        self.thermal_v_spinBox_2 = QtWidgets.QSpinBox(self.widget_2)
        self.thermal_v_spinBox_2.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_2.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_2.setMaximum(100)
        self.thermal_v_spinBox_2.setObjectName("thermal_v_spinBox_2")
        self.gridLayout_2.addWidget(self.thermal_v_spinBox_2, 9, 3, 1, 1)
        self.fixe_comboBox_2 = QtWidgets.QComboBox(self.widget_2)
        self.fixe_comboBox_2.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_2.setObjectName("fixe_comboBox_2")
        self.fixe_comboBox_2.addItem("")
        self.fixe_comboBox_2.addItem("")
        self.gridLayout_2.addWidget(self.fixe_comboBox_2, 10, 3, 1, 1)
        self.func_cycle_2 = QtWidgets.QLabel(self.widget_2)
        self.func_cycle_2.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_2.setObjectName("func_cycle_2")
        self.gridLayout_2.addWidget(self.func_cycle_2, 9, 5, 1, 1)
        self.thermal_v_2 = QtWidgets.QLabel(self.widget_2)
        self.thermal_v_2.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_2.setObjectName("thermal_v_2")
        self.gridLayout_2.addWidget(self.thermal_v_2, 9, 0, 1, 3)
        self.w1start_timeEdit_2 = QtWidgets.QTimeEdit(self.widget_2)
        self.w1start_timeEdit_2.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_2.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_2.setObjectName("w1start_timeEdit_2")
        self.gridLayout_2.addWidget(self.w1start_timeEdit_2, 4, 3, 1, 1)
        self.w2end_2 = QtWidgets.QLabel(self.widget_2)
        self.w2end_2.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_2.setObjectName("w2end_2")
        self.gridLayout_2.addWidget(self.w2end_2, 5, 5, 1, 1)
        self.w2start_2 = QtWidgets.QLabel(self.widget_2)
        self.w2start_2.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_2.setObjectName("w2start_2")
        self.gridLayout_2.addWidget(self.w2start_2, 5, 0, 1, 2)
        self.w1end_timeEdit_2 = QtWidgets.QTimeEdit(self.widget_2)
        self.w1end_timeEdit_2.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_2.setObjectName("w1end_timeEdit_2")
        self.gridLayout_2.addWidget(self.w1end_timeEdit_2, 4, 6, 1, 2)
        self.w2start_timeEdit_2 = QtWidgets.QTimeEdit(self.widget_2)
        self.w2start_timeEdit_2.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_2.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_2.setObjectName("w2start_timeEdit_2")
        self.gridLayout_2.addWidget(self.w2start_timeEdit_2, 5, 3, 1, 1)
        self.w3start_2 = QtWidgets.QLabel(self.widget_2)
        self.w3start_2.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_2.setObjectName("w3start_2")
        self.gridLayout_2.addWidget(self.w3start_2, 6, 0, 1, 3)
        self.w1end_2 = QtWidgets.QLabel(self.widget_2)
        self.w1end_2.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_2.setObjectName("w1end_2")
        self.gridLayout_2.addWidget(self.w1end_2, 4, 5, 1, 1)
        self.w3end_2 = QtWidgets.QLabel(self.widget_2)
        self.w3end_2.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_2.setObjectName("w3end_2")
        self.gridLayout_2.addWidget(self.w3end_2, 6, 5, 1, 1)
        self.w2end_timeEdit_2 = QtWidgets.QTimeEdit(self.widget_2)
        self.w2end_timeEdit_2.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_2.setObjectName("w2end_timeEdit_2")
        self.gridLayout_2.addWidget(self.w2end_timeEdit_2, 5, 6, 1, 2)
        self.w3start_timeEdit_2 = QtWidgets.QTimeEdit(self.widget_2)
        self.w3start_timeEdit_2.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_2.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_2.setObjectName("w3start_timeEdit_2")
        self.gridLayout_2.addWidget(self.w3start_timeEdit_2, 6, 3, 1, 1)
        self.w3end_timeEdit_2 = QtWidgets.QTimeEdit(self.widget_2)
        self.w3end_timeEdit_2.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_2.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_2.setObjectName("w3end_timeEdit_2")
        self.gridLayout_2.addWidget(self.w3end_timeEdit_2, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_2)
        self.horizontallayout_3 = QtWidgets.QHBoxLayout()
        self.horizontallayout_3.setObjectName("horizontallayout_3")
        self.appliancename_label_3 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_3.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_3.setFont(font)
        self.appliancename_label_3.setObjectName("appliancename_label_3")
        self.horizontallayout_3.addWidget(self.appliancename_label_3)
        self.appliancename_lineEdit_3 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_3.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_3.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_3.setObjectName("appliancename_lineEdit_3")
        self.horizontallayout_3.addWidget(self.appliancename_lineEdit_3)
        self.Togglebutton_3 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_3.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_3.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_3.setObjectName("Togglebutton_3")
        self.horizontallayout_3.addWidget(self.Togglebutton_3)
        self.verticalLayout.addLayout(self.horizontallayout_3)
        self.widget_3 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        self.widget_3.setEnabled(False)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_3.setPalette(palette)
        self.widget_3.setTabletTracking(False)
        self.widget_3.setAutoFillBackground(False)
        self.widget_3.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_3.setObjectName("widget_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.widget_3)
        self.gridLayout_3.setObjectName("gridLayout_3")
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem8, 3, 5, 1, 3)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem9, 7, 5, 1, 3)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem10, 3, 0, 1, 4)
        self.line_6 = QtWidgets.QFrame(self.widget_3)
        self.line_6.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_6.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_6.setObjectName("line_6")
        self.gridLayout_3.addWidget(self.line_6, 0, 4, 3, 1)
        self.power_3 = QtWidgets.QLabel(self.widget_3)
        self.power_3.setMinimumSize(QtCore.QSize(0, 31))
        self.power_3.setObjectName("power_3")
        self.gridLayout_3.addWidget(self.power_3, 0, 5, 1, 1)
        self.number_3 = QtWidgets.QLabel(self.widget_3)
        self.number_3.setMinimumSize(QtCore.QSize(151, 31))
        self.number_3.setObjectName("number_3")
        self.gridLayout_3.addWidget(self.number_3, 0, 0, 1, 3)
        self.power_spinBox_3 = QtWidgets.QSpinBox(self.widget_3)
        self.power_spinBox_3.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_3.setMaximum(999999999)
        self.power_spinBox_3.setObjectName("power_spinBox_3")
        self.gridLayout_3.addWidget(self.power_spinBox_3, 0, 6, 1, 3)
        self.number_spinBox_3 = QtWidgets.QSpinBox(self.widget_3)
        self.number_spinBox_3.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_3.setMinimum(1)
        self.number_spinBox_3.setMaximum(999999999)
        self.number_spinBox_3.setProperty("value", 1)
        self.number_spinBox_3.setObjectName("number_spinBox_3")
        self.gridLayout_3.addWidget(self.number_spinBox_3, 0, 3, 1, 1)
        self.r_var_spinBox_3 = QtWidgets.QSpinBox(self.widget_3)
        self.r_var_spinBox_3.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_3.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_3.setMaximum(100)
        self.r_var_spinBox_3.setObjectName("r_var_spinBox_3")
        self.gridLayout_3.addWidget(self.r_var_spinBox_3, 8, 3, 1, 1)
        self.line_7 = QtWidgets.QFrame(self.widget_3)
        self.line_7.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_7.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_7.setObjectName("line_7")
        self.gridLayout_3.addWidget(self.line_7, 8, 4, 3, 1)
        self.wd_we_comboBox_3 = QtWidgets.QComboBox(self.widget_3)
        self.wd_we_comboBox_3.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_3.setObjectName("wd_we_comboBox_3")
        self.wd_we_comboBox_3.addItem("")
        self.wd_we_comboBox_3.addItem("")
        self.wd_we_comboBox_3.addItem("")
        self.gridLayout_3.addWidget(self.wd_we_comboBox_3, 2, 6, 1, 3)
        self.num_windows_spinBox_3 = QtWidgets.QSpinBox(self.widget_3)
        self.num_windows_spinBox_3.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_3.setMinimum(1)
        self.num_windows_spinBox_3.setMaximum(3)
        self.num_windows_spinBox_3.setObjectName("num_windows_spinBox_3")
        self.gridLayout_3.addWidget(self.num_windows_spinBox_3, 1, 8, 1, 1)
        self.num_windows_3 = QtWidgets.QLabel(self.widget_3)
        self.num_windows_3.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_3.setObjectName("num_windows_3")
        self.gridLayout_3.addWidget(self.num_windows_3, 1, 5, 1, 3)
        self.w1start_3 = QtWidgets.QLabel(self.widget_3)
        self.w1start_3.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_3.setObjectName("w1start_3")
        self.gridLayout_3.addWidget(self.w1start_3, 4, 0, 1, 1)
        self.function_time_spinBox_3 = QtWidgets.QSpinBox(self.widget_3)
        self.function_time_spinBox_3.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_3.setMaximum(1440)
        self.function_time_spinBox_3.setProperty("value", 0)
        self.function_time_spinBox_3.setObjectName("function_time_spinBox_3")
        self.gridLayout_3.addWidget(self.function_time_spinBox_3, 1, 3, 1, 1)
        self.label_15 = QtWidgets.QLabel(self.widget_3)
        self.label_15.setObjectName("label_15")
        self.gridLayout_3.addWidget(self.label_15, 6, 4, 1, 1)
        self.label_16 = QtWidgets.QLabel(self.widget_3)
        self.label_16.setObjectName("label_16")
        self.gridLayout_3.addWidget(self.label_16, 4, 4, 1, 1)
        self.wd_we_3 = QtWidgets.QLabel(self.widget_3)
        self.wd_we_3.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_3.setObjectName("wd_we_3")
        self.gridLayout_3.addWidget(self.wd_we_3, 2, 5, 1, 1)
        self.function_time_3 = QtWidgets.QLabel(self.widget_3)
        self.function_time_3.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_3.setObjectName("function_time_3")
        self.gridLayout_3.addWidget(self.function_time_3, 1, 0, 1, 3)
        self.label_17 = QtWidgets.QLabel(self.widget_3)
        self.label_17.setObjectName("label_17")
        self.gridLayout_3.addWidget(self.label_17, 5, 4, 1, 1)
        self.r_var_3 = QtWidgets.QLabel(self.widget_3)
        self.r_var_3.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_3.setObjectName("r_var_3")
        self.gridLayout_3.addWidget(self.r_var_3, 8, 0, 1, 3)
        self.occationaluse_3 = QtWidgets.QLabel(self.widget_3)
        self.occationaluse_3.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_3.setObjectName("occationaluse_3")
        self.gridLayout_3.addWidget(self.occationaluse_3, 2, 0, 1, 1)
        spacerItem11 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem11, 7, 0, 1, 4)
        self.occationaluse_spinBox_3 = QtWidgets.QSpinBox(self.widget_3)
        self.occationaluse_spinBox_3.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_3.setMinimum(1)
        self.occationaluse_spinBox_3.setMaximum(100)
        self.occationaluse_spinBox_3.setProperty("value", 100)
        self.occationaluse_spinBox_3.setObjectName("occationaluse_spinBox_3")
        self.gridLayout_3.addWidget(self.occationaluse_spinBox_3, 2, 3, 1, 1)
        self.func_cycle_spinBox_3 = QtWidgets.QSpinBox(self.widget_3)
        self.func_cycle_spinBox_3.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_3.setMaximum(1440)
        self.func_cycle_spinBox_3.setProperty("value", 1)
        self.func_cycle_spinBox_3.setObjectName("func_cycle_spinBox_3")
        self.gridLayout_3.addWidget(self.func_cycle_spinBox_3, 9, 7, 1, 2)
        self.fixed_3 = QtWidgets.QLabel(self.widget_3)
        self.fixed_3.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_3.setObjectName("fixed_3")
        self.gridLayout_3.addWidget(self.fixed_3, 10, 0, 1, 1)
        self.tfrv_3 = QtWidgets.QLabel(self.widget_3)
        self.tfrv_3.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_3.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_3.setObjectName("tfrv_3")
        self.gridLayout_3.addWidget(self.tfrv_3, 8, 5, 1, 2)
        self.flat_3 = QtWidgets.QLabel(self.widget_3)
        self.flat_3.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_3.setObjectName("flat_3")
        self.gridLayout_3.addWidget(self.flat_3, 10, 5, 1, 1)
        self.tfrv_spinBox_3 = QtWidgets.QSpinBox(self.widget_3)
        self.tfrv_spinBox_3.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_3.setMaximum(100)
        self.tfrv_spinBox_3.setObjectName("tfrv_spinBox_3")
        self.gridLayout_3.addWidget(self.tfrv_spinBox_3, 8, 8, 1, 1)
        self.flat_comboBox_3 = QtWidgets.QComboBox(self.widget_3)
        self.flat_comboBox_3.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_3.setObjectName("flat_comboBox_3")
        self.flat_comboBox_3.addItem("")
        self.flat_comboBox_3.addItem("")
        self.gridLayout_3.addWidget(self.flat_comboBox_3, 10, 7, 1, 2)
        self.thermal_v_spinBox_3 = QtWidgets.QSpinBox(self.widget_3)
        self.thermal_v_spinBox_3.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_3.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_3.setMaximum(100)
        self.thermal_v_spinBox_3.setObjectName("thermal_v_spinBox_3")
        self.gridLayout_3.addWidget(self.thermal_v_spinBox_3, 9, 3, 1, 1)
        self.fixe_comboBox_3 = QtWidgets.QComboBox(self.widget_3)
        self.fixe_comboBox_3.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_3.setObjectName("fixe_comboBox_3")
        self.fixe_comboBox_3.addItem("")
        self.fixe_comboBox_3.addItem("")
        self.gridLayout_3.addWidget(self.fixe_comboBox_3, 10, 3, 1, 1)
        self.func_cycle_3 = QtWidgets.QLabel(self.widget_3)
        self.func_cycle_3.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_3.setObjectName("func_cycle_3")
        self.gridLayout_3.addWidget(self.func_cycle_3, 9, 5, 1, 1)
        self.thermal_v_3 = QtWidgets.QLabel(self.widget_3)
        self.thermal_v_3.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_3.setObjectName("thermal_v_3")
        self.gridLayout_3.addWidget(self.thermal_v_3, 9, 0, 1, 3)
        self.w1start_timeEdit_3 = QtWidgets.QTimeEdit(self.widget_3)
        self.w1start_timeEdit_3.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_3.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_3.setObjectName("w1start_timeEdit_3")
        self.gridLayout_3.addWidget(self.w1start_timeEdit_3, 4, 3, 1, 1)
        self.w2end_3 = QtWidgets.QLabel(self.widget_3)
        self.w2end_3.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_3.setObjectName("w2end_3")
        self.gridLayout_3.addWidget(self.w2end_3, 5, 5, 1, 1)
        self.w2start_3 = QtWidgets.QLabel(self.widget_3)
        self.w2start_3.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_3.setObjectName("w2start_3")
        self.gridLayout_3.addWidget(self.w2start_3, 5, 0, 1, 2)
        self.w1end_timeEdit_3 = QtWidgets.QTimeEdit(self.widget_3)
        self.w1end_timeEdit_3.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_3.setObjectName("w1end_timeEdit_3")
        self.gridLayout_3.addWidget(self.w1end_timeEdit_3, 4, 6, 1, 2)
        self.w2start_timeEdit_3 = QtWidgets.QTimeEdit(self.widget_3)
        self.w2start_timeEdit_3.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_3.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_3.setObjectName("w2start_timeEdit_3")
        self.gridLayout_3.addWidget(self.w2start_timeEdit_3, 5, 3, 1, 1)
        self.w3start_3 = QtWidgets.QLabel(self.widget_3)
        self.w3start_3.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_3.setObjectName("w3start_3")
        self.gridLayout_3.addWidget(self.w3start_3, 6, 0, 1, 3)
        self.w1end_3 = QtWidgets.QLabel(self.widget_3)
        self.w1end_3.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_3.setObjectName("w1end_3")
        self.gridLayout_3.addWidget(self.w1end_3, 4, 5, 1, 1)
        self.w3end_3 = QtWidgets.QLabel(self.widget_3)
        self.w3end_3.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_3.setObjectName("w3end_3")
        self.gridLayout_3.addWidget(self.w3end_3, 6, 5, 1, 1)
        self.w2end_timeEdit_3 = QtWidgets.QTimeEdit(self.widget_3)
        self.w2end_timeEdit_3.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_3.setObjectName("w2end_timeEdit_3")
        self.gridLayout_3.addWidget(self.w2end_timeEdit_3, 5, 6, 1, 2)
        self.w3start_timeEdit_3 = QtWidgets.QTimeEdit(self.widget_3)
        self.w3start_timeEdit_3.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_3.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_3.setObjectName("w3start_timeEdit_3")
        self.gridLayout_3.addWidget(self.w3start_timeEdit_3, 6, 3, 1, 1)
        self.w3end_timeEdit_3 = QtWidgets.QTimeEdit(self.widget_3)
        self.w3end_timeEdit_3.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_3.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_3.setObjectName("w3end_timeEdit_3")
        self.gridLayout_3.addWidget(self.w3end_timeEdit_3, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_3)
        self.horizontallayout_4 = QtWidgets.QHBoxLayout()
        self.horizontallayout_4.setObjectName("horizontallayout_4")
        self.appliancename_label_4 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_4.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_4.setFont(font)
        self.appliancename_label_4.setObjectName("appliancename_label_4")
        self.horizontallayout_4.addWidget(self.appliancename_label_4)
        self.appliancename_lineEdit_4 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_4.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_4.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_4.setObjectName("appliancename_lineEdit_4")
        self.horizontallayout_4.addWidget(self.appliancename_lineEdit_4)
        self.Togglebutton_4 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_4.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_4.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_4.setObjectName("Togglebutton_4")
        self.horizontallayout_4.addWidget(self.Togglebutton_4)
        self.verticalLayout.addLayout(self.horizontallayout_4)
        self.widget_4 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        self.widget_4.setEnabled(False)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_4.setPalette(palette)
        self.widget_4.setTabletTracking(False)
        self.widget_4.setAutoFillBackground(False)
        self.widget_4.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_4.setObjectName("widget_4")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.widget_4)
        self.gridLayout_4.setObjectName("gridLayout_4")
        spacerItem12 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem12, 3, 5, 1, 3)
        spacerItem13 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem13, 7, 5, 1, 3)
        spacerItem14 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem14, 3, 0, 1, 4)
        self.line_8 = QtWidgets.QFrame(self.widget_4)
        self.line_8.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_8.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_8.setObjectName("line_8")
        self.gridLayout_4.addWidget(self.line_8, 0, 4, 3, 1)
        self.power_4 = QtWidgets.QLabel(self.widget_4)
        self.power_4.setMinimumSize(QtCore.QSize(0, 31))
        self.power_4.setObjectName("power_4")
        self.gridLayout_4.addWidget(self.power_4, 0, 5, 1, 1)
        self.number_4 = QtWidgets.QLabel(self.widget_4)
        self.number_4.setMinimumSize(QtCore.QSize(151, 31))
        self.number_4.setObjectName("number_4")
        self.gridLayout_4.addWidget(self.number_4, 0, 0, 1, 3)
        self.power_spinBox_4 = QtWidgets.QSpinBox(self.widget_4)
        self.power_spinBox_4.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_4.setMaximum(999999999)
        self.power_spinBox_4.setObjectName("power_spinBox_4")
        self.gridLayout_4.addWidget(self.power_spinBox_4, 0, 6, 1, 3)
        self.number_spinBox_4 = QtWidgets.QSpinBox(self.widget_4)
        self.number_spinBox_4.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_4.setMinimum(1)
        self.number_spinBox_4.setMaximum(999999999)
        self.number_spinBox_4.setProperty("value", 1)
        self.number_spinBox_4.setObjectName("number_spinBox_4")
        self.gridLayout_4.addWidget(self.number_spinBox_4, 0, 3, 1, 1)
        self.r_var_spinBox_4 = QtWidgets.QSpinBox(self.widget_4)
        self.r_var_spinBox_4.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_4.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_4.setMaximum(100)
        self.r_var_spinBox_4.setObjectName("r_var_spinBox_4")
        self.gridLayout_4.addWidget(self.r_var_spinBox_4, 8, 3, 1, 1)
        self.line_9 = QtWidgets.QFrame(self.widget_4)
        self.line_9.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_9.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_9.setObjectName("line_9")
        self.gridLayout_4.addWidget(self.line_9, 8, 4, 3, 1)
        self.wd_we_comboBox_4 = QtWidgets.QComboBox(self.widget_4)
        self.wd_we_comboBox_4.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_4.setObjectName("wd_we_comboBox_4")
        self.wd_we_comboBox_4.addItem("")
        self.wd_we_comboBox_4.addItem("")
        self.wd_we_comboBox_4.addItem("")
        self.gridLayout_4.addWidget(self.wd_we_comboBox_4, 2, 6, 1, 3)
        self.num_windows_spinBox_4 = QtWidgets.QSpinBox(self.widget_4)
        self.num_windows_spinBox_4.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_4.setMinimum(1)
        self.num_windows_spinBox_4.setMaximum(3)
        self.num_windows_spinBox_4.setObjectName("num_windows_spinBox_4")
        self.gridLayout_4.addWidget(self.num_windows_spinBox_4, 1, 8, 1, 1)
        self.num_windows_4 = QtWidgets.QLabel(self.widget_4)
        self.num_windows_4.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_4.setObjectName("num_windows_4")
        self.gridLayout_4.addWidget(self.num_windows_4, 1, 5, 1, 3)
        self.w1start_4 = QtWidgets.QLabel(self.widget_4)
        self.w1start_4.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_4.setObjectName("w1start_4")
        self.gridLayout_4.addWidget(self.w1start_4, 4, 0, 1, 1)
        self.function_time_spinBox_4 = QtWidgets.QSpinBox(self.widget_4)
        self.function_time_spinBox_4.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_4.setMaximum(1440)
        self.function_time_spinBox_4.setProperty("value", 0)
        self.function_time_spinBox_4.setObjectName("function_time_spinBox_4")
        self.gridLayout_4.addWidget(self.function_time_spinBox_4, 1, 3, 1, 1)
        self.label_18 = QtWidgets.QLabel(self.widget_4)
        self.label_18.setObjectName("label_18")
        self.gridLayout_4.addWidget(self.label_18, 6, 4, 1, 1)
        self.label_19 = QtWidgets.QLabel(self.widget_4)
        self.label_19.setObjectName("label_19")
        self.gridLayout_4.addWidget(self.label_19, 4, 4, 1, 1)
        self.wd_we_4 = QtWidgets.QLabel(self.widget_4)
        self.wd_we_4.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_4.setObjectName("wd_we_4")
        self.gridLayout_4.addWidget(self.wd_we_4, 2, 5, 1, 1)
        self.function_time_4 = QtWidgets.QLabel(self.widget_4)
        self.function_time_4.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_4.setObjectName("function_time_4")
        self.gridLayout_4.addWidget(self.function_time_4, 1, 0, 1, 3)
        self.label_20 = QtWidgets.QLabel(self.widget_4)
        self.label_20.setObjectName("label_20")
        self.gridLayout_4.addWidget(self.label_20, 5, 4, 1, 1)
        self.r_var_4 = QtWidgets.QLabel(self.widget_4)
        self.r_var_4.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_4.setObjectName("r_var_4")
        self.gridLayout_4.addWidget(self.r_var_4, 8, 0, 1, 3)
        self.occationaluse_4 = QtWidgets.QLabel(self.widget_4)
        self.occationaluse_4.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_4.setObjectName("occationaluse_4")
        self.gridLayout_4.addWidget(self.occationaluse_4, 2, 0, 1, 1)
        spacerItem15 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_4.addItem(spacerItem15, 7, 0, 1, 4)
        self.occationaluse_spinBox_4 = QtWidgets.QSpinBox(self.widget_4)
        self.occationaluse_spinBox_4.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_4.setMinimum(1)
        self.occationaluse_spinBox_4.setMaximum(100)
        self.occationaluse_spinBox_4.setProperty("value", 100)
        self.occationaluse_spinBox_4.setObjectName("occationaluse_spinBox_4")
        self.gridLayout_4.addWidget(self.occationaluse_spinBox_4, 2, 3, 1, 1)
        self.func_cycle_spinBox_4 = QtWidgets.QSpinBox(self.widget_4)
        self.func_cycle_spinBox_4.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_4.setMaximum(1440)
        self.func_cycle_spinBox_4.setProperty("value", 1)
        self.func_cycle_spinBox_4.setObjectName("func_cycle_spinBox_4")
        self.gridLayout_4.addWidget(self.func_cycle_spinBox_4, 9, 7, 1, 2)
        self.fixed_4 = QtWidgets.QLabel(self.widget_4)
        self.fixed_4.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_4.setObjectName("fixed_4")
        self.gridLayout_4.addWidget(self.fixed_4, 10, 0, 1, 1)
        self.tfrv_4 = QtWidgets.QLabel(self.widget_4)
        self.tfrv_4.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_4.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_4.setObjectName("tfrv_4")
        self.gridLayout_4.addWidget(self.tfrv_4, 8, 5, 1, 2)
        self.flat_4 = QtWidgets.QLabel(self.widget_4)
        self.flat_4.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_4.setObjectName("flat_4")
        self.gridLayout_4.addWidget(self.flat_4, 10, 5, 1, 1)
        self.tfrv_spinBox_4 = QtWidgets.QSpinBox(self.widget_4)
        self.tfrv_spinBox_4.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_4.setMaximum(100)
        self.tfrv_spinBox_4.setObjectName("tfrv_spinBox_4")
        self.gridLayout_4.addWidget(self.tfrv_spinBox_4, 8, 8, 1, 1)
        self.flat_comboBox_4 = QtWidgets.QComboBox(self.widget_4)
        self.flat_comboBox_4.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_4.setObjectName("flat_comboBox_4")
        self.flat_comboBox_4.addItem("")
        self.flat_comboBox_4.addItem("")
        self.gridLayout_4.addWidget(self.flat_comboBox_4, 10, 7, 1, 2)
        self.thermal_v_spinBox_4 = QtWidgets.QSpinBox(self.widget_4)
        self.thermal_v_spinBox_4.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_4.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_4.setMaximum(100)
        self.thermal_v_spinBox_4.setObjectName("thermal_v_spinBox_4")
        self.gridLayout_4.addWidget(self.thermal_v_spinBox_4, 9, 3, 1, 1)
        self.fixe_comboBox_4 = QtWidgets.QComboBox(self.widget_4)
        self.fixe_comboBox_4.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_4.setObjectName("fixe_comboBox_4")
        self.fixe_comboBox_4.addItem("")
        self.fixe_comboBox_4.addItem("")
        self.gridLayout_4.addWidget(self.fixe_comboBox_4, 10, 3, 1, 1)
        self.func_cycle_4 = QtWidgets.QLabel(self.widget_4)
        self.func_cycle_4.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_4.setObjectName("func_cycle_4")
        self.gridLayout_4.addWidget(self.func_cycle_4, 9, 5, 1, 1)
        self.thermal_v_4 = QtWidgets.QLabel(self.widget_4)
        self.thermal_v_4.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_4.setObjectName("thermal_v_4")
        self.gridLayout_4.addWidget(self.thermal_v_4, 9, 0, 1, 3)
        self.w1start_timeEdit_4 = QtWidgets.QTimeEdit(self.widget_4)
        self.w1start_timeEdit_4.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_4.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_4.setObjectName("w1start_timeEdit_4")
        self.gridLayout_4.addWidget(self.w1start_timeEdit_4, 4, 3, 1, 1)
        self.w2end_4 = QtWidgets.QLabel(self.widget_4)
        self.w2end_4.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_4.setObjectName("w2end_4")
        self.gridLayout_4.addWidget(self.w2end_4, 5, 5, 1, 1)
        self.w2start_4 = QtWidgets.QLabel(self.widget_4)
        self.w2start_4.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_4.setObjectName("w2start_4")
        self.gridLayout_4.addWidget(self.w2start_4, 5, 0, 1, 2)
        self.w1end_timeEdit_4 = QtWidgets.QTimeEdit(self.widget_4)
        self.w1end_timeEdit_4.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_4.setObjectName("w1end_timeEdit_4")
        self.gridLayout_4.addWidget(self.w1end_timeEdit_4, 4, 6, 1, 2)
        self.w2start_timeEdit_4 = QtWidgets.QTimeEdit(self.widget_4)
        self.w2start_timeEdit_4.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_4.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_4.setObjectName("w2start_timeEdit_4")
        self.gridLayout_4.addWidget(self.w2start_timeEdit_4, 5, 3, 1, 1)
        self.w3start_4 = QtWidgets.QLabel(self.widget_4)
        self.w3start_4.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_4.setObjectName("w3start_4")
        self.gridLayout_4.addWidget(self.w3start_4, 6, 0, 1, 3)
        self.w1end_4 = QtWidgets.QLabel(self.widget_4)
        self.w1end_4.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_4.setObjectName("w1end_4")
        self.gridLayout_4.addWidget(self.w1end_4, 4, 5, 1, 1)
        self.w3end_4 = QtWidgets.QLabel(self.widget_4)
        self.w3end_4.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_4.setObjectName("w3end_4")
        self.gridLayout_4.addWidget(self.w3end_4, 6, 5, 1, 1)
        self.w2end_timeEdit_4 = QtWidgets.QTimeEdit(self.widget_4)
        self.w2end_timeEdit_4.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_4.setObjectName("w2end_timeEdit_4")
        self.gridLayout_4.addWidget(self.w2end_timeEdit_4, 5, 6, 1, 2)
        self.w3start_timeEdit_4 = QtWidgets.QTimeEdit(self.widget_4)
        self.w3start_timeEdit_4.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_4.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_4.setObjectName("w3start_timeEdit_4")
        self.gridLayout_4.addWidget(self.w3start_timeEdit_4, 6, 3, 1, 1)
        self.w3end_timeEdit_4 = QtWidgets.QTimeEdit(self.widget_4)
        self.w3end_timeEdit_4.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_4.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_4.setObjectName("w3end_timeEdit_4")
        self.gridLayout_4.addWidget(self.w3end_timeEdit_4, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_4)
        self.horizontallayout_5 = QtWidgets.QHBoxLayout()
        self.horizontallayout_5.setObjectName("horizontallayout_5")
        self.appliancename_label_5 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_5.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_5.setFont(font)
        self.appliancename_label_5.setObjectName("appliancename_label_5")
        self.horizontallayout_5.addWidget(self.appliancename_label_5)
        self.appliancename_lineEdit_5 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_5.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_5.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_5.setObjectName("appliancename_lineEdit_5")
        self.horizontallayout_5.addWidget(self.appliancename_lineEdit_5)
        self.Togglebutton_5 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_5.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_5.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_5.setObjectName("Togglebutton_5")
        self.horizontallayout_5.addWidget(self.Togglebutton_5)
        self.verticalLayout.addLayout(self.horizontallayout_5)
        self.widget_5 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_5.setPalette(palette)
        self.widget_5.setTabletTracking(False)
        self.widget_5.setAutoFillBackground(False)
        self.widget_5.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_5.setObjectName("widget_5")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.widget_5)
        self.gridLayout_5.setObjectName("gridLayout_5")
        spacerItem16 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem16, 3, 5, 1, 3)
        spacerItem17 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem17, 7, 5, 1, 3)
        spacerItem18 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem18, 3, 0, 1, 4)
        self.line_10 = QtWidgets.QFrame(self.widget_5)
        self.line_10.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_10.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_10.setObjectName("line_10")
        self.gridLayout_5.addWidget(self.line_10, 0, 4, 3, 1)
        self.power_5 = QtWidgets.QLabel(self.widget_5)
        self.power_5.setMinimumSize(QtCore.QSize(0, 31))
        self.power_5.setObjectName("power_5")
        self.gridLayout_5.addWidget(self.power_5, 0, 5, 1, 1)
        self.number_5 = QtWidgets.QLabel(self.widget_5)
        self.number_5.setMinimumSize(QtCore.QSize(151, 31))
        self.number_5.setObjectName("number_5")
        self.gridLayout_5.addWidget(self.number_5, 0, 0, 1, 3)
        self.power_spinBox_5 = QtWidgets.QSpinBox(self.widget_5)
        self.power_spinBox_5.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_5.setMaximum(999999999)
        self.power_spinBox_5.setObjectName("power_spinBox_5")
        self.gridLayout_5.addWidget(self.power_spinBox_5, 0, 6, 1, 3)
        self.number_spinBox_5 = QtWidgets.QSpinBox(self.widget_5)
        self.number_spinBox_5.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_5.setMinimum(1)
        self.number_spinBox_5.setMaximum(999999999)
        self.number_spinBox_5.setProperty("value", 1)
        self.number_spinBox_5.setObjectName("number_spinBox_5")
        self.gridLayout_5.addWidget(self.number_spinBox_5, 0, 3, 1, 1)
        self.r_var_spinBox_5 = QtWidgets.QSpinBox(self.widget_5)
        self.r_var_spinBox_5.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_5.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_5.setMaximum(100)
        self.r_var_spinBox_5.setObjectName("r_var_spinBox_5")
        self.gridLayout_5.addWidget(self.r_var_spinBox_5, 8, 3, 1, 1)
        self.line_11 = QtWidgets.QFrame(self.widget_5)
        self.line_11.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_11.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_11.setObjectName("line_11")
        self.gridLayout_5.addWidget(self.line_11, 8, 4, 3, 1)
        self.wd_we_comboBox_5 = QtWidgets.QComboBox(self.widget_5)
        self.wd_we_comboBox_5.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_5.setObjectName("wd_we_comboBox_5")
        self.wd_we_comboBox_5.addItem("")
        self.wd_we_comboBox_5.addItem("")
        self.wd_we_comboBox_5.addItem("")
        self.gridLayout_5.addWidget(self.wd_we_comboBox_5, 2, 6, 1, 3)
        self.num_windows_spinBox_5 = QtWidgets.QSpinBox(self.widget_5)
        self.num_windows_spinBox_5.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_5.setMinimum(1)
        self.num_windows_spinBox_5.setMaximum(3)
        self.num_windows_spinBox_5.setObjectName("num_windows_spinBox_5")
        self.gridLayout_5.addWidget(self.num_windows_spinBox_5, 1, 8, 1, 1)
        self.num_windows_5 = QtWidgets.QLabel(self.widget_5)
        self.num_windows_5.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_5.setObjectName("num_windows_5")
        self.gridLayout_5.addWidget(self.num_windows_5, 1, 5, 1, 3)
        self.w1start_5 = QtWidgets.QLabel(self.widget_5)
        self.w1start_5.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_5.setObjectName("w1start_5")
        self.gridLayout_5.addWidget(self.w1start_5, 4, 0, 1, 1)
        self.function_time_spinBox_5 = QtWidgets.QSpinBox(self.widget_5)
        self.function_time_spinBox_5.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_5.setMaximum(1440)
        self.function_time_spinBox_5.setProperty("value", 0)
        self.function_time_spinBox_5.setObjectName("function_time_spinBox_5")
        self.gridLayout_5.addWidget(self.function_time_spinBox_5, 1, 3, 1, 1)
        self.label_21 = QtWidgets.QLabel(self.widget_5)
        self.label_21.setObjectName("label_21")
        self.gridLayout_5.addWidget(self.label_21, 6, 4, 1, 1)
        self.label_22 = QtWidgets.QLabel(self.widget_5)
        self.label_22.setObjectName("label_22")
        self.gridLayout_5.addWidget(self.label_22, 4, 4, 1, 1)
        self.wd_we_5 = QtWidgets.QLabel(self.widget_5)
        self.wd_we_5.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_5.setObjectName("wd_we_5")
        self.gridLayout_5.addWidget(self.wd_we_5, 2, 5, 1, 1)
        self.function_time_5 = QtWidgets.QLabel(self.widget_5)
        self.function_time_5.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_5.setObjectName("function_time_5")
        self.gridLayout_5.addWidget(self.function_time_5, 1, 0, 1, 3)
        self.label_23 = QtWidgets.QLabel(self.widget_5)
        self.label_23.setObjectName("label_23")
        self.gridLayout_5.addWidget(self.label_23, 5, 4, 1, 1)
        self.r_var_5 = QtWidgets.QLabel(self.widget_5)
        self.r_var_5.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_5.setObjectName("r_var_5")
        self.gridLayout_5.addWidget(self.r_var_5, 8, 0, 1, 3)
        self.occationaluse_5 = QtWidgets.QLabel(self.widget_5)
        self.occationaluse_5.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_5.setObjectName("occationaluse_5")
        self.gridLayout_5.addWidget(self.occationaluse_5, 2, 0, 1, 1)
        spacerItem19 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_5.addItem(spacerItem19, 7, 0, 1, 4)
        self.occationaluse_spinBox_5 = QtWidgets.QSpinBox(self.widget_5)
        self.occationaluse_spinBox_5.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_5.setMinimum(1)
        self.occationaluse_spinBox_5.setMaximum(100)
        self.occationaluse_spinBox_5.setProperty("value", 100)
        self.occationaluse_spinBox_5.setObjectName("occationaluse_spinBox_5")
        self.gridLayout_5.addWidget(self.occationaluse_spinBox_5, 2, 3, 1, 1)
        self.func_cycle_spinBox_5 = QtWidgets.QSpinBox(self.widget_5)
        self.func_cycle_spinBox_5.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_5.setMaximum(1440)
        self.func_cycle_spinBox_5.setProperty("value", 1)
        self.func_cycle_spinBox_5.setObjectName("func_cycle_spinBox_5")
        self.gridLayout_5.addWidget(self.func_cycle_spinBox_5, 9, 7, 1, 2)
        self.fixed_5 = QtWidgets.QLabel(self.widget_5)
        self.fixed_5.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_5.setObjectName("fixed_5")
        self.gridLayout_5.addWidget(self.fixed_5, 10, 0, 1, 1)
        self.tfrv_5 = QtWidgets.QLabel(self.widget_5)
        self.tfrv_5.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_5.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_5.setObjectName("tfrv_5")
        self.gridLayout_5.addWidget(self.tfrv_5, 8, 5, 1, 2)
        self.flat_5 = QtWidgets.QLabel(self.widget_5)
        self.flat_5.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_5.setObjectName("flat_5")
        self.gridLayout_5.addWidget(self.flat_5, 10, 5, 1, 1)
        self.tfrv_spinBox_5 = QtWidgets.QSpinBox(self.widget_5)
        self.tfrv_spinBox_5.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_5.setMaximum(100)
        self.tfrv_spinBox_5.setObjectName("tfrv_spinBox_5")
        self.gridLayout_5.addWidget(self.tfrv_spinBox_5, 8, 8, 1, 1)
        self.flat_comboBox_5 = QtWidgets.QComboBox(self.widget_5)
        self.flat_comboBox_5.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_5.setObjectName("flat_comboBox_5")
        self.flat_comboBox_5.addItem("")
        self.flat_comboBox_5.addItem("")
        self.gridLayout_5.addWidget(self.flat_comboBox_5, 10, 7, 1, 2)
        self.thermal_v_spinBox_5 = QtWidgets.QSpinBox(self.widget_5)
        self.thermal_v_spinBox_5.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_5.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_5.setMaximum(100)
        self.thermal_v_spinBox_5.setObjectName("thermal_v_spinBox_5")
        self.gridLayout_5.addWidget(self.thermal_v_spinBox_5, 9, 3, 1, 1)
        self.fixe_comboBox_5 = QtWidgets.QComboBox(self.widget_5)
        self.fixe_comboBox_5.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_5.setObjectName("fixe_comboBox_5")
        self.fixe_comboBox_5.addItem("")
        self.fixe_comboBox_5.addItem("")
        self.gridLayout_5.addWidget(self.fixe_comboBox_5, 10, 3, 1, 1)
        self.func_cycle_5 = QtWidgets.QLabel(self.widget_5)
        self.func_cycle_5.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_5.setObjectName("func_cycle_5")
        self.gridLayout_5.addWidget(self.func_cycle_5, 9, 5, 1, 1)
        self.thermal_v_5 = QtWidgets.QLabel(self.widget_5)
        self.thermal_v_5.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_5.setObjectName("thermal_v_5")
        self.gridLayout_5.addWidget(self.thermal_v_5, 9, 0, 1, 3)
        self.w1start_timeEdit_5 = QtWidgets.QTimeEdit(self.widget_5)
        self.w1start_timeEdit_5.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_5.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_5.setObjectName("w1start_timeEdit_5")
        self.gridLayout_5.addWidget(self.w1start_timeEdit_5, 4, 3, 1, 1)
        self.w2end_5 = QtWidgets.QLabel(self.widget_5)
        self.w2end_5.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_5.setObjectName("w2end_5")
        self.gridLayout_5.addWidget(self.w2end_5, 5, 5, 1, 1)
        self.w2start_5 = QtWidgets.QLabel(self.widget_5)
        self.w2start_5.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_5.setObjectName("w2start_5")
        self.gridLayout_5.addWidget(self.w2start_5, 5, 0, 1, 2)
        self.w1end_timeEdit_5 = QtWidgets.QTimeEdit(self.widget_5)
        self.w1end_timeEdit_5.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_5.setObjectName("w1end_timeEdit_5")
        self.gridLayout_5.addWidget(self.w1end_timeEdit_5, 4, 6, 1, 2)
        self.w2start_timeEdit_5 = QtWidgets.QTimeEdit(self.widget_5)
        self.w2start_timeEdit_5.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_5.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_5.setObjectName("w2start_timeEdit_5")
        self.gridLayout_5.addWidget(self.w2start_timeEdit_5, 5, 3, 1, 1)
        self.w3start_5 = QtWidgets.QLabel(self.widget_5)
        self.w3start_5.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_5.setObjectName("w3start_5")
        self.gridLayout_5.addWidget(self.w3start_5, 6, 0, 1, 3)
        self.w1end_5 = QtWidgets.QLabel(self.widget_5)
        self.w1end_5.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_5.setObjectName("w1end_5")
        self.gridLayout_5.addWidget(self.w1end_5, 4, 5, 1, 1)
        self.w3end_5 = QtWidgets.QLabel(self.widget_5)
        self.w3end_5.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_5.setObjectName("w3end_5")
        self.gridLayout_5.addWidget(self.w3end_5, 6, 5, 1, 1)
        self.w2end_timeEdit_5 = QtWidgets.QTimeEdit(self.widget_5)
        self.w2end_timeEdit_5.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_5.setObjectName("w2end_timeEdit_5")
        self.gridLayout_5.addWidget(self.w2end_timeEdit_5, 5, 6, 1, 2)
        self.w3start_timeEdit_5 = QtWidgets.QTimeEdit(self.widget_5)
        self.w3start_timeEdit_5.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_5.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_5.setObjectName("w3start_timeEdit_5")
        self.gridLayout_5.addWidget(self.w3start_timeEdit_5, 6, 3, 1, 1)
        self.w3end_timeEdit_5 = QtWidgets.QTimeEdit(self.widget_5)
        self.w3end_timeEdit_5.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_5.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_5.setObjectName("w3end_timeEdit_5")
        self.gridLayout_5.addWidget(self.w3end_timeEdit_5, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_5)
        self.horizontallayout_6 = QtWidgets.QHBoxLayout()
        self.horizontallayout_6.setObjectName("horizontallayout_6")
        self.appliancename_label_6 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_6.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_6.setFont(font)
        self.appliancename_label_6.setObjectName("appliancename_label_6")
        self.horizontallayout_6.addWidget(self.appliancename_label_6)
        self.appliancename_lineEdit_6 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_6.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_6.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_6.setObjectName("appliancename_lineEdit_6")
        self.horizontallayout_6.addWidget(self.appliancename_lineEdit_6)
        self.Togglebutton_6 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_6.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_6.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_6.setObjectName("Togglebutton_6")
        self.horizontallayout_6.addWidget(self.Togglebutton_6)
        self.verticalLayout.addLayout(self.horizontallayout_6)
        self.widget_6 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_6.setPalette(palette)
        self.widget_6.setTabletTracking(False)
        self.widget_6.setAutoFillBackground(False)
        self.widget_6.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_6.setObjectName("widget_6")
        self.gridLayout_6 = QtWidgets.QGridLayout(self.widget_6)
        self.gridLayout_6.setObjectName("gridLayout_6")
        spacerItem20 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem20, 3, 5, 1, 3)
        spacerItem21 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem21, 7, 5, 1, 3)
        spacerItem22 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem22, 3, 0, 1, 4)
        self.line_12 = QtWidgets.QFrame(self.widget_6)
        self.line_12.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_12.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_12.setObjectName("line_12")
        self.gridLayout_6.addWidget(self.line_12, 0, 4, 3, 1)
        self.power_6 = QtWidgets.QLabel(self.widget_6)
        self.power_6.setMinimumSize(QtCore.QSize(0, 31))
        self.power_6.setObjectName("power_6")
        self.gridLayout_6.addWidget(self.power_6, 0, 5, 1, 1)
        self.number_6 = QtWidgets.QLabel(self.widget_6)
        self.number_6.setMinimumSize(QtCore.QSize(151, 31))
        self.number_6.setObjectName("number_6")
        self.gridLayout_6.addWidget(self.number_6, 0, 0, 1, 3)
        self.power_spinBox_6 = QtWidgets.QSpinBox(self.widget_6)
        self.power_spinBox_6.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_6.setMaximum(999999999)
        self.power_spinBox_6.setObjectName("power_spinBox_6")
        self.gridLayout_6.addWidget(self.power_spinBox_6, 0, 6, 1, 3)
        self.number_spinBox_6 = QtWidgets.QSpinBox(self.widget_6)
        self.number_spinBox_6.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_6.setMinimum(1)
        self.number_spinBox_6.setMaximum(999999999)
        self.number_spinBox_6.setProperty("value", 1)
        self.number_spinBox_6.setObjectName("number_spinBox_6")
        self.gridLayout_6.addWidget(self.number_spinBox_6, 0, 3, 1, 1)
        self.r_var_spinBox_6 = QtWidgets.QSpinBox(self.widget_6)
        self.r_var_spinBox_6.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_6.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_6.setMaximum(100)
        self.r_var_spinBox_6.setObjectName("r_var_spinBox_6")
        self.gridLayout_6.addWidget(self.r_var_spinBox_6, 8, 3, 1, 1)
        self.line_13 = QtWidgets.QFrame(self.widget_6)
        self.line_13.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_13.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_13.setObjectName("line_13")
        self.gridLayout_6.addWidget(self.line_13, 8, 4, 3, 1)
        self.wd_we_comboBox_6 = QtWidgets.QComboBox(self.widget_6)
        self.wd_we_comboBox_6.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_6.setObjectName("wd_we_comboBox_6")
        self.wd_we_comboBox_6.addItem("")
        self.wd_we_comboBox_6.addItem("")
        self.wd_we_comboBox_6.addItem("")
        self.gridLayout_6.addWidget(self.wd_we_comboBox_6, 2, 6, 1, 3)
        self.num_windows_spinBox_6 = QtWidgets.QSpinBox(self.widget_6)
        self.num_windows_spinBox_6.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_6.setMinimum(1)
        self.num_windows_spinBox_6.setMaximum(3)
        self.num_windows_spinBox_6.setObjectName("num_windows_spinBox_6")
        self.gridLayout_6.addWidget(self.num_windows_spinBox_6, 1, 8, 1, 1)
        self.num_windows_6 = QtWidgets.QLabel(self.widget_6)
        self.num_windows_6.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_6.setObjectName("num_windows_6")
        self.gridLayout_6.addWidget(self.num_windows_6, 1, 5, 1, 3)
        self.w1start_6 = QtWidgets.QLabel(self.widget_6)
        self.w1start_6.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_6.setObjectName("w1start_6")
        self.gridLayout_6.addWidget(self.w1start_6, 4, 0, 1, 1)
        self.function_time_spinBox_6 = QtWidgets.QSpinBox(self.widget_6)
        self.function_time_spinBox_6.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_6.setMaximum(1440)
        self.function_time_spinBox_6.setProperty("value", 0)
        self.function_time_spinBox_6.setObjectName("function_time_spinBox_6")
        self.gridLayout_6.addWidget(self.function_time_spinBox_6, 1, 3, 1, 1)
        self.label_24 = QtWidgets.QLabel(self.widget_6)
        self.label_24.setObjectName("label_24")
        self.gridLayout_6.addWidget(self.label_24, 6, 4, 1, 1)
        self.label_25 = QtWidgets.QLabel(self.widget_6)
        self.label_25.setObjectName("label_25")
        self.gridLayout_6.addWidget(self.label_25, 4, 4, 1, 1)
        self.wd_we_6 = QtWidgets.QLabel(self.widget_6)
        self.wd_we_6.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_6.setObjectName("wd_we_6")
        self.gridLayout_6.addWidget(self.wd_we_6, 2, 5, 1, 1)
        self.function_time_6 = QtWidgets.QLabel(self.widget_6)
        self.function_time_6.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_6.setObjectName("function_time_6")
        self.gridLayout_6.addWidget(self.function_time_6, 1, 0, 1, 3)
        self.label_26 = QtWidgets.QLabel(self.widget_6)
        self.label_26.setObjectName("label_26")
        self.gridLayout_6.addWidget(self.label_26, 5, 4, 1, 1)
        self.r_var_6 = QtWidgets.QLabel(self.widget_6)
        self.r_var_6.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_6.setObjectName("r_var_6")
        self.gridLayout_6.addWidget(self.r_var_6, 8, 0, 1, 3)
        self.occationaluse_6 = QtWidgets.QLabel(self.widget_6)
        self.occationaluse_6.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_6.setObjectName("occationaluse_6")
        self.gridLayout_6.addWidget(self.occationaluse_6, 2, 0, 1, 1)
        spacerItem23 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_6.addItem(spacerItem23, 7, 0, 1, 4)
        self.occationaluse_spinBox_6 = QtWidgets.QSpinBox(self.widget_6)
        self.occationaluse_spinBox_6.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_6.setMinimum(1)
        self.occationaluse_spinBox_6.setMaximum(100)
        self.occationaluse_spinBox_6.setProperty("value", 100)
        self.occationaluse_spinBox_6.setObjectName("occationaluse_spinBox_6")
        self.gridLayout_6.addWidget(self.occationaluse_spinBox_6, 2, 3, 1, 1)
        self.func_cycle_spinBox_6 = QtWidgets.QSpinBox(self.widget_6)
        self.func_cycle_spinBox_6.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_6.setMaximum(1440)
        self.func_cycle_spinBox_6.setProperty("value", 1)
        self.func_cycle_spinBox_6.setObjectName("func_cycle_spinBox_6")
        self.gridLayout_6.addWidget(self.func_cycle_spinBox_6, 9, 7, 1, 2)
        self.fixed_6 = QtWidgets.QLabel(self.widget_6)
        self.fixed_6.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_6.setObjectName("fixed_6")
        self.gridLayout_6.addWidget(self.fixed_6, 10, 0, 1, 1)
        self.tfrv_6 = QtWidgets.QLabel(self.widget_6)
        self.tfrv_6.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_6.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_6.setObjectName("tfrv_6")
        self.gridLayout_6.addWidget(self.tfrv_6, 8, 5, 1, 2)
        self.flat_6 = QtWidgets.QLabel(self.widget_6)
        self.flat_6.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_6.setObjectName("flat_6")
        self.gridLayout_6.addWidget(self.flat_6, 10, 5, 1, 1)
        self.tfrv_spinBox_6 = QtWidgets.QSpinBox(self.widget_6)
        self.tfrv_spinBox_6.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_6.setMaximum(100)
        self.tfrv_spinBox_6.setObjectName("tfrv_spinBox_6")
        self.gridLayout_6.addWidget(self.tfrv_spinBox_6, 8, 8, 1, 1)
        self.flat_comboBox_6 = QtWidgets.QComboBox(self.widget_6)
        self.flat_comboBox_6.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_6.setObjectName("flat_comboBox_6")
        self.flat_comboBox_6.addItem("")
        self.flat_comboBox_6.addItem("")
        self.gridLayout_6.addWidget(self.flat_comboBox_6, 10, 7, 1, 2)
        self.thermal_v_spinBox_6 = QtWidgets.QSpinBox(self.widget_6)
        self.thermal_v_spinBox_6.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_6.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_6.setMaximum(100)
        self.thermal_v_spinBox_6.setObjectName("thermal_v_spinBox_6")
        self.gridLayout_6.addWidget(self.thermal_v_spinBox_6, 9, 3, 1, 1)
        self.fixe_comboBox_6 = QtWidgets.QComboBox(self.widget_6)
        self.fixe_comboBox_6.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_6.setObjectName("fixe_comboBox_6")
        self.fixe_comboBox_6.addItem("")
        self.fixe_comboBox_6.addItem("")
        self.gridLayout_6.addWidget(self.fixe_comboBox_6, 10, 3, 1, 1)
        self.func_cycle_6 = QtWidgets.QLabel(self.widget_6)
        self.func_cycle_6.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_6.setObjectName("func_cycle_6")
        self.gridLayout_6.addWidget(self.func_cycle_6, 9, 5, 1, 1)
        self.thermal_v_6 = QtWidgets.QLabel(self.widget_6)
        self.thermal_v_6.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_6.setObjectName("thermal_v_6")
        self.gridLayout_6.addWidget(self.thermal_v_6, 9, 0, 1, 3)
        self.w1start_timeEdit_6 = QtWidgets.QTimeEdit(self.widget_6)
        self.w1start_timeEdit_6.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_6.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_6.setObjectName("w1start_timeEdit_6")
        self.gridLayout_6.addWidget(self.w1start_timeEdit_6, 4, 3, 1, 1)
        self.w2end_6 = QtWidgets.QLabel(self.widget_6)
        self.w2end_6.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_6.setObjectName("w2end_6")
        self.gridLayout_6.addWidget(self.w2end_6, 5, 5, 1, 1)
        self.w2start_6 = QtWidgets.QLabel(self.widget_6)
        self.w2start_6.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_6.setObjectName("w2start_6")
        self.gridLayout_6.addWidget(self.w2start_6, 5, 0, 1, 2)
        self.w1end_timeEdit_6 = QtWidgets.QTimeEdit(self.widget_6)
        self.w1end_timeEdit_6.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_6.setObjectName("w1end_timeEdit_6")
        self.gridLayout_6.addWidget(self.w1end_timeEdit_6, 4, 6, 1, 2)
        self.w2start_timeEdit_6 = QtWidgets.QTimeEdit(self.widget_6)
        self.w2start_timeEdit_6.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_6.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_6.setObjectName("w2start_timeEdit_6")
        self.gridLayout_6.addWidget(self.w2start_timeEdit_6, 5, 3, 1, 1)
        self.w3start_6 = QtWidgets.QLabel(self.widget_6)
        self.w3start_6.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_6.setObjectName("w3start_6")
        self.gridLayout_6.addWidget(self.w3start_6, 6, 0, 1, 3)
        self.w1end_6 = QtWidgets.QLabel(self.widget_6)
        self.w1end_6.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_6.setObjectName("w1end_6")
        self.gridLayout_6.addWidget(self.w1end_6, 4, 5, 1, 1)
        self.w3end_6 = QtWidgets.QLabel(self.widget_6)
        self.w3end_6.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_6.setObjectName("w3end_6")
        self.gridLayout_6.addWidget(self.w3end_6, 6, 5, 1, 1)
        self.w2end_timeEdit_6 = QtWidgets.QTimeEdit(self.widget_6)
        self.w2end_timeEdit_6.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_6.setObjectName("w2end_timeEdit_6")
        self.gridLayout_6.addWidget(self.w2end_timeEdit_6, 5, 6, 1, 2)
        self.w3start_timeEdit_6 = QtWidgets.QTimeEdit(self.widget_6)
        self.w3start_timeEdit_6.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_6.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_6.setObjectName("w3start_timeEdit_6")
        self.gridLayout_6.addWidget(self.w3start_timeEdit_6, 6, 3, 1, 1)
        self.w3end_timeEdit_6 = QtWidgets.QTimeEdit(self.widget_6)
        self.w3end_timeEdit_6.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_6.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_6.setObjectName("w3end_timeEdit_6")
        self.gridLayout_6.addWidget(self.w3end_timeEdit_6, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_6)
        self.horizontallayout_7 = QtWidgets.QHBoxLayout()
        self.horizontallayout_7.setObjectName("horizontallayout_7")
        self.appliancename_label_7 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_7.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_7.setFont(font)
        self.appliancename_label_7.setObjectName("appliancename_label_7")
        self.horizontallayout_7.addWidget(self.appliancename_label_7)
        self.appliancename_lineEdit_7 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_7.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_7.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_7.setObjectName("appliancename_lineEdit_7")
        self.horizontallayout_7.addWidget(self.appliancename_lineEdit_7)
        self.Togglebutton_7 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_7.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_7.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_7.setObjectName("Togglebutton_7")
        self.horizontallayout_7.addWidget(self.Togglebutton_7)
        self.verticalLayout.addLayout(self.horizontallayout_7)
        self.widget_7 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_7.setPalette(palette)
        self.widget_7.setTabletTracking(False)
        self.widget_7.setAutoFillBackground(False)
        self.widget_7.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_7.setObjectName("widget_7")
        self.gridLayout_7 = QtWidgets.QGridLayout(self.widget_7)
        self.gridLayout_7.setObjectName("gridLayout_7")
        spacerItem24 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem24, 3, 5, 1, 3)
        spacerItem25 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem25, 7, 5, 1, 3)
        spacerItem26 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem26, 3, 0, 1, 4)
        self.line_14 = QtWidgets.QFrame(self.widget_7)
        self.line_14.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_14.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_14.setObjectName("line_14")
        self.gridLayout_7.addWidget(self.line_14, 0, 4, 3, 1)
        self.power_7 = QtWidgets.QLabel(self.widget_7)
        self.power_7.setMinimumSize(QtCore.QSize(0, 31))
        self.power_7.setObjectName("power_7")
        self.gridLayout_7.addWidget(self.power_7, 0, 5, 1, 1)
        self.number_7 = QtWidgets.QLabel(self.widget_7)
        self.number_7.setMinimumSize(QtCore.QSize(151, 31))
        self.number_7.setObjectName("number_7")
        self.gridLayout_7.addWidget(self.number_7, 0, 0, 1, 3)
        self.power_spinBox_7 = QtWidgets.QSpinBox(self.widget_7)
        self.power_spinBox_7.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_7.setMaximum(999999999)
        self.power_spinBox_7.setObjectName("power_spinBox_7")
        self.gridLayout_7.addWidget(self.power_spinBox_7, 0, 6, 1, 3)
        self.number_spinBox_7 = QtWidgets.QSpinBox(self.widget_7)
        self.number_spinBox_7.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_7.setMinimum(1)
        self.number_spinBox_7.setMaximum(999999999)
        self.number_spinBox_7.setProperty("value", 1)
        self.number_spinBox_7.setObjectName("number_spinBox_7")
        self.gridLayout_7.addWidget(self.number_spinBox_7, 0, 3, 1, 1)
        self.r_var_spinBox_7 = QtWidgets.QSpinBox(self.widget_7)
        self.r_var_spinBox_7.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_7.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_7.setMaximum(100)
        self.r_var_spinBox_7.setObjectName("r_var_spinBox_7")
        self.gridLayout_7.addWidget(self.r_var_spinBox_7, 8, 3, 1, 1)
        self.line_15 = QtWidgets.QFrame(self.widget_7)
        self.line_15.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_15.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_15.setObjectName("line_15")
        self.gridLayout_7.addWidget(self.line_15, 8, 4, 3, 1)
        self.wd_we_comboBox_7 = QtWidgets.QComboBox(self.widget_7)
        self.wd_we_comboBox_7.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_7.setObjectName("wd_we_comboBox_7")
        self.wd_we_comboBox_7.addItem("")
        self.wd_we_comboBox_7.addItem("")
        self.wd_we_comboBox_7.addItem("")
        self.gridLayout_7.addWidget(self.wd_we_comboBox_7, 2, 6, 1, 3)
        self.num_windows_spinBox_7 = QtWidgets.QSpinBox(self.widget_7)
        self.num_windows_spinBox_7.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_7.setMinimum(1)
        self.num_windows_spinBox_7.setMaximum(3)
        self.num_windows_spinBox_7.setObjectName("num_windows_spinBox_7")
        self.gridLayout_7.addWidget(self.num_windows_spinBox_7, 1, 8, 1, 1)
        self.num_windows_7 = QtWidgets.QLabel(self.widget_7)
        self.num_windows_7.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_7.setObjectName("num_windows_7")
        self.gridLayout_7.addWidget(self.num_windows_7, 1, 5, 1, 3)
        self.w1start_7 = QtWidgets.QLabel(self.widget_7)
        self.w1start_7.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_7.setObjectName("w1start_7")
        self.gridLayout_7.addWidget(self.w1start_7, 4, 0, 1, 1)
        self.function_time_spinBox_7 = QtWidgets.QSpinBox(self.widget_7)
        self.function_time_spinBox_7.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_7.setMaximum(1440)
        self.function_time_spinBox_7.setProperty("value", 0)
        self.function_time_spinBox_7.setObjectName("function_time_spinBox_7")
        self.gridLayout_7.addWidget(self.function_time_spinBox_7, 1, 3, 1, 1)
        self.label_27 = QtWidgets.QLabel(self.widget_7)
        self.label_27.setObjectName("label_27")
        self.gridLayout_7.addWidget(self.label_27, 6, 4, 1, 1)
        self.label_28 = QtWidgets.QLabel(self.widget_7)
        self.label_28.setObjectName("label_28")
        self.gridLayout_7.addWidget(self.label_28, 4, 4, 1, 1)
        self.wd_we_7 = QtWidgets.QLabel(self.widget_7)
        self.wd_we_7.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_7.setObjectName("wd_we_7")
        self.gridLayout_7.addWidget(self.wd_we_7, 2, 5, 1, 1)
        self.function_time_7 = QtWidgets.QLabel(self.widget_7)
        self.function_time_7.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_7.setObjectName("function_time_7")
        self.gridLayout_7.addWidget(self.function_time_7, 1, 0, 1, 3)
        self.label_29 = QtWidgets.QLabel(self.widget_7)
        self.label_29.setObjectName("label_29")
        self.gridLayout_7.addWidget(self.label_29, 5, 4, 1, 1)
        self.r_var_7 = QtWidgets.QLabel(self.widget_7)
        self.r_var_7.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_7.setObjectName("r_var_7")
        self.gridLayout_7.addWidget(self.r_var_7, 8, 0, 1, 3)
        self.occationaluse_7 = QtWidgets.QLabel(self.widget_7)
        self.occationaluse_7.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_7.setObjectName("occationaluse_7")
        self.gridLayout_7.addWidget(self.occationaluse_7, 2, 0, 1, 1)
        spacerItem27 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem27, 7, 0, 1, 4)
        self.occationaluse_spinBox_7 = QtWidgets.QSpinBox(self.widget_7)
        self.occationaluse_spinBox_7.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_7.setMinimum(1)
        self.occationaluse_spinBox_7.setMaximum(100)
        self.occationaluse_spinBox_7.setProperty("value", 100)
        self.occationaluse_spinBox_7.setObjectName("occationaluse_spinBox_7")
        self.gridLayout_7.addWidget(self.occationaluse_spinBox_7, 2, 3, 1, 1)
        self.func_cycle_spinBox_7 = QtWidgets.QSpinBox(self.widget_7)
        self.func_cycle_spinBox_7.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_7.setMaximum(1440)
        self.func_cycle_spinBox_7.setProperty("value", 1)
        self.func_cycle_spinBox_7.setObjectName("func_cycle_spinBox_7")
        self.gridLayout_7.addWidget(self.func_cycle_spinBox_7, 9, 7, 1, 2)
        self.fixed_7 = QtWidgets.QLabel(self.widget_7)
        self.fixed_7.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_7.setObjectName("fixed_7")
        self.gridLayout_7.addWidget(self.fixed_7, 10, 0, 1, 1)
        self.tfrv_7 = QtWidgets.QLabel(self.widget_7)
        self.tfrv_7.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_7.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_7.setObjectName("tfrv_7")
        self.gridLayout_7.addWidget(self.tfrv_7, 8, 5, 1, 2)
        self.flat_7 = QtWidgets.QLabel(self.widget_7)
        self.flat_7.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_7.setObjectName("flat_7")
        self.gridLayout_7.addWidget(self.flat_7, 10, 5, 1, 1)
        self.tfrv_spinBox_7 = QtWidgets.QSpinBox(self.widget_7)
        self.tfrv_spinBox_7.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_7.setMaximum(100)
        self.tfrv_spinBox_7.setObjectName("tfrv_spinBox_7")
        self.gridLayout_7.addWidget(self.tfrv_spinBox_7, 8, 8, 1, 1)
        self.flat_comboBox_7 = QtWidgets.QComboBox(self.widget_7)
        self.flat_comboBox_7.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_7.setObjectName("flat_comboBox_7")
        self.flat_comboBox_7.addItem("")
        self.flat_comboBox_7.addItem("")
        self.gridLayout_7.addWidget(self.flat_comboBox_7, 10, 7, 1, 2)
        self.thermal_v_spinBox_7 = QtWidgets.QSpinBox(self.widget_7)
        self.thermal_v_spinBox_7.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_7.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_7.setMaximum(100)
        self.thermal_v_spinBox_7.setObjectName("thermal_v_spinBox_7")
        self.gridLayout_7.addWidget(self.thermal_v_spinBox_7, 9, 3, 1, 1)
        self.fixe_comboBox_7 = QtWidgets.QComboBox(self.widget_7)
        self.fixe_comboBox_7.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_7.setObjectName("fixe_comboBox_7")
        self.fixe_comboBox_7.addItem("")
        self.fixe_comboBox_7.addItem("")
        self.gridLayout_7.addWidget(self.fixe_comboBox_7, 10, 3, 1, 1)
        self.func_cycle_7 = QtWidgets.QLabel(self.widget_7)
        self.func_cycle_7.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_7.setObjectName("func_cycle_7")
        self.gridLayout_7.addWidget(self.func_cycle_7, 9, 5, 1, 1)
        self.thermal_v_7 = QtWidgets.QLabel(self.widget_7)
        self.thermal_v_7.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_7.setObjectName("thermal_v_7")
        self.gridLayout_7.addWidget(self.thermal_v_7, 9, 0, 1, 3)
        self.w1start_timeEdit_7 = QtWidgets.QTimeEdit(self.widget_7)
        self.w1start_timeEdit_7.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_7.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_7.setObjectName("w1start_timeEdit_7")
        self.gridLayout_7.addWidget(self.w1start_timeEdit_7, 4, 3, 1, 1)
        self.w2end_7 = QtWidgets.QLabel(self.widget_7)
        self.w2end_7.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_7.setObjectName("w2end_7")
        self.gridLayout_7.addWidget(self.w2end_7, 5, 5, 1, 1)
        self.w2start_7 = QtWidgets.QLabel(self.widget_7)
        self.w2start_7.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_7.setObjectName("w2start_7")
        self.gridLayout_7.addWidget(self.w2start_7, 5, 0, 1, 2)
        self.w1end_timeEdit_7 = QtWidgets.QTimeEdit(self.widget_7)
        self.w1end_timeEdit_7.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_7.setObjectName("w1end_timeEdit_7")
        self.gridLayout_7.addWidget(self.w1end_timeEdit_7, 4, 6, 1, 2)
        self.w2start_timeEdit_7 = QtWidgets.QTimeEdit(self.widget_7)
        self.w2start_timeEdit_7.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_7.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_7.setObjectName("w2start_timeEdit_7")
        self.gridLayout_7.addWidget(self.w2start_timeEdit_7, 5, 3, 1, 1)
        self.w3start_7 = QtWidgets.QLabel(self.widget_7)
        self.w3start_7.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_7.setObjectName("w3start_7")
        self.gridLayout_7.addWidget(self.w3start_7, 6, 0, 1, 3)
        self.w1end_7 = QtWidgets.QLabel(self.widget_7)
        self.w1end_7.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_7.setObjectName("w1end_7")
        self.gridLayout_7.addWidget(self.w1end_7, 4, 5, 1, 1)
        self.w3end_7 = QtWidgets.QLabel(self.widget_7)
        self.w3end_7.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_7.setObjectName("w3end_7")
        self.gridLayout_7.addWidget(self.w3end_7, 6, 5, 1, 1)
        self.w2end_timeEdit_7 = QtWidgets.QTimeEdit(self.widget_7)
        self.w2end_timeEdit_7.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_7.setObjectName("w2end_timeEdit_7")
        self.gridLayout_7.addWidget(self.w2end_timeEdit_7, 5, 6, 1, 2)
        self.w3start_timeEdit_7 = QtWidgets.QTimeEdit(self.widget_7)
        self.w3start_timeEdit_7.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_7.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_7.setObjectName("w3start_timeEdit_7")
        self.gridLayout_7.addWidget(self.w3start_timeEdit_7, 6, 3, 1, 1)
        self.w3end_timeEdit_7 = QtWidgets.QTimeEdit(self.widget_7)
        self.w3end_timeEdit_7.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_7.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_7.setObjectName("w3end_timeEdit_7")
        self.gridLayout_7.addWidget(self.w3end_timeEdit_7, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_7)
        self.horizontallayout_8 = QtWidgets.QHBoxLayout()
        self.horizontallayout_8.setObjectName("horizontallayout_8")
        self.appliancename_label_8 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_8.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_8.setFont(font)
        self.appliancename_label_8.setObjectName("appliancename_label_8")
        self.horizontallayout_8.addWidget(self.appliancename_label_8)
        self.appliancename_lineEdit_8 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_8.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_8.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_8.setObjectName("appliancename_lineEdit_8")
        self.horizontallayout_8.addWidget(self.appliancename_lineEdit_8)
        self.Togglebutton_8 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_8.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_8.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_8.setObjectName("Togglebutton_8")
        self.horizontallayout_8.addWidget(self.Togglebutton_8)
        self.verticalLayout.addLayout(self.horizontallayout_8)
        self.widget_8 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_8.setPalette(palette)
        self.widget_8.setTabletTracking(False)
        self.widget_8.setAutoFillBackground(False)
        self.widget_8.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_8.setObjectName("widget_8")
        self.gridLayout_8 = QtWidgets.QGridLayout(self.widget_8)
        self.gridLayout_8.setObjectName("gridLayout_8")
        spacerItem28 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem28, 3, 5, 1, 3)
        spacerItem29 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem29, 7, 5, 1, 3)
        spacerItem30 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem30, 3, 0, 1, 4)
        self.line_16 = QtWidgets.QFrame(self.widget_8)
        self.line_16.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_16.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_16.setObjectName("line_16")
        self.gridLayout_8.addWidget(self.line_16, 0, 4, 3, 1)
        self.power_8 = QtWidgets.QLabel(self.widget_8)
        self.power_8.setMinimumSize(QtCore.QSize(0, 31))
        self.power_8.setObjectName("power_8")
        self.gridLayout_8.addWidget(self.power_8, 0, 5, 1, 1)
        self.number_8 = QtWidgets.QLabel(self.widget_8)
        self.number_8.setMinimumSize(QtCore.QSize(151, 31))
        self.number_8.setObjectName("number_8")
        self.gridLayout_8.addWidget(self.number_8, 0, 0, 1, 3)
        self.power_spinBox_8 = QtWidgets.QSpinBox(self.widget_8)
        self.power_spinBox_8.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_8.setMaximum(999999999)
        self.power_spinBox_8.setObjectName("power_spinBox_8")
        self.gridLayout_8.addWidget(self.power_spinBox_8, 0, 6, 1, 3)
        self.number_spinBox_8 = QtWidgets.QSpinBox(self.widget_8)
        self.number_spinBox_8.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_8.setMinimum(1)
        self.number_spinBox_8.setMaximum(999999999)
        self.number_spinBox_8.setProperty("value", 1)
        self.number_spinBox_8.setObjectName("number_spinBox_8")
        self.gridLayout_8.addWidget(self.number_spinBox_8, 0, 3, 1, 1)
        self.r_var_spinBox_8 = QtWidgets.QSpinBox(self.widget_8)
        self.r_var_spinBox_8.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_8.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_8.setMaximum(100)
        self.r_var_spinBox_8.setObjectName("r_var_spinBox_8")
        self.gridLayout_8.addWidget(self.r_var_spinBox_8, 8, 3, 1, 1)
        self.line_17 = QtWidgets.QFrame(self.widget_8)
        self.line_17.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_17.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_17.setObjectName("line_17")
        self.gridLayout_8.addWidget(self.line_17, 8, 4, 3, 1)
        self.wd_we_comboBox_8 = QtWidgets.QComboBox(self.widget_8)
        self.wd_we_comboBox_8.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_8.setObjectName("wd_we_comboBox_8")
        self.wd_we_comboBox_8.addItem("")
        self.wd_we_comboBox_8.addItem("")
        self.wd_we_comboBox_8.addItem("")
        self.gridLayout_8.addWidget(self.wd_we_comboBox_8, 2, 6, 1, 3)
        self.num_windows_spinBox_8 = QtWidgets.QSpinBox(self.widget_8)
        self.num_windows_spinBox_8.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_8.setMinimum(1)
        self.num_windows_spinBox_8.setMaximum(3)
        self.num_windows_spinBox_8.setObjectName("num_windows_spinBox_8")
        self.gridLayout_8.addWidget(self.num_windows_spinBox_8, 1, 8, 1, 1)
        self.num_windows_8 = QtWidgets.QLabel(self.widget_8)
        self.num_windows_8.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_8.setObjectName("num_windows_8")
        self.gridLayout_8.addWidget(self.num_windows_8, 1, 5, 1, 3)
        self.w1start_8 = QtWidgets.QLabel(self.widget_8)
        self.w1start_8.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_8.setObjectName("w1start_8")
        self.gridLayout_8.addWidget(self.w1start_8, 4, 0, 1, 1)
        self.function_time_spinBox_8 = QtWidgets.QSpinBox(self.widget_8)
        self.function_time_spinBox_8.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_8.setMaximum(1440)
        self.function_time_spinBox_8.setProperty("value", 0)
        self.function_time_spinBox_8.setObjectName("function_time_spinBox_8")
        self.gridLayout_8.addWidget(self.function_time_spinBox_8, 1, 3, 1, 1)
        self.label_30 = QtWidgets.QLabel(self.widget_8)
        self.label_30.setObjectName("label_30")
        self.gridLayout_8.addWidget(self.label_30, 6, 4, 1, 1)
        self.label_31 = QtWidgets.QLabel(self.widget_8)
        self.label_31.setObjectName("label_31")
        self.gridLayout_8.addWidget(self.label_31, 4, 4, 1, 1)
        self.wd_we_8 = QtWidgets.QLabel(self.widget_8)
        self.wd_we_8.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_8.setObjectName("wd_we_8")
        self.gridLayout_8.addWidget(self.wd_we_8, 2, 5, 1, 1)
        self.function_time_8 = QtWidgets.QLabel(self.widget_8)
        self.function_time_8.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_8.setObjectName("function_time_8")
        self.gridLayout_8.addWidget(self.function_time_8, 1, 0, 1, 3)
        self.label_32 = QtWidgets.QLabel(self.widget_8)
        self.label_32.setObjectName("label_32")
        self.gridLayout_8.addWidget(self.label_32, 5, 4, 1, 1)
        self.r_var_8 = QtWidgets.QLabel(self.widget_8)
        self.r_var_8.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_8.setObjectName("r_var_8")
        self.gridLayout_8.addWidget(self.r_var_8, 8, 0, 1, 3)
        self.occationaluse_8 = QtWidgets.QLabel(self.widget_8)
        self.occationaluse_8.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_8.setObjectName("occationaluse_8")
        self.gridLayout_8.addWidget(self.occationaluse_8, 2, 0, 1, 1)
        spacerItem31 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem31, 7, 0, 1, 4)
        self.occationaluse_spinBox_8 = QtWidgets.QSpinBox(self.widget_8)
        self.occationaluse_spinBox_8.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_8.setMinimum(1)
        self.occationaluse_spinBox_8.setMaximum(100)
        self.occationaluse_spinBox_8.setProperty("value", 100)
        self.occationaluse_spinBox_8.setObjectName("occationaluse_spinBox_8")
        self.gridLayout_8.addWidget(self.occationaluse_spinBox_8, 2, 3, 1, 1)
        self.func_cycle_spinBox_8 = QtWidgets.QSpinBox(self.widget_8)
        self.func_cycle_spinBox_8.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_8.setMaximum(1440)
        self.func_cycle_spinBox_8.setProperty("value", 1)
        self.func_cycle_spinBox_8.setObjectName("func_cycle_spinBox_8")
        self.gridLayout_8.addWidget(self.func_cycle_spinBox_8, 9, 7, 1, 2)
        self.fixed_8 = QtWidgets.QLabel(self.widget_8)
        self.fixed_8.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_8.setObjectName("fixed_8")
        self.gridLayout_8.addWidget(self.fixed_8, 10, 0, 1, 1)
        self.tfrv_8 = QtWidgets.QLabel(self.widget_8)
        self.tfrv_8.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_8.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_8.setObjectName("tfrv_8")
        self.gridLayout_8.addWidget(self.tfrv_8, 8, 5, 1, 2)
        self.flat_8 = QtWidgets.QLabel(self.widget_8)
        self.flat_8.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_8.setObjectName("flat_8")
        self.gridLayout_8.addWidget(self.flat_8, 10, 5, 1, 1)
        self.tfrv_spinBox_8 = QtWidgets.QSpinBox(self.widget_8)
        self.tfrv_spinBox_8.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_8.setMaximum(100)
        self.tfrv_spinBox_8.setObjectName("tfrv_spinBox_8")
        self.gridLayout_8.addWidget(self.tfrv_spinBox_8, 8, 8, 1, 1)
        self.flat_comboBox_8 = QtWidgets.QComboBox(self.widget_8)
        self.flat_comboBox_8.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_8.setObjectName("flat_comboBox_8")
        self.flat_comboBox_8.addItem("")
        self.flat_comboBox_8.addItem("")
        self.gridLayout_8.addWidget(self.flat_comboBox_8, 10, 7, 1, 2)
        self.thermal_v_spinBox_8 = QtWidgets.QSpinBox(self.widget_8)
        self.thermal_v_spinBox_8.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_8.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_8.setMaximum(100)
        self.thermal_v_spinBox_8.setObjectName("thermal_v_spinBox_8")
        self.gridLayout_8.addWidget(self.thermal_v_spinBox_8, 9, 3, 1, 1)
        self.fixe_comboBox_8 = QtWidgets.QComboBox(self.widget_8)
        self.fixe_comboBox_8.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_8.setObjectName("fixe_comboBox_8")
        self.fixe_comboBox_8.addItem("")
        self.fixe_comboBox_8.addItem("")
        self.gridLayout_8.addWidget(self.fixe_comboBox_8, 10, 3, 1, 1)
        self.func_cycle_8 = QtWidgets.QLabel(self.widget_8)
        self.func_cycle_8.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_8.setObjectName("func_cycle_8")
        self.gridLayout_8.addWidget(self.func_cycle_8, 9, 5, 1, 1)
        self.thermal_v_8 = QtWidgets.QLabel(self.widget_8)
        self.thermal_v_8.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_8.setObjectName("thermal_v_8")
        self.gridLayout_8.addWidget(self.thermal_v_8, 9, 0, 1, 3)
        self.w1start_timeEdit_8 = QtWidgets.QTimeEdit(self.widget_8)
        self.w1start_timeEdit_8.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_8.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_8.setObjectName("w1start_timeEdit_8")
        self.gridLayout_8.addWidget(self.w1start_timeEdit_8, 4, 3, 1, 1)
        self.w2end_8 = QtWidgets.QLabel(self.widget_8)
        self.w2end_8.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_8.setObjectName("w2end_8")
        self.gridLayout_8.addWidget(self.w2end_8, 5, 5, 1, 1)
        self.w2start_8 = QtWidgets.QLabel(self.widget_8)
        self.w2start_8.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_8.setObjectName("w2start_8")
        self.gridLayout_8.addWidget(self.w2start_8, 5, 0, 1, 2)
        self.w1end_timeEdit_8 = QtWidgets.QTimeEdit(self.widget_8)
        self.w1end_timeEdit_8.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_8.setObjectName("w1end_timeEdit_8")
        self.gridLayout_8.addWidget(self.w1end_timeEdit_8, 4, 6, 1, 2)
        self.w2start_timeEdit_8 = QtWidgets.QTimeEdit(self.widget_8)
        self.w2start_timeEdit_8.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_8.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_8.setObjectName("w2start_timeEdit_8")
        self.gridLayout_8.addWidget(self.w2start_timeEdit_8, 5, 3, 1, 1)
        self.w3start_8 = QtWidgets.QLabel(self.widget_8)
        self.w3start_8.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_8.setObjectName("w3start_8")
        self.gridLayout_8.addWidget(self.w3start_8, 6, 0, 1, 3)
        self.w1end_8 = QtWidgets.QLabel(self.widget_8)
        self.w1end_8.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_8.setObjectName("w1end_8")
        self.gridLayout_8.addWidget(self.w1end_8, 4, 5, 1, 1)
        self.w3end_8 = QtWidgets.QLabel(self.widget_8)
        self.w3end_8.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_8.setObjectName("w3end_8")
        self.gridLayout_8.addWidget(self.w3end_8, 6, 5, 1, 1)
        self.w2end_timeEdit_8 = QtWidgets.QTimeEdit(self.widget_8)
        self.w2end_timeEdit_8.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_8.setObjectName("w2end_timeEdit_8")
        self.gridLayout_8.addWidget(self.w2end_timeEdit_8, 5, 6, 1, 2)
        self.w3start_timeEdit_8 = QtWidgets.QTimeEdit(self.widget_8)
        self.w3start_timeEdit_8.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_8.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_8.setObjectName("w3start_timeEdit_8")
        self.gridLayout_8.addWidget(self.w3start_timeEdit_8, 6, 3, 1, 1)
        self.w3end_timeEdit_8 = QtWidgets.QTimeEdit(self.widget_8)
        self.w3end_timeEdit_8.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_8.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_8.setObjectName("w3end_timeEdit_8")
        self.gridLayout_8.addWidget(self.w3end_timeEdit_8, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_8)
        self.horizontallayout_9 = QtWidgets.QHBoxLayout()
        self.horizontallayout_9.setObjectName("horizontallayout_9")
        self.appliancename_label_9 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_9.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_9.setFont(font)
        self.appliancename_label_9.setObjectName("appliancename_label_9")
        self.horizontallayout_9.addWidget(self.appliancename_label_9)
        self.appliancename_lineEdit_9 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_9.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_9.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_9.setObjectName("appliancename_lineEdit_9")
        self.horizontallayout_9.addWidget(self.appliancename_lineEdit_9)
        self.Togglebutton_9 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_9.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_9.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_9.setObjectName("Togglebutton_9")
        self.horizontallayout_9.addWidget(self.Togglebutton_9)
        self.verticalLayout.addLayout(self.horizontallayout_9)
        self.widget_9 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_9.setPalette(palette)
        self.widget_9.setTabletTracking(False)
        self.widget_9.setAutoFillBackground(False)
        self.widget_9.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_9.setObjectName("widget_9")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.widget_9)
        self.gridLayout_9.setObjectName("gridLayout_9")
        spacerItem32 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem32, 3, 5, 1, 3)
        spacerItem33 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem33, 7, 5, 1, 3)
        spacerItem34 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem34, 3, 0, 1, 4)
        self.line_18 = QtWidgets.QFrame(self.widget_9)
        self.line_18.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_18.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_18.setObjectName("line_18")
        self.gridLayout_9.addWidget(self.line_18, 0, 4, 3, 1)
        self.power_9 = QtWidgets.QLabel(self.widget_9)
        self.power_9.setMinimumSize(QtCore.QSize(0, 31))
        self.power_9.setObjectName("power_9")
        self.gridLayout_9.addWidget(self.power_9, 0, 5, 1, 1)
        self.number_9 = QtWidgets.QLabel(self.widget_9)
        self.number_9.setMinimumSize(QtCore.QSize(151, 31))
        self.number_9.setObjectName("number_9")
        self.gridLayout_9.addWidget(self.number_9, 0, 0, 1, 3)
        self.power_spinBox_9 = QtWidgets.QSpinBox(self.widget_9)
        self.power_spinBox_9.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_9.setMaximum(999999999)
        self.power_spinBox_9.setObjectName("power_spinBox_9")
        self.gridLayout_9.addWidget(self.power_spinBox_9, 0, 6, 1, 3)
        self.number_spinBox_9 = QtWidgets.QSpinBox(self.widget_9)
        self.number_spinBox_9.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_9.setMinimum(1)
        self.number_spinBox_9.setMaximum(999999999)
        self.number_spinBox_9.setProperty("value", 1)
        self.number_spinBox_9.setObjectName("number_spinBox_9")
        self.gridLayout_9.addWidget(self.number_spinBox_9, 0, 3, 1, 1)
        self.r_var_spinBox_9 = QtWidgets.QSpinBox(self.widget_9)
        self.r_var_spinBox_9.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_9.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_9.setMaximum(100)
        self.r_var_spinBox_9.setObjectName("r_var_spinBox_9")
        self.gridLayout_9.addWidget(self.r_var_spinBox_9, 8, 3, 1, 1)
        self.line_19 = QtWidgets.QFrame(self.widget_9)
        self.line_19.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_19.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_19.setObjectName("line_19")
        self.gridLayout_9.addWidget(self.line_19, 8, 4, 3, 1)
        self.wd_we_comboBox_9 = QtWidgets.QComboBox(self.widget_9)
        self.wd_we_comboBox_9.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_9.setObjectName("wd_we_comboBox_9")
        self.wd_we_comboBox_9.addItem("")
        self.wd_we_comboBox_9.addItem("")
        self.wd_we_comboBox_9.addItem("")
        self.gridLayout_9.addWidget(self.wd_we_comboBox_9, 2, 6, 1, 3)
        self.num_windows_spinBox_9 = QtWidgets.QSpinBox(self.widget_9)
        self.num_windows_spinBox_9.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_9.setMinimum(1)
        self.num_windows_spinBox_9.setMaximum(3)
        self.num_windows_spinBox_9.setObjectName("num_windows_spinBox_9")
        self.gridLayout_9.addWidget(self.num_windows_spinBox_9, 1, 8, 1, 1)
        self.num_windows_9 = QtWidgets.QLabel(self.widget_9)
        self.num_windows_9.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_9.setObjectName("num_windows_9")
        self.gridLayout_9.addWidget(self.num_windows_9, 1, 5, 1, 3)
        self.w1start_9 = QtWidgets.QLabel(self.widget_9)
        self.w1start_9.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_9.setObjectName("w1start_9")
        self.gridLayout_9.addWidget(self.w1start_9, 4, 0, 1, 1)
        self.function_time_spinBox_9 = QtWidgets.QSpinBox(self.widget_9)
        self.function_time_spinBox_9.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_9.setMaximum(1440)
        self.function_time_spinBox_9.setProperty("value", 0)
        self.function_time_spinBox_9.setObjectName("function_time_spinBox_9")
        self.gridLayout_9.addWidget(self.function_time_spinBox_9, 1, 3, 1, 1)
        self.label_33 = QtWidgets.QLabel(self.widget_9)
        self.label_33.setObjectName("label_33")
        self.gridLayout_9.addWidget(self.label_33, 6, 4, 1, 1)
        self.label_34 = QtWidgets.QLabel(self.widget_9)
        self.label_34.setObjectName("label_34")
        self.gridLayout_9.addWidget(self.label_34, 4, 4, 1, 1)
        self.wd_we_9 = QtWidgets.QLabel(self.widget_9)
        self.wd_we_9.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_9.setObjectName("wd_we_9")
        self.gridLayout_9.addWidget(self.wd_we_9, 2, 5, 1, 1)
        self.function_time_9 = QtWidgets.QLabel(self.widget_9)
        self.function_time_9.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_9.setObjectName("function_time_9")
        self.gridLayout_9.addWidget(self.function_time_9, 1, 0, 1, 3)
        self.label_35 = QtWidgets.QLabel(self.widget_9)
        self.label_35.setObjectName("label_35")
        self.gridLayout_9.addWidget(self.label_35, 5, 4, 1, 1)
        self.r_var_9 = QtWidgets.QLabel(self.widget_9)
        self.r_var_9.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_9.setObjectName("r_var_9")
        self.gridLayout_9.addWidget(self.r_var_9, 8, 0, 1, 3)
        self.occationaluse_9 = QtWidgets.QLabel(self.widget_9)
        self.occationaluse_9.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_9.setObjectName("occationaluse_9")
        self.gridLayout_9.addWidget(self.occationaluse_9, 2, 0, 1, 1)
        spacerItem35 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_9.addItem(spacerItem35, 7, 0, 1, 4)
        self.occationaluse_spinBox_9 = QtWidgets.QSpinBox(self.widget_9)
        self.occationaluse_spinBox_9.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_9.setMinimum(1)
        self.occationaluse_spinBox_9.setMaximum(100)
        self.occationaluse_spinBox_9.setProperty("value", 100)
        self.occationaluse_spinBox_9.setObjectName("occationaluse_spinBox_9")
        self.gridLayout_9.addWidget(self.occationaluse_spinBox_9, 2, 3, 1, 1)
        self.func_cycle_spinBox_9 = QtWidgets.QSpinBox(self.widget_9)
        self.func_cycle_spinBox_9.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_9.setMaximum(1440)
        self.func_cycle_spinBox_9.setProperty("value", 1)
        self.func_cycle_spinBox_9.setObjectName("func_cycle_spinBox_9")
        self.gridLayout_9.addWidget(self.func_cycle_spinBox_9, 9, 7, 1, 2)
        self.fixed_9 = QtWidgets.QLabel(self.widget_9)
        self.fixed_9.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_9.setObjectName("fixed_9")
        self.gridLayout_9.addWidget(self.fixed_9, 10, 0, 1, 1)
        self.tfrv_9 = QtWidgets.QLabel(self.widget_9)
        self.tfrv_9.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_9.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_9.setObjectName("tfrv_9")
        self.gridLayout_9.addWidget(self.tfrv_9, 8, 5, 1, 2)
        self.flat_9 = QtWidgets.QLabel(self.widget_9)
        self.flat_9.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_9.setObjectName("flat_9")
        self.gridLayout_9.addWidget(self.flat_9, 10, 5, 1, 1)
        self.tfrv_spinBox_9 = QtWidgets.QSpinBox(self.widget_9)
        self.tfrv_spinBox_9.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_9.setMaximum(100)
        self.tfrv_spinBox_9.setObjectName("tfrv_spinBox_9")
        self.gridLayout_9.addWidget(self.tfrv_spinBox_9, 8, 8, 1, 1)
        self.flat_comboBox_9 = QtWidgets.QComboBox(self.widget_9)
        self.flat_comboBox_9.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_9.setObjectName("flat_comboBox_9")
        self.flat_comboBox_9.addItem("")
        self.flat_comboBox_9.addItem("")
        self.gridLayout_9.addWidget(self.flat_comboBox_9, 10, 7, 1, 2)
        self.thermal_v_spinBox_9 = QtWidgets.QSpinBox(self.widget_9)
        self.thermal_v_spinBox_9.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_9.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_9.setMaximum(100)
        self.thermal_v_spinBox_9.setObjectName("thermal_v_spinBox_9")
        self.gridLayout_9.addWidget(self.thermal_v_spinBox_9, 9, 3, 1, 1)
        self.fixe_comboBox_9 = QtWidgets.QComboBox(self.widget_9)
        self.fixe_comboBox_9.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_9.setObjectName("fixe_comboBox_9")
        self.fixe_comboBox_9.addItem("")
        self.fixe_comboBox_9.addItem("")
        self.gridLayout_9.addWidget(self.fixe_comboBox_9, 10, 3, 1, 1)
        self.func_cycle_9 = QtWidgets.QLabel(self.widget_9)
        self.func_cycle_9.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_9.setObjectName("func_cycle_9")
        self.gridLayout_9.addWidget(self.func_cycle_9, 9, 5, 1, 1)
        self.thermal_v_9 = QtWidgets.QLabel(self.widget_9)
        self.thermal_v_9.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_9.setObjectName("thermal_v_9")
        self.gridLayout_9.addWidget(self.thermal_v_9, 9, 0, 1, 3)
        self.w1start_timeEdit_9 = QtWidgets.QTimeEdit(self.widget_9)
        self.w1start_timeEdit_9.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_9.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_9.setObjectName("w1start_timeEdit_9")
        self.gridLayout_9.addWidget(self.w1start_timeEdit_9, 4, 3, 1, 1)
        self.w2end_9 = QtWidgets.QLabel(self.widget_9)
        self.w2end_9.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_9.setObjectName("w2end_9")
        self.gridLayout_9.addWidget(self.w2end_9, 5, 5, 1, 1)
        self.w2start_9 = QtWidgets.QLabel(self.widget_9)
        self.w2start_9.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_9.setObjectName("w2start_9")
        self.gridLayout_9.addWidget(self.w2start_9, 5, 0, 1, 2)
        self.w1end_timeEdit_9 = QtWidgets.QTimeEdit(self.widget_9)
        self.w1end_timeEdit_9.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_9.setObjectName("w1end_timeEdit_9")
        self.gridLayout_9.addWidget(self.w1end_timeEdit_9, 4, 6, 1, 2)
        self.w2start_timeEdit_9 = QtWidgets.QTimeEdit(self.widget_9)
        self.w2start_timeEdit_9.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_9.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_9.setObjectName("w2start_timeEdit_9")
        self.gridLayout_9.addWidget(self.w2start_timeEdit_9, 5, 3, 1, 1)
        self.w3start_9 = QtWidgets.QLabel(self.widget_9)
        self.w3start_9.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_9.setObjectName("w3start_9")
        self.gridLayout_9.addWidget(self.w3start_9, 6, 0, 1, 3)
        self.w1end_9 = QtWidgets.QLabel(self.widget_9)
        self.w1end_9.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_9.setObjectName("w1end_9")
        self.gridLayout_9.addWidget(self.w1end_9, 4, 5, 1, 1)
        self.w3end_9 = QtWidgets.QLabel(self.widget_9)
        self.w3end_9.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_9.setObjectName("w3end_9")
        self.gridLayout_9.addWidget(self.w3end_9, 6, 5, 1, 1)
        self.w2end_timeEdit_9 = QtWidgets.QTimeEdit(self.widget_9)
        self.w2end_timeEdit_9.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_9.setObjectName("w2end_timeEdit_9")
        self.gridLayout_9.addWidget(self.w2end_timeEdit_9, 5, 6, 1, 2)
        self.w3start_timeEdit_9 = QtWidgets.QTimeEdit(self.widget_9)
        self.w3start_timeEdit_9.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_9.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_9.setObjectName("w3start_timeEdit_9")
        self.gridLayout_9.addWidget(self.w3start_timeEdit_9, 6, 3, 1, 1)
        self.w3end_timeEdit_9 = QtWidgets.QTimeEdit(self.widget_9)
        self.w3end_timeEdit_9.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_9.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_9.setObjectName("w3end_timeEdit_9")
        self.gridLayout_9.addWidget(self.w3end_timeEdit_9, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_9)
        self.horizontallayout_10 = QtWidgets.QHBoxLayout()
        self.horizontallayout_10.setObjectName("horizontallayout_10")
        self.appliancename_label_10 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_10.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_10.setFont(font)
        self.appliancename_label_10.setObjectName("appliancename_label_10")
        self.horizontallayout_10.addWidget(self.appliancename_label_10)
        self.appliancename_lineEdit_10 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_10.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_10.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_10.setObjectName("appliancename_lineEdit_10")
        self.horizontallayout_10.addWidget(self.appliancename_lineEdit_10)
        self.Togglebutton_10 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_10.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_10.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_10.setObjectName("Togglebutton_10")
        self.horizontallayout_10.addWidget(self.Togglebutton_10)
        self.verticalLayout.addLayout(self.horizontallayout_10)
        self.widget_10 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_10.setPalette(palette)
        self.widget_10.setTabletTracking(False)
        self.widget_10.setAutoFillBackground(False)
        self.widget_10.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_10.setObjectName("widget_10")
        self.gridLayout_10 = QtWidgets.QGridLayout(self.widget_10)
        self.gridLayout_10.setObjectName("gridLayout_10")
        spacerItem36 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem36, 3, 5, 1, 3)
        spacerItem37 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem37, 7, 5, 1, 3)
        spacerItem38 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem38, 3, 0, 1, 4)
        self.line_20 = QtWidgets.QFrame(self.widget_10)
        self.line_20.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_20.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_20.setObjectName("line_20")
        self.gridLayout_10.addWidget(self.line_20, 0, 4, 3, 1)
        self.power_10 = QtWidgets.QLabel(self.widget_10)
        self.power_10.setMinimumSize(QtCore.QSize(0, 31))
        self.power_10.setObjectName("power_10")
        self.gridLayout_10.addWidget(self.power_10, 0, 5, 1, 1)
        self.number_10 = QtWidgets.QLabel(self.widget_10)
        self.number_10.setMinimumSize(QtCore.QSize(151, 31))
        self.number_10.setObjectName("number_10")
        self.gridLayout_10.addWidget(self.number_10, 0, 0, 1, 3)
        self.power_spinBox_10 = QtWidgets.QSpinBox(self.widget_10)
        self.power_spinBox_10.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_10.setMaximum(999999999)
        self.power_spinBox_10.setObjectName("power_spinBox_10")
        self.gridLayout_10.addWidget(self.power_spinBox_10, 0, 6, 1, 3)
        self.number_spinBox_10 = QtWidgets.QSpinBox(self.widget_10)
        self.number_spinBox_10.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_10.setMinimum(1)
        self.number_spinBox_10.setMaximum(999999999)
        self.number_spinBox_10.setProperty("value", 1)
        self.number_spinBox_10.setObjectName("number_spinBox_10")
        self.gridLayout_10.addWidget(self.number_spinBox_10, 0, 3, 1, 1)
        self.r_var_spinBox_10 = QtWidgets.QSpinBox(self.widget_10)
        self.r_var_spinBox_10.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_10.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_10.setMaximum(100)
        self.r_var_spinBox_10.setObjectName("r_var_spinBox_10")
        self.gridLayout_10.addWidget(self.r_var_spinBox_10, 8, 3, 1, 1)
        self.line_21 = QtWidgets.QFrame(self.widget_10)
        self.line_21.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_21.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_21.setObjectName("line_21")
        self.gridLayout_10.addWidget(self.line_21, 8, 4, 3, 1)
        self.wd_we_comboBox_10 = QtWidgets.QComboBox(self.widget_10)
        self.wd_we_comboBox_10.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_10.setObjectName("wd_we_comboBox_10")
        self.wd_we_comboBox_10.addItem("")
        self.wd_we_comboBox_10.addItem("")
        self.wd_we_comboBox_10.addItem("")
        self.gridLayout_10.addWidget(self.wd_we_comboBox_10, 2, 6, 1, 3)
        self.num_windows_spinBox_10 = QtWidgets.QSpinBox(self.widget_10)
        self.num_windows_spinBox_10.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_10.setMinimum(1)
        self.num_windows_spinBox_10.setMaximum(3)
        self.num_windows_spinBox_10.setObjectName("num_windows_spinBox_10")
        self.gridLayout_10.addWidget(self.num_windows_spinBox_10, 1, 8, 1, 1)
        self.num_windows_10 = QtWidgets.QLabel(self.widget_10)
        self.num_windows_10.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_10.setObjectName("num_windows_10")
        self.gridLayout_10.addWidget(self.num_windows_10, 1, 5, 1, 3)
        self.w1start_10 = QtWidgets.QLabel(self.widget_10)
        self.w1start_10.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_10.setObjectName("w1start_10")
        self.gridLayout_10.addWidget(self.w1start_10, 4, 0, 1, 1)
        self.function_time_spinBox_10 = QtWidgets.QSpinBox(self.widget_10)
        self.function_time_spinBox_10.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_10.setMaximum(1440)
        self.function_time_spinBox_10.setProperty("value", 0)
        self.function_time_spinBox_10.setObjectName("function_time_spinBox_10")
        self.gridLayout_10.addWidget(self.function_time_spinBox_10, 1, 3, 1, 1)
        self.label_36 = QtWidgets.QLabel(self.widget_10)
        self.label_36.setObjectName("label_36")
        self.gridLayout_10.addWidget(self.label_36, 6, 4, 1, 1)
        self.label_37 = QtWidgets.QLabel(self.widget_10)
        self.label_37.setObjectName("label_37")
        self.gridLayout_10.addWidget(self.label_37, 4, 4, 1, 1)
        self.wd_we_10 = QtWidgets.QLabel(self.widget_10)
        self.wd_we_10.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_10.setObjectName("wd_we_10")
        self.gridLayout_10.addWidget(self.wd_we_10, 2, 5, 1, 1)
        self.function_time_10 = QtWidgets.QLabel(self.widget_10)
        self.function_time_10.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_10.setObjectName("function_time_10")
        self.gridLayout_10.addWidget(self.function_time_10, 1, 0, 1, 3)
        self.label_38 = QtWidgets.QLabel(self.widget_10)
        self.label_38.setObjectName("label_38")
        self.gridLayout_10.addWidget(self.label_38, 5, 4, 1, 1)
        self.r_var_10 = QtWidgets.QLabel(self.widget_10)
        self.r_var_10.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_10.setObjectName("r_var_10")
        self.gridLayout_10.addWidget(self.r_var_10, 8, 0, 1, 3)
        self.occationaluse_10 = QtWidgets.QLabel(self.widget_10)
        self.occationaluse_10.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_10.setObjectName("occationaluse_10")
        self.gridLayout_10.addWidget(self.occationaluse_10, 2, 0, 1, 1)
        spacerItem39 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_10.addItem(spacerItem39, 7, 0, 1, 4)
        self.occationaluse_spinBox_10 = QtWidgets.QSpinBox(self.widget_10)
        self.occationaluse_spinBox_10.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_10.setMinimum(1)
        self.occationaluse_spinBox_10.setMaximum(100)
        self.occationaluse_spinBox_10.setProperty("value", 100)
        self.occationaluse_spinBox_10.setObjectName("occationaluse_spinBox_10")
        self.gridLayout_10.addWidget(self.occationaluse_spinBox_10, 2, 3, 1, 1)
        self.func_cycle_spinBox_10 = QtWidgets.QSpinBox(self.widget_10)
        self.func_cycle_spinBox_10.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_10.setMaximum(1440)
        self.func_cycle_spinBox_10.setProperty("value", 1)
        self.func_cycle_spinBox_10.setObjectName("func_cycle_spinBox_10")
        self.gridLayout_10.addWidget(self.func_cycle_spinBox_10, 9, 7, 1, 2)
        self.fixed_10 = QtWidgets.QLabel(self.widget_10)
        self.fixed_10.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_10.setObjectName("fixed_10")
        self.gridLayout_10.addWidget(self.fixed_10, 10, 0, 1, 1)
        self.tfrv_10 = QtWidgets.QLabel(self.widget_10)
        self.tfrv_10.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_10.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_10.setObjectName("tfrv_10")
        self.gridLayout_10.addWidget(self.tfrv_10, 8, 5, 1, 2)
        self.flat_10 = QtWidgets.QLabel(self.widget_10)
        self.flat_10.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_10.setObjectName("flat_10")
        self.gridLayout_10.addWidget(self.flat_10, 10, 5, 1, 1)
        self.tfrv_spinBox_10 = QtWidgets.QSpinBox(self.widget_10)
        self.tfrv_spinBox_10.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_10.setMaximum(100)
        self.tfrv_spinBox_10.setObjectName("tfrv_spinBox_10")
        self.gridLayout_10.addWidget(self.tfrv_spinBox_10, 8, 8, 1, 1)
        self.flat_comboBox_10 = QtWidgets.QComboBox(self.widget_10)
        self.flat_comboBox_10.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_10.setObjectName("flat_comboBox_10")
        self.flat_comboBox_10.addItem("")
        self.flat_comboBox_10.addItem("")
        self.gridLayout_10.addWidget(self.flat_comboBox_10, 10, 7, 1, 2)
        self.thermal_v_spinBox_10 = QtWidgets.QSpinBox(self.widget_10)
        self.thermal_v_spinBox_10.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_10.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_10.setMaximum(100)
        self.thermal_v_spinBox_10.setObjectName("thermal_v_spinBox_10")
        self.gridLayout_10.addWidget(self.thermal_v_spinBox_10, 9, 3, 1, 1)
        self.fixe_comboBox_10 = QtWidgets.QComboBox(self.widget_10)
        self.fixe_comboBox_10.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_10.setObjectName("fixe_comboBox_10")
        self.fixe_comboBox_10.addItem("")
        self.fixe_comboBox_10.addItem("")
        self.gridLayout_10.addWidget(self.fixe_comboBox_10, 10, 3, 1, 1)
        self.func_cycle_10 = QtWidgets.QLabel(self.widget_10)
        self.func_cycle_10.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_10.setObjectName("func_cycle_10")
        self.gridLayout_10.addWidget(self.func_cycle_10, 9, 5, 1, 1)
        self.thermal_v_10 = QtWidgets.QLabel(self.widget_10)
        self.thermal_v_10.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_10.setObjectName("thermal_v_10")
        self.gridLayout_10.addWidget(self.thermal_v_10, 9, 0, 1, 3)
        self.w1start_timeEdit_10 = QtWidgets.QTimeEdit(self.widget_10)
        self.w1start_timeEdit_10.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_10.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_10.setObjectName("w1start_timeEdit_10")
        self.gridLayout_10.addWidget(self.w1start_timeEdit_10, 4, 3, 1, 1)
        self.w2end_10 = QtWidgets.QLabel(self.widget_10)
        self.w2end_10.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_10.setObjectName("w2end_10")
        self.gridLayout_10.addWidget(self.w2end_10, 5, 5, 1, 1)
        self.w2start_10 = QtWidgets.QLabel(self.widget_10)
        self.w2start_10.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_10.setObjectName("w2start_10")
        self.gridLayout_10.addWidget(self.w2start_10, 5, 0, 1, 2)
        self.w1end_timeEdit_10 = QtWidgets.QTimeEdit(self.widget_10)
        self.w1end_timeEdit_10.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_10.setObjectName("w1end_timeEdit_10")
        self.gridLayout_10.addWidget(self.w1end_timeEdit_10, 4, 6, 1, 2)
        self.w2start_timeEdit_10 = QtWidgets.QTimeEdit(self.widget_10)
        self.w2start_timeEdit_10.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_10.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_10.setObjectName("w2start_timeEdit_10")
        self.gridLayout_10.addWidget(self.w2start_timeEdit_10, 5, 3, 1, 1)
        self.w3start_10 = QtWidgets.QLabel(self.widget_10)
        self.w3start_10.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_10.setObjectName("w3start_10")
        self.gridLayout_10.addWidget(self.w3start_10, 6, 0, 1, 3)
        self.w1end_10 = QtWidgets.QLabel(self.widget_10)
        self.w1end_10.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_10.setObjectName("w1end_10")
        self.gridLayout_10.addWidget(self.w1end_10, 4, 5, 1, 1)
        self.w3end_10 = QtWidgets.QLabel(self.widget_10)
        self.w3end_10.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_10.setObjectName("w3end_10")
        self.gridLayout_10.addWidget(self.w3end_10, 6, 5, 1, 1)
        self.w2end_timeEdit_10 = QtWidgets.QTimeEdit(self.widget_10)
        self.w2end_timeEdit_10.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_10.setObjectName("w2end_timeEdit_10")
        self.gridLayout_10.addWidget(self.w2end_timeEdit_10, 5, 6, 1, 2)
        self.w3start_timeEdit_10 = QtWidgets.QTimeEdit(self.widget_10)
        self.w3start_timeEdit_10.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_10.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_10.setObjectName("w3start_timeEdit_10")
        self.gridLayout_10.addWidget(self.w3start_timeEdit_10, 6, 3, 1, 1)
        self.w3end_timeEdit_10 = QtWidgets.QTimeEdit(self.widget_10)
        self.w3end_timeEdit_10.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_10.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_10.setObjectName("w3end_timeEdit_10")
        self.gridLayout_10.addWidget(self.w3end_timeEdit_10, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_10)
        self.horizontallayout_11 = QtWidgets.QHBoxLayout()
        self.horizontallayout_11.setObjectName("horizontallayout_11")
        self.appliancename_label_11 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_11.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_11.setFont(font)
        self.appliancename_label_11.setObjectName("appliancename_label_11")
        self.horizontallayout_11.addWidget(self.appliancename_label_11)
        self.appliancename_lineEdit_11 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_11.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_11.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_11.setObjectName("appliancename_lineEdit_11")
        self.horizontallayout_11.addWidget(self.appliancename_lineEdit_11)
        self.Togglebutton_11 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_11.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_11.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_11.setObjectName("Togglebutton_11")
        self.horizontallayout_11.addWidget(self.Togglebutton_11)
        self.verticalLayout.addLayout(self.horizontallayout_11)
        self.widget_11 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_11.setPalette(palette)
        self.widget_11.setTabletTracking(False)
        self.widget_11.setAutoFillBackground(False)
        self.widget_11.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_11.setObjectName("widget_11")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.widget_11)
        self.gridLayout_11.setObjectName("gridLayout_11")
        spacerItem40 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_11.addItem(spacerItem40, 3, 5, 1, 3)
        spacerItem41 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_11.addItem(spacerItem41, 7, 5, 1, 3)
        spacerItem42 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_11.addItem(spacerItem42, 3, 0, 1, 4)
        self.line_22 = QtWidgets.QFrame(self.widget_11)
        self.line_22.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_22.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_22.setObjectName("line_22")
        self.gridLayout_11.addWidget(self.line_22, 0, 4, 3, 1)
        self.power_11 = QtWidgets.QLabel(self.widget_11)
        self.power_11.setMinimumSize(QtCore.QSize(0, 31))
        self.power_11.setObjectName("power_11")
        self.gridLayout_11.addWidget(self.power_11, 0, 5, 1, 1)
        self.number_11 = QtWidgets.QLabel(self.widget_11)
        self.number_11.setMinimumSize(QtCore.QSize(151, 31))
        self.number_11.setObjectName("number_11")
        self.gridLayout_11.addWidget(self.number_11, 0, 0, 1, 3)
        self.power_spinBox_11 = QtWidgets.QSpinBox(self.widget_11)
        self.power_spinBox_11.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_11.setMaximum(999999999)
        self.power_spinBox_11.setObjectName("power_spinBox_11")
        self.gridLayout_11.addWidget(self.power_spinBox_11, 0, 6, 1, 3)
        self.number_spinBox_11 = QtWidgets.QSpinBox(self.widget_11)
        self.number_spinBox_11.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_11.setMinimum(1)
        self.number_spinBox_11.setMaximum(999999999)
        self.number_spinBox_11.setProperty("value", 1)
        self.number_spinBox_11.setObjectName("number_spinBox_11")
        self.gridLayout_11.addWidget(self.number_spinBox_11, 0, 3, 1, 1)
        self.r_var_spinBox_11 = QtWidgets.QSpinBox(self.widget_11)
        self.r_var_spinBox_11.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_11.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_11.setMaximum(100)
        self.r_var_spinBox_11.setObjectName("r_var_spinBox_11")
        self.gridLayout_11.addWidget(self.r_var_spinBox_11, 8, 3, 1, 1)
        self.line_23 = QtWidgets.QFrame(self.widget_11)
        self.line_23.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_23.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_23.setObjectName("line_23")
        self.gridLayout_11.addWidget(self.line_23, 8, 4, 3, 1)
        self.wd_we_comboBox_11 = QtWidgets.QComboBox(self.widget_11)
        self.wd_we_comboBox_11.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_11.setObjectName("wd_we_comboBox_11")
        self.wd_we_comboBox_11.addItem("")
        self.wd_we_comboBox_11.addItem("")
        self.wd_we_comboBox_11.addItem("")
        self.gridLayout_11.addWidget(self.wd_we_comboBox_11, 2, 6, 1, 3)
        self.num_windows_spinBox_11 = QtWidgets.QSpinBox(self.widget_11)
        self.num_windows_spinBox_11.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_11.setMinimum(1)
        self.num_windows_spinBox_11.setMaximum(3)
        self.num_windows_spinBox_11.setObjectName("num_windows_spinBox_11")
        self.gridLayout_11.addWidget(self.num_windows_spinBox_11, 1, 8, 1, 1)
        self.num_windows_11 = QtWidgets.QLabel(self.widget_11)
        self.num_windows_11.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_11.setObjectName("num_windows_11")
        self.gridLayout_11.addWidget(self.num_windows_11, 1, 5, 1, 3)
        self.w1start_11 = QtWidgets.QLabel(self.widget_11)
        self.w1start_11.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_11.setObjectName("w1start_11")
        self.gridLayout_11.addWidget(self.w1start_11, 4, 0, 1, 1)
        self.function_time_spinBox_11 = QtWidgets.QSpinBox(self.widget_11)
        self.function_time_spinBox_11.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_11.setMaximum(1440)
        self.function_time_spinBox_11.setProperty("value", 0)
        self.function_time_spinBox_11.setObjectName("function_time_spinBox_11")
        self.gridLayout_11.addWidget(self.function_time_spinBox_11, 1, 3, 1, 1)
        self.label_39 = QtWidgets.QLabel(self.widget_11)
        self.label_39.setObjectName("label_39")
        self.gridLayout_11.addWidget(self.label_39, 6, 4, 1, 1)
        self.label_40 = QtWidgets.QLabel(self.widget_11)
        self.label_40.setObjectName("label_40")
        self.gridLayout_11.addWidget(self.label_40, 4, 4, 1, 1)
        self.wd_we_11 = QtWidgets.QLabel(self.widget_11)
        self.wd_we_11.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_11.setObjectName("wd_we_11")
        self.gridLayout_11.addWidget(self.wd_we_11, 2, 5, 1, 1)
        self.function_time_11 = QtWidgets.QLabel(self.widget_11)
        self.function_time_11.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_11.setObjectName("function_time_11")
        self.gridLayout_11.addWidget(self.function_time_11, 1, 0, 1, 3)
        self.label_41 = QtWidgets.QLabel(self.widget_11)
        self.label_41.setObjectName("label_41")
        self.gridLayout_11.addWidget(self.label_41, 5, 4, 1, 1)
        self.r_var_11 = QtWidgets.QLabel(self.widget_11)
        self.r_var_11.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_11.setObjectName("r_var_11")
        self.gridLayout_11.addWidget(self.r_var_11, 8, 0, 1, 3)
        self.occationaluse_11 = QtWidgets.QLabel(self.widget_11)
        self.occationaluse_11.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_11.setObjectName("occationaluse_11")
        self.gridLayout_11.addWidget(self.occationaluse_11, 2, 0, 1, 1)
        spacerItem43 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_11.addItem(spacerItem43, 7, 0, 1, 4)
        self.occationaluse_spinBox_11 = QtWidgets.QSpinBox(self.widget_11)
        self.occationaluse_spinBox_11.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_11.setMinimum(1)
        self.occationaluse_spinBox_11.setMaximum(100)
        self.occationaluse_spinBox_11.setProperty("value", 100)
        self.occationaluse_spinBox_11.setObjectName("occationaluse_spinBox_11")
        self.gridLayout_11.addWidget(self.occationaluse_spinBox_11, 2, 3, 1, 1)
        self.func_cycle_spinBox_11 = QtWidgets.QSpinBox(self.widget_11)
        self.func_cycle_spinBox_11.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_11.setMaximum(1440)
        self.func_cycle_spinBox_11.setProperty("value", 1)
        self.func_cycle_spinBox_11.setObjectName("func_cycle_spinBox_11")
        self.gridLayout_11.addWidget(self.func_cycle_spinBox_11, 9, 7, 1, 2)
        self.fixed_11 = QtWidgets.QLabel(self.widget_11)
        self.fixed_11.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_11.setObjectName("fixed_11")
        self.gridLayout_11.addWidget(self.fixed_11, 10, 0, 1, 1)
        self.tfrv_11 = QtWidgets.QLabel(self.widget_11)
        self.tfrv_11.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_11.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_11.setObjectName("tfrv_11")
        self.gridLayout_11.addWidget(self.tfrv_11, 8, 5, 1, 2)
        self.flat_11 = QtWidgets.QLabel(self.widget_11)
        self.flat_11.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_11.setObjectName("flat_11")
        self.gridLayout_11.addWidget(self.flat_11, 10, 5, 1, 1)
        self.tfrv_spinBox_11 = QtWidgets.QSpinBox(self.widget_11)
        self.tfrv_spinBox_11.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_11.setMaximum(100)
        self.tfrv_spinBox_11.setObjectName("tfrv_spinBox_11")
        self.gridLayout_11.addWidget(self.tfrv_spinBox_11, 8, 8, 1, 1)
        self.flat_comboBox_11 = QtWidgets.QComboBox(self.widget_11)
        self.flat_comboBox_11.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_11.setObjectName("flat_comboBox_11")
        self.flat_comboBox_11.addItem("")
        self.flat_comboBox_11.addItem("")
        self.gridLayout_11.addWidget(self.flat_comboBox_11, 10, 7, 1, 2)
        self.thermal_v_spinBox_11 = QtWidgets.QSpinBox(self.widget_11)
        self.thermal_v_spinBox_11.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_11.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_11.setMaximum(100)
        self.thermal_v_spinBox_11.setObjectName("thermal_v_spinBox_11")
        self.gridLayout_11.addWidget(self.thermal_v_spinBox_11, 9, 3, 1, 1)
        self.fixe_comboBox_11 = QtWidgets.QComboBox(self.widget_11)
        self.fixe_comboBox_11.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_11.setObjectName("fixe_comboBox_11")
        self.fixe_comboBox_11.addItem("")
        self.fixe_comboBox_11.addItem("")
        self.gridLayout_11.addWidget(self.fixe_comboBox_11, 10, 3, 1, 1)
        self.func_cycle_11 = QtWidgets.QLabel(self.widget_11)
        self.func_cycle_11.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_11.setObjectName("func_cycle_11")
        self.gridLayout_11.addWidget(self.func_cycle_11, 9, 5, 1, 1)
        self.thermal_v_11 = QtWidgets.QLabel(self.widget_11)
        self.thermal_v_11.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_11.setObjectName("thermal_v_11")
        self.gridLayout_11.addWidget(self.thermal_v_11, 9, 0, 1, 3)
        self.w1start_timeEdit_11 = QtWidgets.QTimeEdit(self.widget_11)
        self.w1start_timeEdit_11.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_11.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_11.setObjectName("w1start_timeEdit_11")
        self.gridLayout_11.addWidget(self.w1start_timeEdit_11, 4, 3, 1, 1)
        self.w2end_11 = QtWidgets.QLabel(self.widget_11)
        self.w2end_11.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_11.setObjectName("w2end_11")
        self.gridLayout_11.addWidget(self.w2end_11, 5, 5, 1, 1)
        self.w2start_11 = QtWidgets.QLabel(self.widget_11)
        self.w2start_11.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_11.setObjectName("w2start_11")
        self.gridLayout_11.addWidget(self.w2start_11, 5, 0, 1, 2)
        self.w1end_timeEdit_11 = QtWidgets.QTimeEdit(self.widget_11)
        self.w1end_timeEdit_11.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_11.setObjectName("w1end_timeEdit_11")
        self.gridLayout_11.addWidget(self.w1end_timeEdit_11, 4, 6, 1, 2)
        self.w2start_timeEdit_11 = QtWidgets.QTimeEdit(self.widget_11)
        self.w2start_timeEdit_11.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_11.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_11.setObjectName("w2start_timeEdit_11")
        self.gridLayout_11.addWidget(self.w2start_timeEdit_11, 5, 3, 1, 1)
        self.w3start_11 = QtWidgets.QLabel(self.widget_11)
        self.w3start_11.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_11.setObjectName("w3start_11")
        self.gridLayout_11.addWidget(self.w3start_11, 6, 0, 1, 3)
        self.w1end_11 = QtWidgets.QLabel(self.widget_11)
        self.w1end_11.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_11.setObjectName("w1end_11")
        self.gridLayout_11.addWidget(self.w1end_11, 4, 5, 1, 1)
        self.w3end_11 = QtWidgets.QLabel(self.widget_11)
        self.w3end_11.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_11.setObjectName("w3end_11")
        self.gridLayout_11.addWidget(self.w3end_11, 6, 5, 1, 1)
        self.w2end_timeEdit_11 = QtWidgets.QTimeEdit(self.widget_11)
        self.w2end_timeEdit_11.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_11.setObjectName("w2end_timeEdit_11")
        self.gridLayout_11.addWidget(self.w2end_timeEdit_11, 5, 6, 1, 2)
        self.w3start_timeEdit_11 = QtWidgets.QTimeEdit(self.widget_11)
        self.w3start_timeEdit_11.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_11.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_11.setObjectName("w3start_timeEdit_11")
        self.gridLayout_11.addWidget(self.w3start_timeEdit_11, 6, 3, 1, 1)
        self.w3end_timeEdit_11 = QtWidgets.QTimeEdit(self.widget_11)
        self.w3end_timeEdit_11.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_11.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_11.setObjectName("w3end_timeEdit_11")
        self.gridLayout_11.addWidget(self.w3end_timeEdit_11, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_11)
        self.horizontallayout_12 = QtWidgets.QHBoxLayout()
        self.horizontallayout_12.setObjectName("horizontallayout_12")
        self.appliancename_label_12 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_12.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_12.setFont(font)
        self.appliancename_label_12.setObjectName("appliancename_label_12")
        self.horizontallayout_12.addWidget(self.appliancename_label_12)
        self.appliancename_lineEdit_12 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_12.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_12.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_12.setObjectName("appliancename_lineEdit_12")
        self.horizontallayout_12.addWidget(self.appliancename_lineEdit_12)
        self.Togglebutton_12 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_12.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_12.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_12.setObjectName("Togglebutton_12")
        self.horizontallayout_12.addWidget(self.Togglebutton_12)
        self.verticalLayout.addLayout(self.horizontallayout_12)
        self.widget_12 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_12.setPalette(palette)
        self.widget_12.setTabletTracking(False)
        self.widget_12.setAutoFillBackground(False)
        self.widget_12.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_12.setObjectName("widget_12")
        self.gridLayout_12 = QtWidgets.QGridLayout(self.widget_12)
        self.gridLayout_12.setObjectName("gridLayout_12")
        spacerItem44 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_12.addItem(spacerItem44, 3, 5, 1, 3)
        spacerItem45 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_12.addItem(spacerItem45, 7, 5, 1, 3)
        spacerItem46 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_12.addItem(spacerItem46, 3, 0, 1, 4)
        self.line_24 = QtWidgets.QFrame(self.widget_12)
        self.line_24.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_24.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_24.setObjectName("line_24")
        self.gridLayout_12.addWidget(self.line_24, 0, 4, 3, 1)
        self.power_12 = QtWidgets.QLabel(self.widget_12)
        self.power_12.setMinimumSize(QtCore.QSize(0, 31))
        self.power_12.setObjectName("power_12")
        self.gridLayout_12.addWidget(self.power_12, 0, 5, 1, 1)
        self.number_12 = QtWidgets.QLabel(self.widget_12)
        self.number_12.setMinimumSize(QtCore.QSize(151, 31))
        self.number_12.setObjectName("number_12")
        self.gridLayout_12.addWidget(self.number_12, 0, 0, 1, 3)
        self.power_spinBox_12 = QtWidgets.QSpinBox(self.widget_12)
        self.power_spinBox_12.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_12.setMaximum(999999999)
        self.power_spinBox_12.setObjectName("power_spinBox_12")
        self.gridLayout_12.addWidget(self.power_spinBox_12, 0, 6, 1, 3)
        self.number_spinBox_12 = QtWidgets.QSpinBox(self.widget_12)
        self.number_spinBox_12.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_12.setMinimum(1)
        self.number_spinBox_12.setMaximum(999999999)
        self.number_spinBox_12.setProperty("value", 1)
        self.number_spinBox_12.setObjectName("number_spinBox_12")
        self.gridLayout_12.addWidget(self.number_spinBox_12, 0, 3, 1, 1)
        self.r_var_spinBox_12 = QtWidgets.QSpinBox(self.widget_12)
        self.r_var_spinBox_12.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_12.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_12.setMaximum(100)
        self.r_var_spinBox_12.setObjectName("r_var_spinBox_12")
        self.gridLayout_12.addWidget(self.r_var_spinBox_12, 8, 3, 1, 1)
        self.line_25 = QtWidgets.QFrame(self.widget_12)
        self.line_25.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_25.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_25.setObjectName("line_25")
        self.gridLayout_12.addWidget(self.line_25, 8, 4, 3, 1)
        self.wd_we_comboBox_12 = QtWidgets.QComboBox(self.widget_12)
        self.wd_we_comboBox_12.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_12.setObjectName("wd_we_comboBox_12")
        self.wd_we_comboBox_12.addItem("")
        self.wd_we_comboBox_12.addItem("")
        self.wd_we_comboBox_12.addItem("")
        self.gridLayout_12.addWidget(self.wd_we_comboBox_12, 2, 6, 1, 3)
        self.num_windows_spinBox_12 = QtWidgets.QSpinBox(self.widget_12)
        self.num_windows_spinBox_12.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_12.setMinimum(1)
        self.num_windows_spinBox_12.setMaximum(3)
        self.num_windows_spinBox_12.setObjectName("num_windows_spinBox_12")
        self.gridLayout_12.addWidget(self.num_windows_spinBox_12, 1, 8, 1, 1)
        self.num_windows_12 = QtWidgets.QLabel(self.widget_12)
        self.num_windows_12.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_12.setObjectName("num_windows_12")
        self.gridLayout_12.addWidget(self.num_windows_12, 1, 5, 1, 3)
        self.w1start_12 = QtWidgets.QLabel(self.widget_12)
        self.w1start_12.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_12.setObjectName("w1start_12")
        self.gridLayout_12.addWidget(self.w1start_12, 4, 0, 1, 1)
        self.function_time_spinBox_12 = QtWidgets.QSpinBox(self.widget_12)
        self.function_time_spinBox_12.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_12.setMaximum(1440)
        self.function_time_spinBox_12.setProperty("value", 0)
        self.function_time_spinBox_12.setObjectName("function_time_spinBox_12")
        self.gridLayout_12.addWidget(self.function_time_spinBox_12, 1, 3, 1, 1)
        self.label_42 = QtWidgets.QLabel(self.widget_12)
        self.label_42.setObjectName("label_42")
        self.gridLayout_12.addWidget(self.label_42, 6, 4, 1, 1)
        self.label_43 = QtWidgets.QLabel(self.widget_12)
        self.label_43.setObjectName("label_43")
        self.gridLayout_12.addWidget(self.label_43, 4, 4, 1, 1)
        self.wd_we_12 = QtWidgets.QLabel(self.widget_12)
        self.wd_we_12.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_12.setObjectName("wd_we_12")
        self.gridLayout_12.addWidget(self.wd_we_12, 2, 5, 1, 1)
        self.function_time_12 = QtWidgets.QLabel(self.widget_12)
        self.function_time_12.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_12.setObjectName("function_time_12")
        self.gridLayout_12.addWidget(self.function_time_12, 1, 0, 1, 3)
        self.label_44 = QtWidgets.QLabel(self.widget_12)
        self.label_44.setObjectName("label_44")
        self.gridLayout_12.addWidget(self.label_44, 5, 4, 1, 1)
        self.r_var_12 = QtWidgets.QLabel(self.widget_12)
        self.r_var_12.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_12.setObjectName("r_var_12")
        self.gridLayout_12.addWidget(self.r_var_12, 8, 0, 1, 3)
        self.occationaluse_12 = QtWidgets.QLabel(self.widget_12)
        self.occationaluse_12.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_12.setObjectName("occationaluse_12")
        self.gridLayout_12.addWidget(self.occationaluse_12, 2, 0, 1, 1)
        spacerItem47 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_12.addItem(spacerItem47, 7, 0, 1, 4)
        self.occationaluse_spinBox_12 = QtWidgets.QSpinBox(self.widget_12)
        self.occationaluse_spinBox_12.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_12.setMinimum(1)
        self.occationaluse_spinBox_12.setMaximum(100)
        self.occationaluse_spinBox_12.setProperty("value", 100)
        self.occationaluse_spinBox_12.setObjectName("occationaluse_spinBox_12")
        self.gridLayout_12.addWidget(self.occationaluse_spinBox_12, 2, 3, 1, 1)
        self.func_cycle_spinBox_12 = QtWidgets.QSpinBox(self.widget_12)
        self.func_cycle_spinBox_12.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_12.setMaximum(1440)
        self.func_cycle_spinBox_12.setProperty("value", 1)
        self.func_cycle_spinBox_12.setObjectName("func_cycle_spinBox_12")
        self.gridLayout_12.addWidget(self.func_cycle_spinBox_12, 9, 7, 1, 2)
        self.fixed_12 = QtWidgets.QLabel(self.widget_12)
        self.fixed_12.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_12.setObjectName("fixed_12")
        self.gridLayout_12.addWidget(self.fixed_12, 10, 0, 1, 1)
        self.tfrv_12 = QtWidgets.QLabel(self.widget_12)
        self.tfrv_12.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_12.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_12.setObjectName("tfrv_12")
        self.gridLayout_12.addWidget(self.tfrv_12, 8, 5, 1, 2)
        self.flat_12 = QtWidgets.QLabel(self.widget_12)
        self.flat_12.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_12.setObjectName("flat_12")
        self.gridLayout_12.addWidget(self.flat_12, 10, 5, 1, 1)
        self.tfrv_spinBox_12 = QtWidgets.QSpinBox(self.widget_12)
        self.tfrv_spinBox_12.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_12.setMaximum(100)
        self.tfrv_spinBox_12.setObjectName("tfrv_spinBox_12")
        self.gridLayout_12.addWidget(self.tfrv_spinBox_12, 8, 8, 1, 1)
        self.flat_comboBox_12 = QtWidgets.QComboBox(self.widget_12)
        self.flat_comboBox_12.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_12.setObjectName("flat_comboBox_12")
        self.flat_comboBox_12.addItem("")
        self.flat_comboBox_12.addItem("")
        self.gridLayout_12.addWidget(self.flat_comboBox_12, 10, 7, 1, 2)
        self.thermal_v_spinBox_12 = QtWidgets.QSpinBox(self.widget_12)
        self.thermal_v_spinBox_12.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_12.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_12.setMaximum(100)
        self.thermal_v_spinBox_12.setObjectName("thermal_v_spinBox_12")
        self.gridLayout_12.addWidget(self.thermal_v_spinBox_12, 9, 3, 1, 1)
        self.fixe_comboBox_12 = QtWidgets.QComboBox(self.widget_12)
        self.fixe_comboBox_12.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_12.setObjectName("fixe_comboBox_12")
        self.fixe_comboBox_12.addItem("")
        self.fixe_comboBox_12.addItem("")
        self.gridLayout_12.addWidget(self.fixe_comboBox_12, 10, 3, 1, 1)
        self.func_cycle_12 = QtWidgets.QLabel(self.widget_12)
        self.func_cycle_12.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_12.setObjectName("func_cycle_12")
        self.gridLayout_12.addWidget(self.func_cycle_12, 9, 5, 1, 1)
        self.thermal_v_12 = QtWidgets.QLabel(self.widget_12)
        self.thermal_v_12.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_12.setObjectName("thermal_v_12")
        self.gridLayout_12.addWidget(self.thermal_v_12, 9, 0, 1, 3)
        self.w1start_timeEdit_12 = QtWidgets.QTimeEdit(self.widget_12)
        self.w1start_timeEdit_12.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_12.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_12.setObjectName("w1start_timeEdit_12")
        self.gridLayout_12.addWidget(self.w1start_timeEdit_12, 4, 3, 1, 1)
        self.w2end_12 = QtWidgets.QLabel(self.widget_12)
        self.w2end_12.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_12.setObjectName("w2end_12")
        self.gridLayout_12.addWidget(self.w2end_12, 5, 5, 1, 1)
        self.w2start_12 = QtWidgets.QLabel(self.widget_12)
        self.w2start_12.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_12.setObjectName("w2start_12")
        self.gridLayout_12.addWidget(self.w2start_12, 5, 0, 1, 2)
        self.w1end_timeEdit_12 = QtWidgets.QTimeEdit(self.widget_12)
        self.w1end_timeEdit_12.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_12.setObjectName("w1end_timeEdit_12")
        self.gridLayout_12.addWidget(self.w1end_timeEdit_12, 4, 6, 1, 2)
        self.w2start_timeEdit_12 = QtWidgets.QTimeEdit(self.widget_12)
        self.w2start_timeEdit_12.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_12.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_12.setObjectName("w2start_timeEdit_12")
        self.gridLayout_12.addWidget(self.w2start_timeEdit_12, 5, 3, 1, 1)
        self.w3start_12 = QtWidgets.QLabel(self.widget_12)
        self.w3start_12.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_12.setObjectName("w3start_12")
        self.gridLayout_12.addWidget(self.w3start_12, 6, 0, 1, 3)
        self.w1end_12 = QtWidgets.QLabel(self.widget_12)
        self.w1end_12.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_12.setObjectName("w1end_12")
        self.gridLayout_12.addWidget(self.w1end_12, 4, 5, 1, 1)
        self.w3end_12 = QtWidgets.QLabel(self.widget_12)
        self.w3end_12.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_12.setObjectName("w3end_12")
        self.gridLayout_12.addWidget(self.w3end_12, 6, 5, 1, 1)
        self.w2end_timeEdit_12 = QtWidgets.QTimeEdit(self.widget_12)
        self.w2end_timeEdit_12.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_12.setObjectName("w2end_timeEdit_12")
        self.gridLayout_12.addWidget(self.w2end_timeEdit_12, 5, 6, 1, 2)
        self.w3start_timeEdit_12 = QtWidgets.QTimeEdit(self.widget_12)
        self.w3start_timeEdit_12.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_12.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_12.setObjectName("w3start_timeEdit_12")
        self.gridLayout_12.addWidget(self.w3start_timeEdit_12, 6, 3, 1, 1)
        self.w3end_timeEdit_12 = QtWidgets.QTimeEdit(self.widget_12)
        self.w3end_timeEdit_12.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_12.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_12.setObjectName("w3end_timeEdit_12")
        self.gridLayout_12.addWidget(self.w3end_timeEdit_12, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_12)
        self.horizontallayout_13 = QtWidgets.QHBoxLayout()
        self.horizontallayout_13.setObjectName("horizontallayout_13")
        self.appliancename_label_13 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_13.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_13.setFont(font)
        self.appliancename_label_13.setObjectName("appliancename_label_13")
        self.horizontallayout_13.addWidget(self.appliancename_label_13)
        self.appliancename_lineEdit_13 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_13.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_13.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_13.setObjectName("appliancename_lineEdit_13")
        self.horizontallayout_13.addWidget(self.appliancename_lineEdit_13)
        self.Togglebutton_13 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_13.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_13.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_13.setObjectName("Togglebutton_13")
        self.horizontallayout_13.addWidget(self.Togglebutton_13)
        self.verticalLayout.addLayout(self.horizontallayout_13)
        self.widget_13 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_13.setPalette(palette)
        self.widget_13.setTabletTracking(False)
        self.widget_13.setAutoFillBackground(False)
        self.widget_13.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_13.setObjectName("widget_13")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.widget_13)
        self.gridLayout_13.setObjectName("gridLayout_13")
        spacerItem48 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_13.addItem(spacerItem48, 3, 5, 1, 3)
        spacerItem49 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_13.addItem(spacerItem49, 7, 5, 1, 3)
        spacerItem50 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_13.addItem(spacerItem50, 3, 0, 1, 4)
        self.line_26 = QtWidgets.QFrame(self.widget_13)
        self.line_26.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_26.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_26.setObjectName("line_26")
        self.gridLayout_13.addWidget(self.line_26, 0, 4, 3, 1)
        self.power_13 = QtWidgets.QLabel(self.widget_13)
        self.power_13.setMinimumSize(QtCore.QSize(0, 31))
        self.power_13.setObjectName("power_13")
        self.gridLayout_13.addWidget(self.power_13, 0, 5, 1, 1)
        self.number_13 = QtWidgets.QLabel(self.widget_13)
        self.number_13.setMinimumSize(QtCore.QSize(151, 31))
        self.number_13.setObjectName("number_13")
        self.gridLayout_13.addWidget(self.number_13, 0, 0, 1, 3)
        self.power_spinBox_13 = QtWidgets.QSpinBox(self.widget_13)
        self.power_spinBox_13.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_13.setMaximum(999999999)
        self.power_spinBox_13.setObjectName("power_spinBox_13")
        self.gridLayout_13.addWidget(self.power_spinBox_13, 0, 6, 1, 3)
        self.number_spinBox_13 = QtWidgets.QSpinBox(self.widget_13)
        self.number_spinBox_13.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_13.setMinimum(1)
        self.number_spinBox_13.setMaximum(999999999)
        self.number_spinBox_13.setProperty("value", 1)
        self.number_spinBox_13.setObjectName("number_spinBox_13")
        self.gridLayout_13.addWidget(self.number_spinBox_13, 0, 3, 1, 1)
        self.r_var_spinBox_13 = QtWidgets.QSpinBox(self.widget_13)
        self.r_var_spinBox_13.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_13.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_13.setMaximum(100)
        self.r_var_spinBox_13.setObjectName("r_var_spinBox_13")
        self.gridLayout_13.addWidget(self.r_var_spinBox_13, 8, 3, 1, 1)
        self.line_27 = QtWidgets.QFrame(self.widget_13)
        self.line_27.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_27.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_27.setObjectName("line_27")
        self.gridLayout_13.addWidget(self.line_27, 8, 4, 3, 1)
        self.wd_we_comboBox_13 = QtWidgets.QComboBox(self.widget_13)
        self.wd_we_comboBox_13.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_13.setObjectName("wd_we_comboBox_13")
        self.wd_we_comboBox_13.addItem("")
        self.wd_we_comboBox_13.addItem("")
        self.wd_we_comboBox_13.addItem("")
        self.gridLayout_13.addWidget(self.wd_we_comboBox_13, 2, 6, 1, 3)
        self.num_windows_spinBox_13 = QtWidgets.QSpinBox(self.widget_13)
        self.num_windows_spinBox_13.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_13.setMinimum(1)
        self.num_windows_spinBox_13.setMaximum(3)
        self.num_windows_spinBox_13.setObjectName("num_windows_spinBox_13")
        self.gridLayout_13.addWidget(self.num_windows_spinBox_13, 1, 8, 1, 1)
        self.num_windows_13 = QtWidgets.QLabel(self.widget_13)
        self.num_windows_13.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_13.setObjectName("num_windows_13")
        self.gridLayout_13.addWidget(self.num_windows_13, 1, 5, 1, 3)
        self.w1start_13 = QtWidgets.QLabel(self.widget_13)
        self.w1start_13.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_13.setObjectName("w1start_13")
        self.gridLayout_13.addWidget(self.w1start_13, 4, 0, 1, 1)
        self.function_time_spinBox_13 = QtWidgets.QSpinBox(self.widget_13)
        self.function_time_spinBox_13.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_13.setMaximum(1440)
        self.function_time_spinBox_13.setProperty("value", 0)
        self.function_time_spinBox_13.setObjectName("function_time_spinBox_13")
        self.gridLayout_13.addWidget(self.function_time_spinBox_13, 1, 3, 1, 1)
        self.label_45 = QtWidgets.QLabel(self.widget_13)
        self.label_45.setObjectName("label_45")
        self.gridLayout_13.addWidget(self.label_45, 6, 4, 1, 1)
        self.label_46 = QtWidgets.QLabel(self.widget_13)
        self.label_46.setObjectName("label_46")
        self.gridLayout_13.addWidget(self.label_46, 4, 4, 1, 1)
        self.wd_we_13 = QtWidgets.QLabel(self.widget_13)
        self.wd_we_13.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_13.setObjectName("wd_we_13")
        self.gridLayout_13.addWidget(self.wd_we_13, 2, 5, 1, 1)
        self.function_time_13 = QtWidgets.QLabel(self.widget_13)
        self.function_time_13.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_13.setObjectName("function_time_13")
        self.gridLayout_13.addWidget(self.function_time_13, 1, 0, 1, 3)
        self.label_47 = QtWidgets.QLabel(self.widget_13)
        self.label_47.setObjectName("label_47")
        self.gridLayout_13.addWidget(self.label_47, 5, 4, 1, 1)
        self.r_var_13 = QtWidgets.QLabel(self.widget_13)
        self.r_var_13.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_13.setObjectName("r_var_13")
        self.gridLayout_13.addWidget(self.r_var_13, 8, 0, 1, 3)
        self.occationaluse_13 = QtWidgets.QLabel(self.widget_13)
        self.occationaluse_13.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_13.setObjectName("occationaluse_13")
        self.gridLayout_13.addWidget(self.occationaluse_13, 2, 0, 1, 1)
        spacerItem51 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_13.addItem(spacerItem51, 7, 0, 1, 4)
        self.occationaluse_spinBox_13 = QtWidgets.QSpinBox(self.widget_13)
        self.occationaluse_spinBox_13.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_13.setMinimum(1)
        self.occationaluse_spinBox_13.setMaximum(100)
        self.occationaluse_spinBox_13.setProperty("value", 100)
        self.occationaluse_spinBox_13.setObjectName("occationaluse_spinBox_13")
        self.gridLayout_13.addWidget(self.occationaluse_spinBox_13, 2, 3, 1, 1)
        self.func_cycle_spinBox_13 = QtWidgets.QSpinBox(self.widget_13)
        self.func_cycle_spinBox_13.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_13.setMaximum(1440)
        self.func_cycle_spinBox_13.setProperty("value", 1)
        self.func_cycle_spinBox_13.setObjectName("func_cycle_spinBox_13")
        self.gridLayout_13.addWidget(self.func_cycle_spinBox_13, 9, 7, 1, 2)
        self.fixed_13 = QtWidgets.QLabel(self.widget_13)
        self.fixed_13.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_13.setObjectName("fixed_13")
        self.gridLayout_13.addWidget(self.fixed_13, 10, 0, 1, 1)
        self.tfrv_13 = QtWidgets.QLabel(self.widget_13)
        self.tfrv_13.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_13.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_13.setObjectName("tfrv_13")
        self.gridLayout_13.addWidget(self.tfrv_13, 8, 5, 1, 2)
        self.flat_13 = QtWidgets.QLabel(self.widget_13)
        self.flat_13.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_13.setObjectName("flat_13")
        self.gridLayout_13.addWidget(self.flat_13, 10, 5, 1, 1)
        self.tfrv_spinBox_13 = QtWidgets.QSpinBox(self.widget_13)
        self.tfrv_spinBox_13.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_13.setMaximum(100)
        self.tfrv_spinBox_13.setObjectName("tfrv_spinBox_13")
        self.gridLayout_13.addWidget(self.tfrv_spinBox_13, 8, 8, 1, 1)
        self.flat_comboBox_13 = QtWidgets.QComboBox(self.widget_13)
        self.flat_comboBox_13.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_13.setObjectName("flat_comboBox_13")
        self.flat_comboBox_13.addItem("")
        self.flat_comboBox_13.addItem("")
        self.gridLayout_13.addWidget(self.flat_comboBox_13, 10, 7, 1, 2)
        self.thermal_v_spinBox_13 = QtWidgets.QSpinBox(self.widget_13)
        self.thermal_v_spinBox_13.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_13.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_13.setMaximum(100)
        self.thermal_v_spinBox_13.setObjectName("thermal_v_spinBox_13")
        self.gridLayout_13.addWidget(self.thermal_v_spinBox_13, 9, 3, 1, 1)
        self.fixe_comboBox_13 = QtWidgets.QComboBox(self.widget_13)
        self.fixe_comboBox_13.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_13.setObjectName("fixe_comboBox_13")
        self.fixe_comboBox_13.addItem("")
        self.fixe_comboBox_13.addItem("")
        self.gridLayout_13.addWidget(self.fixe_comboBox_13, 10, 3, 1, 1)
        self.func_cycle_13 = QtWidgets.QLabel(self.widget_13)
        self.func_cycle_13.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_13.setObjectName("func_cycle_13")
        self.gridLayout_13.addWidget(self.func_cycle_13, 9, 5, 1, 1)
        self.thermal_v_13 = QtWidgets.QLabel(self.widget_13)
        self.thermal_v_13.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_13.setObjectName("thermal_v_13")
        self.gridLayout_13.addWidget(self.thermal_v_13, 9, 0, 1, 3)
        self.w1start_timeEdit_13 = QtWidgets.QTimeEdit(self.widget_13)
        self.w1start_timeEdit_13.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_13.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_13.setObjectName("w1start_timeEdit_13")
        self.gridLayout_13.addWidget(self.w1start_timeEdit_13, 4, 3, 1, 1)
        self.w2end_13 = QtWidgets.QLabel(self.widget_13)
        self.w2end_13.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_13.setObjectName("w2end_13")
        self.gridLayout_13.addWidget(self.w2end_13, 5, 5, 1, 1)
        self.w2start_13 = QtWidgets.QLabel(self.widget_13)
        self.w2start_13.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_13.setObjectName("w2start_13")
        self.gridLayout_13.addWidget(self.w2start_13, 5, 0, 1, 2)
        self.w1end_timeEdit_13 = QtWidgets.QTimeEdit(self.widget_13)
        self.w1end_timeEdit_13.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_13.setObjectName("w1end_timeEdit_13")
        self.gridLayout_13.addWidget(self.w1end_timeEdit_13, 4, 6, 1, 2)
        self.w2start_timeEdit_13 = QtWidgets.QTimeEdit(self.widget_13)
        self.w2start_timeEdit_13.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_13.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_13.setObjectName("w2start_timeEdit_13")
        self.gridLayout_13.addWidget(self.w2start_timeEdit_13, 5, 3, 1, 1)
        self.w3start_13 = QtWidgets.QLabel(self.widget_13)
        self.w3start_13.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_13.setObjectName("w3start_13")
        self.gridLayout_13.addWidget(self.w3start_13, 6, 0, 1, 3)
        self.w1end_13 = QtWidgets.QLabel(self.widget_13)
        self.w1end_13.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_13.setObjectName("w1end_13")
        self.gridLayout_13.addWidget(self.w1end_13, 4, 5, 1, 1)
        self.w3end_13 = QtWidgets.QLabel(self.widget_13)
        self.w3end_13.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_13.setObjectName("w3end_13")
        self.gridLayout_13.addWidget(self.w3end_13, 6, 5, 1, 1)
        self.w2end_timeEdit_13 = QtWidgets.QTimeEdit(self.widget_13)
        self.w2end_timeEdit_13.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_13.setObjectName("w2end_timeEdit_13")
        self.gridLayout_13.addWidget(self.w2end_timeEdit_13, 5, 6, 1, 2)
        self.w3start_timeEdit_13 = QtWidgets.QTimeEdit(self.widget_13)
        self.w3start_timeEdit_13.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_13.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_13.setObjectName("w3start_timeEdit_13")
        self.gridLayout_13.addWidget(self.w3start_timeEdit_13, 6, 3, 1, 1)
        self.w3end_timeEdit_13 = QtWidgets.QTimeEdit(self.widget_13)
        self.w3end_timeEdit_13.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_13.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_13.setObjectName("w3end_timeEdit_13")
        self.gridLayout_13.addWidget(self.w3end_timeEdit_13, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_13)
        self.horizontallayout_14 = QtWidgets.QHBoxLayout()
        self.horizontallayout_14.setObjectName("horizontallayout_14")
        self.appliancename_label_14 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_14.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_14.setFont(font)
        self.appliancename_label_14.setObjectName("appliancename_label_14")
        self.horizontallayout_14.addWidget(self.appliancename_label_14)
        self.appliancename_lineEdit_14 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_14.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_14.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_14.setObjectName("appliancename_lineEdit_14")
        self.horizontallayout_14.addWidget(self.appliancename_lineEdit_14)
        self.Togglebutton_14 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_14.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_14.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_14.setObjectName("Togglebutton_14")
        self.horizontallayout_14.addWidget(self.Togglebutton_14)
        self.verticalLayout.addLayout(self.horizontallayout_14)
        self.widget_14 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_14.setPalette(palette)
        self.widget_14.setTabletTracking(False)
        self.widget_14.setAutoFillBackground(False)
        self.widget_14.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_14.setObjectName("widget_14")
        self.gridLayout_14 = QtWidgets.QGridLayout(self.widget_14)
        self.gridLayout_14.setObjectName("gridLayout_14")
        spacerItem52 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_14.addItem(spacerItem52, 3, 5, 1, 3)
        spacerItem53 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_14.addItem(spacerItem53, 7, 5, 1, 3)
        spacerItem54 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_14.addItem(spacerItem54, 3, 0, 1, 4)
        self.line_28 = QtWidgets.QFrame(self.widget_14)
        self.line_28.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_28.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_28.setObjectName("line_28")
        self.gridLayout_14.addWidget(self.line_28, 0, 4, 3, 1)
        self.power_14 = QtWidgets.QLabel(self.widget_14)
        self.power_14.setMinimumSize(QtCore.QSize(0, 31))
        self.power_14.setObjectName("power_14")
        self.gridLayout_14.addWidget(self.power_14, 0, 5, 1, 1)
        self.number_14 = QtWidgets.QLabel(self.widget_14)
        self.number_14.setMinimumSize(QtCore.QSize(151, 31))
        self.number_14.setObjectName("number_14")
        self.gridLayout_14.addWidget(self.number_14, 0, 0, 1, 3)
        self.power_spinBox_14 = QtWidgets.QSpinBox(self.widget_14)
        self.power_spinBox_14.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_14.setMaximum(999999999)
        self.power_spinBox_14.setObjectName("power_spinBox_14")
        self.gridLayout_14.addWidget(self.power_spinBox_14, 0, 6, 1, 3)
        self.number_spinBox_14 = QtWidgets.QSpinBox(self.widget_14)
        self.number_spinBox_14.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_14.setMinimum(1)
        self.number_spinBox_14.setMaximum(999999999)
        self.number_spinBox_14.setProperty("value", 1)
        self.number_spinBox_14.setObjectName("number_spinBox_14")
        self.gridLayout_14.addWidget(self.number_spinBox_14, 0, 3, 1, 1)
        self.r_var_spinBox_14 = QtWidgets.QSpinBox(self.widget_14)
        self.r_var_spinBox_14.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_14.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_14.setMaximum(100)
        self.r_var_spinBox_14.setObjectName("r_var_spinBox_14")
        self.gridLayout_14.addWidget(self.r_var_spinBox_14, 8, 3, 1, 1)
        self.line_29 = QtWidgets.QFrame(self.widget_14)
        self.line_29.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_29.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_29.setObjectName("line_29")
        self.gridLayout_14.addWidget(self.line_29, 8, 4, 3, 1)
        self.wd_we_comboBox_14 = QtWidgets.QComboBox(self.widget_14)
        self.wd_we_comboBox_14.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_14.setObjectName("wd_we_comboBox_14")
        self.wd_we_comboBox_14.addItem("")
        self.wd_we_comboBox_14.addItem("")
        self.wd_we_comboBox_14.addItem("")
        self.gridLayout_14.addWidget(self.wd_we_comboBox_14, 2, 6, 1, 3)
        self.num_windows_spinBox_14 = QtWidgets.QSpinBox(self.widget_14)
        self.num_windows_spinBox_14.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_14.setMinimum(1)
        self.num_windows_spinBox_14.setMaximum(3)
        self.num_windows_spinBox_14.setObjectName("num_windows_spinBox_14")
        self.gridLayout_14.addWidget(self.num_windows_spinBox_14, 1, 8, 1, 1)
        self.num_windows_14 = QtWidgets.QLabel(self.widget_14)
        self.num_windows_14.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_14.setObjectName("num_windows_14")
        self.gridLayout_14.addWidget(self.num_windows_14, 1, 5, 1, 3)
        self.w1start_14 = QtWidgets.QLabel(self.widget_14)
        self.w1start_14.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_14.setObjectName("w1start_14")
        self.gridLayout_14.addWidget(self.w1start_14, 4, 0, 1, 1)
        self.function_time_spinBox_14 = QtWidgets.QSpinBox(self.widget_14)
        self.function_time_spinBox_14.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_14.setMaximum(1440)
        self.function_time_spinBox_14.setProperty("value", 0)
        self.function_time_spinBox_14.setObjectName("function_time_spinBox_14")
        self.gridLayout_14.addWidget(self.function_time_spinBox_14, 1, 3, 1, 1)
        self.label_48 = QtWidgets.QLabel(self.widget_14)
        self.label_48.setObjectName("label_48")
        self.gridLayout_14.addWidget(self.label_48, 6, 4, 1, 1)
        self.label_49 = QtWidgets.QLabel(self.widget_14)
        self.label_49.setObjectName("label_49")
        self.gridLayout_14.addWidget(self.label_49, 4, 4, 1, 1)
        self.wd_we_14 = QtWidgets.QLabel(self.widget_14)
        self.wd_we_14.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_14.setObjectName("wd_we_14")
        self.gridLayout_14.addWidget(self.wd_we_14, 2, 5, 1, 1)
        self.function_time_14 = QtWidgets.QLabel(self.widget_14)
        self.function_time_14.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_14.setObjectName("function_time_14")
        self.gridLayout_14.addWidget(self.function_time_14, 1, 0, 1, 3)
        self.label_50 = QtWidgets.QLabel(self.widget_14)
        self.label_50.setObjectName("label_50")
        self.gridLayout_14.addWidget(self.label_50, 5, 4, 1, 1)
        self.r_var_14 = QtWidgets.QLabel(self.widget_14)
        self.r_var_14.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_14.setObjectName("r_var_14")
        self.gridLayout_14.addWidget(self.r_var_14, 8, 0, 1, 3)
        self.occationaluse_14 = QtWidgets.QLabel(self.widget_14)
        self.occationaluse_14.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_14.setObjectName("occationaluse_14")
        self.gridLayout_14.addWidget(self.occationaluse_14, 2, 0, 1, 1)
        spacerItem55 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_14.addItem(spacerItem55, 7, 0, 1, 4)
        self.occationaluse_spinBox_14 = QtWidgets.QSpinBox(self.widget_14)
        self.occationaluse_spinBox_14.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_14.setMinimum(1)
        self.occationaluse_spinBox_14.setMaximum(100)
        self.occationaluse_spinBox_14.setProperty("value", 100)
        self.occationaluse_spinBox_14.setObjectName("occationaluse_spinBox_14")
        self.gridLayout_14.addWidget(self.occationaluse_spinBox_14, 2, 3, 1, 1)
        self.func_cycle_spinBox_14 = QtWidgets.QSpinBox(self.widget_14)
        self.func_cycle_spinBox_14.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_14.setMaximum(1440)
        self.func_cycle_spinBox_14.setProperty("value", 1)
        self.func_cycle_spinBox_14.setObjectName("func_cycle_spinBox_14")
        self.gridLayout_14.addWidget(self.func_cycle_spinBox_14, 9, 7, 1, 2)
        self.fixed_14 = QtWidgets.QLabel(self.widget_14)
        self.fixed_14.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_14.setObjectName("fixed_14")
        self.gridLayout_14.addWidget(self.fixed_14, 10, 0, 1, 1)
        self.tfrv_14 = QtWidgets.QLabel(self.widget_14)
        self.tfrv_14.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_14.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_14.setObjectName("tfrv_14")
        self.gridLayout_14.addWidget(self.tfrv_14, 8, 5, 1, 2)
        self.flat_14 = QtWidgets.QLabel(self.widget_14)
        self.flat_14.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_14.setObjectName("flat_14")
        self.gridLayout_14.addWidget(self.flat_14, 10, 5, 1, 1)
        self.tfrv_spinBox_14 = QtWidgets.QSpinBox(self.widget_14)
        self.tfrv_spinBox_14.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_14.setMaximum(100)
        self.tfrv_spinBox_14.setObjectName("tfrv_spinBox_14")
        self.gridLayout_14.addWidget(self.tfrv_spinBox_14, 8, 8, 1, 1)
        self.flat_comboBox_14 = QtWidgets.QComboBox(self.widget_14)
        self.flat_comboBox_14.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_14.setObjectName("flat_comboBox_14")
        self.flat_comboBox_14.addItem("")
        self.flat_comboBox_14.addItem("")
        self.gridLayout_14.addWidget(self.flat_comboBox_14, 10, 7, 1, 2)
        self.thermal_v_spinBox_14 = QtWidgets.QSpinBox(self.widget_14)
        self.thermal_v_spinBox_14.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_14.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_14.setMaximum(100)
        self.thermal_v_spinBox_14.setObjectName("thermal_v_spinBox_14")
        self.gridLayout_14.addWidget(self.thermal_v_spinBox_14, 9, 3, 1, 1)
        self.fixe_comboBox_14 = QtWidgets.QComboBox(self.widget_14)
        self.fixe_comboBox_14.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_14.setObjectName("fixe_comboBox_14")
        self.fixe_comboBox_14.addItem("")
        self.fixe_comboBox_14.addItem("")
        self.gridLayout_14.addWidget(self.fixe_comboBox_14, 10, 3, 1, 1)
        self.func_cycle_14 = QtWidgets.QLabel(self.widget_14)
        self.func_cycle_14.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_14.setObjectName("func_cycle_14")
        self.gridLayout_14.addWidget(self.func_cycle_14, 9, 5, 1, 1)
        self.thermal_v_14 = QtWidgets.QLabel(self.widget_14)
        self.thermal_v_14.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_14.setObjectName("thermal_v_14")
        self.gridLayout_14.addWidget(self.thermal_v_14, 9, 0, 1, 3)
        self.w1start_timeEdit_14 = QtWidgets.QTimeEdit(self.widget_14)
        self.w1start_timeEdit_14.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_14.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_14.setObjectName("w1start_timeEdit_14")
        self.gridLayout_14.addWidget(self.w1start_timeEdit_14, 4, 3, 1, 1)
        self.w2end_14 = QtWidgets.QLabel(self.widget_14)
        self.w2end_14.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_14.setObjectName("w2end_14")
        self.gridLayout_14.addWidget(self.w2end_14, 5, 5, 1, 1)
        self.w2start_14 = QtWidgets.QLabel(self.widget_14)
        self.w2start_14.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_14.setObjectName("w2start_14")
        self.gridLayout_14.addWidget(self.w2start_14, 5, 0, 1, 2)
        self.w1end_timeEdit_14 = QtWidgets.QTimeEdit(self.widget_14)
        self.w1end_timeEdit_14.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_14.setObjectName("w1end_timeEdit_14")
        self.gridLayout_14.addWidget(self.w1end_timeEdit_14, 4, 6, 1, 2)
        self.w2start_timeEdit_14 = QtWidgets.QTimeEdit(self.widget_14)
        self.w2start_timeEdit_14.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_14.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_14.setObjectName("w2start_timeEdit_14")
        self.gridLayout_14.addWidget(self.w2start_timeEdit_14, 5, 3, 1, 1)
        self.w3start_14 = QtWidgets.QLabel(self.widget_14)
        self.w3start_14.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_14.setObjectName("w3start_14")
        self.gridLayout_14.addWidget(self.w3start_14, 6, 0, 1, 3)
        self.w1end_14 = QtWidgets.QLabel(self.widget_14)
        self.w1end_14.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_14.setObjectName("w1end_14")
        self.gridLayout_14.addWidget(self.w1end_14, 4, 5, 1, 1)
        self.w3end_14 = QtWidgets.QLabel(self.widget_14)
        self.w3end_14.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_14.setObjectName("w3end_14")
        self.gridLayout_14.addWidget(self.w3end_14, 6, 5, 1, 1)
        self.w2end_timeEdit_14 = QtWidgets.QTimeEdit(self.widget_14)
        self.w2end_timeEdit_14.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_14.setObjectName("w2end_timeEdit_14")
        self.gridLayout_14.addWidget(self.w2end_timeEdit_14, 5, 6, 1, 2)
        self.w3start_timeEdit_14 = QtWidgets.QTimeEdit(self.widget_14)
        self.w3start_timeEdit_14.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_14.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_14.setObjectName("w3start_timeEdit_14")
        self.gridLayout_14.addWidget(self.w3start_timeEdit_14, 6, 3, 1, 1)
        self.w3end_timeEdit_14 = QtWidgets.QTimeEdit(self.widget_14)
        self.w3end_timeEdit_14.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_14.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_14.setObjectName("w3end_timeEdit_14")
        self.gridLayout_14.addWidget(self.w3end_timeEdit_14, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_14)
        self.horizontallayout_15 = QtWidgets.QHBoxLayout()
        self.horizontallayout_15.setObjectName("horizontallayout_15")
        self.appliancename_label_15 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_15.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_15.setFont(font)
        self.appliancename_label_15.setObjectName("appliancename_label_15")
        self.horizontallayout_15.addWidget(self.appliancename_label_15)
        self.appliancename_lineEdit_15 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_15.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_15.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_15.setObjectName("appliancename_lineEdit_15")
        self.horizontallayout_15.addWidget(self.appliancename_lineEdit_15)
        self.Togglebutton_15 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_15.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_15.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_15.setObjectName("Togglebutton_15")
        self.horizontallayout_15.addWidget(self.Togglebutton_15)
        self.verticalLayout.addLayout(self.horizontallayout_15)
        self.widget_15 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_15.setPalette(palette)
        self.widget_15.setTabletTracking(False)
        self.widget_15.setAutoFillBackground(False)
        self.widget_15.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_15.setObjectName("widget_15")
        self.gridLayout_15 = QtWidgets.QGridLayout(self.widget_15)
        self.gridLayout_15.setObjectName("gridLayout_15")
        spacerItem56 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_15.addItem(spacerItem56, 3, 5, 1, 3)
        spacerItem57 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_15.addItem(spacerItem57, 7, 5, 1, 3)
        spacerItem58 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_15.addItem(spacerItem58, 3, 0, 1, 4)
        self.line_30 = QtWidgets.QFrame(self.widget_15)
        self.line_30.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_30.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_30.setObjectName("line_30")
        self.gridLayout_15.addWidget(self.line_30, 0, 4, 3, 1)
        self.power_15 = QtWidgets.QLabel(self.widget_15)
        self.power_15.setMinimumSize(QtCore.QSize(0, 31))
        self.power_15.setObjectName("power_15")
        self.gridLayout_15.addWidget(self.power_15, 0, 5, 1, 1)
        self.number_15 = QtWidgets.QLabel(self.widget_15)
        self.number_15.setMinimumSize(QtCore.QSize(151, 31))
        self.number_15.setObjectName("number_15")
        self.gridLayout_15.addWidget(self.number_15, 0, 0, 1, 3)
        self.power_spinBox_15 = QtWidgets.QSpinBox(self.widget_15)
        self.power_spinBox_15.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_15.setMaximum(999999999)
        self.power_spinBox_15.setObjectName("power_spinBox_15")
        self.gridLayout_15.addWidget(self.power_spinBox_15, 0, 6, 1, 3)
        self.number_spinBox_15 = QtWidgets.QSpinBox(self.widget_15)
        self.number_spinBox_15.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_15.setMinimum(1)
        self.number_spinBox_15.setMaximum(999999999)
        self.number_spinBox_15.setProperty("value", 1)
        self.number_spinBox_15.setObjectName("number_spinBox_15")
        self.gridLayout_15.addWidget(self.number_spinBox_15, 0, 3, 1, 1)
        self.r_var_spinBox_15 = QtWidgets.QSpinBox(self.widget_15)
        self.r_var_spinBox_15.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_15.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_15.setMaximum(100)
        self.r_var_spinBox_15.setObjectName("r_var_spinBox_15")
        self.gridLayout_15.addWidget(self.r_var_spinBox_15, 8, 3, 1, 1)
        self.line_31 = QtWidgets.QFrame(self.widget_15)
        self.line_31.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_31.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_31.setObjectName("line_31")
        self.gridLayout_15.addWidget(self.line_31, 8, 4, 3, 1)
        self.wd_we_comboBox_15 = QtWidgets.QComboBox(self.widget_15)
        self.wd_we_comboBox_15.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_15.setObjectName("wd_we_comboBox_15")
        self.wd_we_comboBox_15.addItem("")
        self.wd_we_comboBox_15.addItem("")
        self.wd_we_comboBox_15.addItem("")
        self.gridLayout_15.addWidget(self.wd_we_comboBox_15, 2, 6, 1, 3)
        self.num_windows_spinBox_15 = QtWidgets.QSpinBox(self.widget_15)
        self.num_windows_spinBox_15.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_15.setMinimum(1)
        self.num_windows_spinBox_15.setMaximum(3)
        self.num_windows_spinBox_15.setObjectName("num_windows_spinBox_15")
        self.gridLayout_15.addWidget(self.num_windows_spinBox_15, 1, 8, 1, 1)
        self.num_windows_15 = QtWidgets.QLabel(self.widget_15)
        self.num_windows_15.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_15.setObjectName("num_windows_15")
        self.gridLayout_15.addWidget(self.num_windows_15, 1, 5, 1, 3)
        self.w1start_15 = QtWidgets.QLabel(self.widget_15)
        self.w1start_15.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_15.setObjectName("w1start_15")
        self.gridLayout_15.addWidget(self.w1start_15, 4, 0, 1, 1)
        self.function_time_spinBox_15 = QtWidgets.QSpinBox(self.widget_15)
        self.function_time_spinBox_15.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_15.setMaximum(1440)
        self.function_time_spinBox_15.setProperty("value", 0)
        self.function_time_spinBox_15.setObjectName("function_time_spinBox_15")
        self.gridLayout_15.addWidget(self.function_time_spinBox_15, 1, 3, 1, 1)
        self.label_51 = QtWidgets.QLabel(self.widget_15)
        self.label_51.setObjectName("label_51")
        self.gridLayout_15.addWidget(self.label_51, 6, 4, 1, 1)
        self.label_52 = QtWidgets.QLabel(self.widget_15)
        self.label_52.setObjectName("label_52")
        self.gridLayout_15.addWidget(self.label_52, 4, 4, 1, 1)
        self.wd_we_15 = QtWidgets.QLabel(self.widget_15)
        self.wd_we_15.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_15.setObjectName("wd_we_15")
        self.gridLayout_15.addWidget(self.wd_we_15, 2, 5, 1, 1)
        self.function_time_15 = QtWidgets.QLabel(self.widget_15)
        self.function_time_15.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_15.setObjectName("function_time_15")
        self.gridLayout_15.addWidget(self.function_time_15, 1, 0, 1, 3)
        self.label_53 = QtWidgets.QLabel(self.widget_15)
        self.label_53.setObjectName("label_53")
        self.gridLayout_15.addWidget(self.label_53, 5, 4, 1, 1)
        self.r_var_15 = QtWidgets.QLabel(self.widget_15)
        self.r_var_15.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_15.setObjectName("r_var_15")
        self.gridLayout_15.addWidget(self.r_var_15, 8, 0, 1, 3)
        self.occationaluse_15 = QtWidgets.QLabel(self.widget_15)
        self.occationaluse_15.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_15.setObjectName("occationaluse_15")
        self.gridLayout_15.addWidget(self.occationaluse_15, 2, 0, 1, 1)
        spacerItem59 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_15.addItem(spacerItem59, 7, 0, 1, 4)
        self.occationaluse_spinBox_15 = QtWidgets.QSpinBox(self.widget_15)
        self.occationaluse_spinBox_15.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_15.setMinimum(1)
        self.occationaluse_spinBox_15.setMaximum(100)
        self.occationaluse_spinBox_15.setProperty("value", 100)
        self.occationaluse_spinBox_15.setObjectName("occationaluse_spinBox_15")
        self.gridLayout_15.addWidget(self.occationaluse_spinBox_15, 2, 3, 1, 1)
        self.func_cycle_spinBox_15 = QtWidgets.QSpinBox(self.widget_15)
        self.func_cycle_spinBox_15.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_15.setMaximum(1440)
        self.func_cycle_spinBox_15.setProperty("value", 1)
        self.func_cycle_spinBox_15.setObjectName("func_cycle_spinBox_15")
        self.gridLayout_15.addWidget(self.func_cycle_spinBox_15, 9, 7, 1, 2)
        self.fixed_15 = QtWidgets.QLabel(self.widget_15)
        self.fixed_15.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_15.setObjectName("fixed_15")
        self.gridLayout_15.addWidget(self.fixed_15, 10, 0, 1, 1)
        self.tfrv_15 = QtWidgets.QLabel(self.widget_15)
        self.tfrv_15.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_15.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_15.setObjectName("tfrv_15")
        self.gridLayout_15.addWidget(self.tfrv_15, 8, 5, 1, 2)
        self.flat_15 = QtWidgets.QLabel(self.widget_15)
        self.flat_15.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_15.setObjectName("flat_15")
        self.gridLayout_15.addWidget(self.flat_15, 10, 5, 1, 1)
        self.tfrv_spinBox_15 = QtWidgets.QSpinBox(self.widget_15)
        self.tfrv_spinBox_15.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_15.setMaximum(100)
        self.tfrv_spinBox_15.setObjectName("tfrv_spinBox_15")
        self.gridLayout_15.addWidget(self.tfrv_spinBox_15, 8, 8, 1, 1)
        self.flat_comboBox_15 = QtWidgets.QComboBox(self.widget_15)
        self.flat_comboBox_15.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_15.setObjectName("flat_comboBox_15")
        self.flat_comboBox_15.addItem("")
        self.flat_comboBox_15.addItem("")
        self.gridLayout_15.addWidget(self.flat_comboBox_15, 10, 7, 1, 2)
        self.thermal_v_spinBox_15 = QtWidgets.QSpinBox(self.widget_15)
        self.thermal_v_spinBox_15.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_15.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_15.setMaximum(100)
        self.thermal_v_spinBox_15.setObjectName("thermal_v_spinBox_15")
        self.gridLayout_15.addWidget(self.thermal_v_spinBox_15, 9, 3, 1, 1)
        self.fixe_comboBox_15 = QtWidgets.QComboBox(self.widget_15)
        self.fixe_comboBox_15.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_15.setObjectName("fixe_comboBox_15")
        self.fixe_comboBox_15.addItem("")
        self.fixe_comboBox_15.addItem("")
        self.gridLayout_15.addWidget(self.fixe_comboBox_15, 10, 3, 1, 1)
        self.func_cycle_15 = QtWidgets.QLabel(self.widget_15)
        self.func_cycle_15.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_15.setObjectName("func_cycle_15")
        self.gridLayout_15.addWidget(self.func_cycle_15, 9, 5, 1, 1)
        self.thermal_v_15 = QtWidgets.QLabel(self.widget_15)
        self.thermal_v_15.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_15.setObjectName("thermal_v_15")
        self.gridLayout_15.addWidget(self.thermal_v_15, 9, 0, 1, 3)
        self.w1start_timeEdit_15 = QtWidgets.QTimeEdit(self.widget_15)
        self.w1start_timeEdit_15.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_15.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_15.setObjectName("w1start_timeEdit_15")
        self.gridLayout_15.addWidget(self.w1start_timeEdit_15, 4, 3, 1, 1)
        self.w2end_15 = QtWidgets.QLabel(self.widget_15)
        self.w2end_15.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_15.setObjectName("w2end_15")
        self.gridLayout_15.addWidget(self.w2end_15, 5, 5, 1, 1)
        self.w2start_15 = QtWidgets.QLabel(self.widget_15)
        self.w2start_15.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_15.setObjectName("w2start_15")
        self.gridLayout_15.addWidget(self.w2start_15, 5, 0, 1, 2)
        self.w1end_timeEdit_15 = QtWidgets.QTimeEdit(self.widget_15)
        self.w1end_timeEdit_15.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_15.setObjectName("w1end_timeEdit_15")
        self.gridLayout_15.addWidget(self.w1end_timeEdit_15, 4, 6, 1, 2)
        self.w2start_timeEdit_15 = QtWidgets.QTimeEdit(self.widget_15)
        self.w2start_timeEdit_15.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_15.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_15.setObjectName("w2start_timeEdit_15")
        self.gridLayout_15.addWidget(self.w2start_timeEdit_15, 5, 3, 1, 1)
        self.w3start_15 = QtWidgets.QLabel(self.widget_15)
        self.w3start_15.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_15.setObjectName("w3start_15")
        self.gridLayout_15.addWidget(self.w3start_15, 6, 0, 1, 3)
        self.w1end_15 = QtWidgets.QLabel(self.widget_15)
        self.w1end_15.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_15.setObjectName("w1end_15")
        self.gridLayout_15.addWidget(self.w1end_15, 4, 5, 1, 1)
        self.w3end_15 = QtWidgets.QLabel(self.widget_15)
        self.w3end_15.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_15.setObjectName("w3end_15")
        self.gridLayout_15.addWidget(self.w3end_15, 6, 5, 1, 1)
        self.w2end_timeEdit_15 = QtWidgets.QTimeEdit(self.widget_15)
        self.w2end_timeEdit_15.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_15.setObjectName("w2end_timeEdit_15")
        self.gridLayout_15.addWidget(self.w2end_timeEdit_15, 5, 6, 1, 2)
        self.w3start_timeEdit_15 = QtWidgets.QTimeEdit(self.widget_15)
        self.w3start_timeEdit_15.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_15.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_15.setObjectName("w3start_timeEdit_15")
        self.gridLayout_15.addWidget(self.w3start_timeEdit_15, 6, 3, 1, 1)
        self.w3end_timeEdit_15 = QtWidgets.QTimeEdit(self.widget_15)
        self.w3end_timeEdit_15.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_15.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_15.setObjectName("w3end_timeEdit_15")
        self.gridLayout_15.addWidget(self.w3end_timeEdit_15, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_15)
        self.horizontallayout_16 = QtWidgets.QHBoxLayout()
        self.horizontallayout_16.setObjectName("horizontallayout_16")
        self.appliancename_label_16 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_16.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_16.setFont(font)
        self.appliancename_label_16.setObjectName("appliancename_label_16")
        self.horizontallayout_16.addWidget(self.appliancename_label_16)
        self.appliancename_lineEdit_16 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_16.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_16.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_16.setObjectName("appliancename_lineEdit_16")
        self.horizontallayout_16.addWidget(self.appliancename_lineEdit_16)
        self.Togglebutton_16 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_16.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_16.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_16.setObjectName("Togglebutton_16")
        self.horizontallayout_16.addWidget(self.Togglebutton_16)
        self.verticalLayout.addLayout(self.horizontallayout_16)
        self.widget_16 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_16.setPalette(palette)
        self.widget_16.setTabletTracking(False)
        self.widget_16.setAutoFillBackground(False)
        self.widget_16.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_16.setObjectName("widget_16")
        self.gridLayout_16 = QtWidgets.QGridLayout(self.widget_16)
        self.gridLayout_16.setObjectName("gridLayout_16")
        spacerItem60 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem60, 3, 5, 1, 3)
        spacerItem61 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem61, 7, 5, 1, 3)
        spacerItem62 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem62, 3, 0, 1, 4)
        self.line_32 = QtWidgets.QFrame(self.widget_16)
        self.line_32.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_32.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_32.setObjectName("line_32")
        self.gridLayout_16.addWidget(self.line_32, 0, 4, 3, 1)
        self.power_16 = QtWidgets.QLabel(self.widget_16)
        self.power_16.setMinimumSize(QtCore.QSize(0, 31))
        self.power_16.setObjectName("power_16")
        self.gridLayout_16.addWidget(self.power_16, 0, 5, 1, 1)
        self.number_16 = QtWidgets.QLabel(self.widget_16)
        self.number_16.setMinimumSize(QtCore.QSize(151, 31))
        self.number_16.setObjectName("number_16")
        self.gridLayout_16.addWidget(self.number_16, 0, 0, 1, 3)
        self.power_spinBox_16 = QtWidgets.QSpinBox(self.widget_16)
        self.power_spinBox_16.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_16.setMaximum(999999999)
        self.power_spinBox_16.setObjectName("power_spinBox_16")
        self.gridLayout_16.addWidget(self.power_spinBox_16, 0, 6, 1, 3)
        self.number_spinBox_16 = QtWidgets.QSpinBox(self.widget_16)
        self.number_spinBox_16.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_16.setMinimum(1)
        self.number_spinBox_16.setMaximum(999999999)
        self.number_spinBox_16.setProperty("value", 1)
        self.number_spinBox_16.setObjectName("number_spinBox_16")
        self.gridLayout_16.addWidget(self.number_spinBox_16, 0, 3, 1, 1)
        self.r_var_spinBox_16 = QtWidgets.QSpinBox(self.widget_16)
        self.r_var_spinBox_16.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_16.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_16.setMaximum(100)
        self.r_var_spinBox_16.setObjectName("r_var_spinBox_16")
        self.gridLayout_16.addWidget(self.r_var_spinBox_16, 8, 3, 1, 1)
        self.line_33 = QtWidgets.QFrame(self.widget_16)
        self.line_33.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_33.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_33.setObjectName("line_33")
        self.gridLayout_16.addWidget(self.line_33, 8, 4, 3, 1)
        self.wd_we_comboBox_16 = QtWidgets.QComboBox(self.widget_16)
        self.wd_we_comboBox_16.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_16.setObjectName("wd_we_comboBox_16")
        self.wd_we_comboBox_16.addItem("")
        self.wd_we_comboBox_16.addItem("")
        self.wd_we_comboBox_16.addItem("")
        self.gridLayout_16.addWidget(self.wd_we_comboBox_16, 2, 6, 1, 3)
        self.num_windows_spinBox_16 = QtWidgets.QSpinBox(self.widget_16)
        self.num_windows_spinBox_16.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_16.setMinimum(1)
        self.num_windows_spinBox_16.setMaximum(3)
        self.num_windows_spinBox_16.setObjectName("num_windows_spinBox_16")
        self.gridLayout_16.addWidget(self.num_windows_spinBox_16, 1, 8, 1, 1)
        self.num_windows_16 = QtWidgets.QLabel(self.widget_16)
        self.num_windows_16.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_16.setObjectName("num_windows_16")
        self.gridLayout_16.addWidget(self.num_windows_16, 1, 5, 1, 3)
        self.w1start_16 = QtWidgets.QLabel(self.widget_16)
        self.w1start_16.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_16.setObjectName("w1start_16")
        self.gridLayout_16.addWidget(self.w1start_16, 4, 0, 1, 1)
        self.function_time_spinBox_16 = QtWidgets.QSpinBox(self.widget_16)
        self.function_time_spinBox_16.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_16.setMaximum(1440)
        self.function_time_spinBox_16.setProperty("value", 0)
        self.function_time_spinBox_16.setObjectName("function_time_spinBox_16")
        self.gridLayout_16.addWidget(self.function_time_spinBox_16, 1, 3, 1, 1)
        self.label_54 = QtWidgets.QLabel(self.widget_16)
        self.label_54.setObjectName("label_54")
        self.gridLayout_16.addWidget(self.label_54, 6, 4, 1, 1)
        self.label_55 = QtWidgets.QLabel(self.widget_16)
        self.label_55.setObjectName("label_55")
        self.gridLayout_16.addWidget(self.label_55, 4, 4, 1, 1)
        self.wd_we_16 = QtWidgets.QLabel(self.widget_16)
        self.wd_we_16.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_16.setObjectName("wd_we_16")
        self.gridLayout_16.addWidget(self.wd_we_16, 2, 5, 1, 1)
        self.function_time_16 = QtWidgets.QLabel(self.widget_16)
        self.function_time_16.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_16.setObjectName("function_time_16")
        self.gridLayout_16.addWidget(self.function_time_16, 1, 0, 1, 3)
        self.label_56 = QtWidgets.QLabel(self.widget_16)
        self.label_56.setObjectName("label_56")
        self.gridLayout_16.addWidget(self.label_56, 5, 4, 1, 1)
        self.r_var_16 = QtWidgets.QLabel(self.widget_16)
        self.r_var_16.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_16.setObjectName("r_var_16")
        self.gridLayout_16.addWidget(self.r_var_16, 8, 0, 1, 3)
        self.occationaluse_16 = QtWidgets.QLabel(self.widget_16)
        self.occationaluse_16.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_16.setObjectName("occationaluse_16")
        self.gridLayout_16.addWidget(self.occationaluse_16, 2, 0, 1, 1)
        spacerItem63 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_16.addItem(spacerItem63, 7, 0, 1, 4)
        self.occationaluse_spinBox_16 = QtWidgets.QSpinBox(self.widget_16)
        self.occationaluse_spinBox_16.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_16.setMinimum(1)
        self.occationaluse_spinBox_16.setMaximum(100)
        self.occationaluse_spinBox_16.setProperty("value", 100)
        self.occationaluse_spinBox_16.setObjectName("occationaluse_spinBox_16")
        self.gridLayout_16.addWidget(self.occationaluse_spinBox_16, 2, 3, 1, 1)
        self.func_cycle_spinBox_16 = QtWidgets.QSpinBox(self.widget_16)
        self.func_cycle_spinBox_16.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_16.setMaximum(1440)
        self.func_cycle_spinBox_16.setProperty("value", 1)
        self.func_cycle_spinBox_16.setObjectName("func_cycle_spinBox_16")
        self.gridLayout_16.addWidget(self.func_cycle_spinBox_16, 9, 7, 1, 2)
        self.fixed_16 = QtWidgets.QLabel(self.widget_16)
        self.fixed_16.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_16.setObjectName("fixed_16")
        self.gridLayout_16.addWidget(self.fixed_16, 10, 0, 1, 1)
        self.tfrv_16 = QtWidgets.QLabel(self.widget_16)
        self.tfrv_16.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_16.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_16.setObjectName("tfrv_16")
        self.gridLayout_16.addWidget(self.tfrv_16, 8, 5, 1, 2)
        self.flat_16 = QtWidgets.QLabel(self.widget_16)
        self.flat_16.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_16.setObjectName("flat_16")
        self.gridLayout_16.addWidget(self.flat_16, 10, 5, 1, 1)
        self.tfrv_spinBox_16 = QtWidgets.QSpinBox(self.widget_16)
        self.tfrv_spinBox_16.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_16.setMaximum(100)
        self.tfrv_spinBox_16.setObjectName("tfrv_spinBox_16")
        self.gridLayout_16.addWidget(self.tfrv_spinBox_16, 8, 8, 1, 1)
        self.flat_comboBox_16 = QtWidgets.QComboBox(self.widget_16)
        self.flat_comboBox_16.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_16.setObjectName("flat_comboBox_16")
        self.flat_comboBox_16.addItem("")
        self.flat_comboBox_16.addItem("")
        self.gridLayout_16.addWidget(self.flat_comboBox_16, 10, 7, 1, 2)
        self.thermal_v_spinBox_16 = QtWidgets.QSpinBox(self.widget_16)
        self.thermal_v_spinBox_16.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_16.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_16.setMaximum(100)
        self.thermal_v_spinBox_16.setObjectName("thermal_v_spinBox_16")
        self.gridLayout_16.addWidget(self.thermal_v_spinBox_16, 9, 3, 1, 1)
        self.fixe_comboBox_16 = QtWidgets.QComboBox(self.widget_16)
        self.fixe_comboBox_16.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_16.setObjectName("fixe_comboBox_16")
        self.fixe_comboBox_16.addItem("")
        self.fixe_comboBox_16.addItem("")
        self.gridLayout_16.addWidget(self.fixe_comboBox_16, 10, 3, 1, 1)
        self.func_cycle_16 = QtWidgets.QLabel(self.widget_16)
        self.func_cycle_16.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_16.setObjectName("func_cycle_16")
        self.gridLayout_16.addWidget(self.func_cycle_16, 9, 5, 1, 1)
        self.thermal_v_16 = QtWidgets.QLabel(self.widget_16)
        self.thermal_v_16.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_16.setObjectName("thermal_v_16")
        self.gridLayout_16.addWidget(self.thermal_v_16, 9, 0, 1, 3)
        self.w1start_timeEdit_16 = QtWidgets.QTimeEdit(self.widget_16)
        self.w1start_timeEdit_16.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_16.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_16.setObjectName("w1start_timeEdit_16")
        self.gridLayout_16.addWidget(self.w1start_timeEdit_16, 4, 3, 1, 1)
        self.w2end_16 = QtWidgets.QLabel(self.widget_16)
        self.w2end_16.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_16.setObjectName("w2end_16")
        self.gridLayout_16.addWidget(self.w2end_16, 5, 5, 1, 1)
        self.w2start_16 = QtWidgets.QLabel(self.widget_16)
        self.w2start_16.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_16.setObjectName("w2start_16")
        self.gridLayout_16.addWidget(self.w2start_16, 5, 0, 1, 2)
        self.w1end_timeEdit_16 = QtWidgets.QTimeEdit(self.widget_16)
        self.w1end_timeEdit_16.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_16.setObjectName("w1end_timeEdit_16")
        self.gridLayout_16.addWidget(self.w1end_timeEdit_16, 4, 6, 1, 2)
        self.w2start_timeEdit_16 = QtWidgets.QTimeEdit(self.widget_16)
        self.w2start_timeEdit_16.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_16.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_16.setObjectName("w2start_timeEdit_16")
        self.gridLayout_16.addWidget(self.w2start_timeEdit_16, 5, 3, 1, 1)
        self.w3start_16 = QtWidgets.QLabel(self.widget_16)
        self.w3start_16.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_16.setObjectName("w3start_16")
        self.gridLayout_16.addWidget(self.w3start_16, 6, 0, 1, 3)
        self.w1end_16 = QtWidgets.QLabel(self.widget_16)
        self.w1end_16.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_16.setObjectName("w1end_16")
        self.gridLayout_16.addWidget(self.w1end_16, 4, 5, 1, 1)
        self.w3end_16 = QtWidgets.QLabel(self.widget_16)
        self.w3end_16.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_16.setObjectName("w3end_16")
        self.gridLayout_16.addWidget(self.w3end_16, 6, 5, 1, 1)
        self.w2end_timeEdit_16 = QtWidgets.QTimeEdit(self.widget_16)
        self.w2end_timeEdit_16.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_16.setObjectName("w2end_timeEdit_16")
        self.gridLayout_16.addWidget(self.w2end_timeEdit_16, 5, 6, 1, 2)
        self.w3start_timeEdit_16 = QtWidgets.QTimeEdit(self.widget_16)
        self.w3start_timeEdit_16.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_16.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_16.setObjectName("w3start_timeEdit_16")
        self.gridLayout_16.addWidget(self.w3start_timeEdit_16, 6, 3, 1, 1)
        self.w3end_timeEdit_16 = QtWidgets.QTimeEdit(self.widget_16)
        self.w3end_timeEdit_16.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_16.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_16.setObjectName("w3end_timeEdit_16")
        self.gridLayout_16.addWidget(self.w3end_timeEdit_16, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_16)
        self.horizontallayout_17 = QtWidgets.QHBoxLayout()
        self.horizontallayout_17.setObjectName("horizontallayout_17")
        self.appliancename_label_17 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_17.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_17.setFont(font)
        self.appliancename_label_17.setObjectName("appliancename_label_17")
        self.horizontallayout_17.addWidget(self.appliancename_label_17)
        self.appliancename_lineEdit_17 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_17.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_17.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_17.setObjectName("appliancename_lineEdit_17")
        self.horizontallayout_17.addWidget(self.appliancename_lineEdit_17)
        self.Togglebutton_17 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_17.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_17.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_17.setObjectName("Togglebutton_17")
        self.horizontallayout_17.addWidget(self.Togglebutton_17)
        self.verticalLayout.addLayout(self.horizontallayout_17)
        self.widget_17 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_17.setPalette(palette)
        self.widget_17.setTabletTracking(False)
        self.widget_17.setAutoFillBackground(False)
        self.widget_17.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_17.setObjectName("widget_17")
        self.gridLayout_17 = QtWidgets.QGridLayout(self.widget_17)
        self.gridLayout_17.setObjectName("gridLayout_17")
        spacerItem64 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_17.addItem(spacerItem64, 3, 5, 1, 3)
        spacerItem65 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_17.addItem(spacerItem65, 7, 5, 1, 3)
        spacerItem66 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_17.addItem(spacerItem66, 3, 0, 1, 4)
        self.line_34 = QtWidgets.QFrame(self.widget_17)
        self.line_34.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_34.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_34.setObjectName("line_34")
        self.gridLayout_17.addWidget(self.line_34, 0, 4, 3, 1)
        self.power_17 = QtWidgets.QLabel(self.widget_17)
        self.power_17.setMinimumSize(QtCore.QSize(0, 31))
        self.power_17.setObjectName("power_17")
        self.gridLayout_17.addWidget(self.power_17, 0, 5, 1, 1)
        self.number_17 = QtWidgets.QLabel(self.widget_17)
        self.number_17.setMinimumSize(QtCore.QSize(151, 31))
        self.number_17.setObjectName("number_17")
        self.gridLayout_17.addWidget(self.number_17, 0, 0, 1, 3)
        self.power_spinBox_17 = QtWidgets.QSpinBox(self.widget_17)
        self.power_spinBox_17.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_17.setMaximum(999999999)
        self.power_spinBox_17.setObjectName("power_spinBox_17")
        self.gridLayout_17.addWidget(self.power_spinBox_17, 0, 6, 1, 3)
        self.number_spinBox_17 = QtWidgets.QSpinBox(self.widget_17)
        self.number_spinBox_17.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_17.setMinimum(1)
        self.number_spinBox_17.setMaximum(999999999)
        self.number_spinBox_17.setProperty("value", 1)
        self.number_spinBox_17.setObjectName("number_spinBox_17")
        self.gridLayout_17.addWidget(self.number_spinBox_17, 0, 3, 1, 1)
        self.r_var_spinBox_17 = QtWidgets.QSpinBox(self.widget_17)
        self.r_var_spinBox_17.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_17.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_17.setMaximum(100)
        self.r_var_spinBox_17.setObjectName("r_var_spinBox_17")
        self.gridLayout_17.addWidget(self.r_var_spinBox_17, 8, 3, 1, 1)
        self.line_35 = QtWidgets.QFrame(self.widget_17)
        self.line_35.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_35.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_35.setObjectName("line_35")
        self.gridLayout_17.addWidget(self.line_35, 8, 4, 3, 1)
        self.wd_we_comboBox_17 = QtWidgets.QComboBox(self.widget_17)
        self.wd_we_comboBox_17.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_17.setObjectName("wd_we_comboBox_17")
        self.wd_we_comboBox_17.addItem("")
        self.wd_we_comboBox_17.addItem("")
        self.wd_we_comboBox_17.addItem("")
        self.gridLayout_17.addWidget(self.wd_we_comboBox_17, 2, 6, 1, 3)
        self.num_windows_spinBox_17 = QtWidgets.QSpinBox(self.widget_17)
        self.num_windows_spinBox_17.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_17.setMinimum(1)
        self.num_windows_spinBox_17.setMaximum(3)
        self.num_windows_spinBox_17.setObjectName("num_windows_spinBox_17")
        self.gridLayout_17.addWidget(self.num_windows_spinBox_17, 1, 8, 1, 1)
        self.num_windows_17 = QtWidgets.QLabel(self.widget_17)
        self.num_windows_17.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_17.setObjectName("num_windows_17")
        self.gridLayout_17.addWidget(self.num_windows_17, 1, 5, 1, 3)
        self.w1start_17 = QtWidgets.QLabel(self.widget_17)
        self.w1start_17.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_17.setObjectName("w1start_17")
        self.gridLayout_17.addWidget(self.w1start_17, 4, 0, 1, 1)
        self.function_time_spinBox_17 = QtWidgets.QSpinBox(self.widget_17)
        self.function_time_spinBox_17.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_17.setMaximum(1440)
        self.function_time_spinBox_17.setProperty("value", 0)
        self.function_time_spinBox_17.setObjectName("function_time_spinBox_17")
        self.gridLayout_17.addWidget(self.function_time_spinBox_17, 1, 3, 1, 1)
        self.label_57 = QtWidgets.QLabel(self.widget_17)
        self.label_57.setObjectName("label_57")
        self.gridLayout_17.addWidget(self.label_57, 6, 4, 1, 1)
        self.label_58 = QtWidgets.QLabel(self.widget_17)
        self.label_58.setObjectName("label_58")
        self.gridLayout_17.addWidget(self.label_58, 4, 4, 1, 1)
        self.wd_we_17 = QtWidgets.QLabel(self.widget_17)
        self.wd_we_17.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_17.setObjectName("wd_we_17")
        self.gridLayout_17.addWidget(self.wd_we_17, 2, 5, 1, 1)
        self.function_time_17 = QtWidgets.QLabel(self.widget_17)
        self.function_time_17.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_17.setObjectName("function_time_17")
        self.gridLayout_17.addWidget(self.function_time_17, 1, 0, 1, 3)
        self.label_59 = QtWidgets.QLabel(self.widget_17)
        self.label_59.setObjectName("label_59")
        self.gridLayout_17.addWidget(self.label_59, 5, 4, 1, 1)
        self.r_var_17 = QtWidgets.QLabel(self.widget_17)
        self.r_var_17.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_17.setObjectName("r_var_17")
        self.gridLayout_17.addWidget(self.r_var_17, 8, 0, 1, 3)
        self.occationaluse_17 = QtWidgets.QLabel(self.widget_17)
        self.occationaluse_17.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_17.setObjectName("occationaluse_17")
        self.gridLayout_17.addWidget(self.occationaluse_17, 2, 0, 1, 1)
        spacerItem67 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_17.addItem(spacerItem67, 7, 0, 1, 4)
        self.occationaluse_spinBox_17 = QtWidgets.QSpinBox(self.widget_17)
        self.occationaluse_spinBox_17.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_17.setMinimum(1)
        self.occationaluse_spinBox_17.setMaximum(100)
        self.occationaluse_spinBox_17.setProperty("value", 100)
        self.occationaluse_spinBox_17.setObjectName("occationaluse_spinBox_17")
        self.gridLayout_17.addWidget(self.occationaluse_spinBox_17, 2, 3, 1, 1)
        self.func_cycle_spinBox_17 = QtWidgets.QSpinBox(self.widget_17)
        self.func_cycle_spinBox_17.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_17.setMaximum(1440)
        self.func_cycle_spinBox_17.setProperty("value", 1)
        self.func_cycle_spinBox_17.setObjectName("func_cycle_spinBox_17")
        self.gridLayout_17.addWidget(self.func_cycle_spinBox_17, 9, 7, 1, 2)
        self.fixed_17 = QtWidgets.QLabel(self.widget_17)
        self.fixed_17.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_17.setObjectName("fixed_17")
        self.gridLayout_17.addWidget(self.fixed_17, 10, 0, 1, 1)
        self.tfrv_17 = QtWidgets.QLabel(self.widget_17)
        self.tfrv_17.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_17.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_17.setObjectName("tfrv_17")
        self.gridLayout_17.addWidget(self.tfrv_17, 8, 5, 1, 2)
        self.flat_17 = QtWidgets.QLabel(self.widget_17)
        self.flat_17.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_17.setObjectName("flat_17")
        self.gridLayout_17.addWidget(self.flat_17, 10, 5, 1, 1)
        self.tfrv_spinBox_17 = QtWidgets.QSpinBox(self.widget_17)
        self.tfrv_spinBox_17.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_17.setMaximum(100)
        self.tfrv_spinBox_17.setObjectName("tfrv_spinBox_17")
        self.gridLayout_17.addWidget(self.tfrv_spinBox_17, 8, 8, 1, 1)
        self.flat_comboBox_17 = QtWidgets.QComboBox(self.widget_17)
        self.flat_comboBox_17.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_17.setObjectName("flat_comboBox_17")
        self.flat_comboBox_17.addItem("")
        self.flat_comboBox_17.addItem("")
        self.gridLayout_17.addWidget(self.flat_comboBox_17, 10, 7, 1, 2)
        self.thermal_v_spinBox_17 = QtWidgets.QSpinBox(self.widget_17)
        self.thermal_v_spinBox_17.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_17.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_17.setMaximum(100)
        self.thermal_v_spinBox_17.setObjectName("thermal_v_spinBox_17")
        self.gridLayout_17.addWidget(self.thermal_v_spinBox_17, 9, 3, 1, 1)
        self.fixe_comboBox_17 = QtWidgets.QComboBox(self.widget_17)
        self.fixe_comboBox_17.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_17.setObjectName("fixe_comboBox_17")
        self.fixe_comboBox_17.addItem("")
        self.fixe_comboBox_17.addItem("")
        self.gridLayout_17.addWidget(self.fixe_comboBox_17, 10, 3, 1, 1)
        self.func_cycle_17 = QtWidgets.QLabel(self.widget_17)
        self.func_cycle_17.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_17.setObjectName("func_cycle_17")
        self.gridLayout_17.addWidget(self.func_cycle_17, 9, 5, 1, 1)
        self.thermal_v_17 = QtWidgets.QLabel(self.widget_17)
        self.thermal_v_17.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_17.setObjectName("thermal_v_17")
        self.gridLayout_17.addWidget(self.thermal_v_17, 9, 0, 1, 3)
        self.w1start_timeEdit_17 = QtWidgets.QTimeEdit(self.widget_17)
        self.w1start_timeEdit_17.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_17.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_17.setObjectName("w1start_timeEdit_17")
        self.gridLayout_17.addWidget(self.w1start_timeEdit_17, 4, 3, 1, 1)
        self.w2end_17 = QtWidgets.QLabel(self.widget_17)
        self.w2end_17.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_17.setObjectName("w2end_17")
        self.gridLayout_17.addWidget(self.w2end_17, 5, 5, 1, 1)
        self.w2start_17 = QtWidgets.QLabel(self.widget_17)
        self.w2start_17.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_17.setObjectName("w2start_17")
        self.gridLayout_17.addWidget(self.w2start_17, 5, 0, 1, 2)
        self.w1end_timeEdit_17 = QtWidgets.QTimeEdit(self.widget_17)
        self.w1end_timeEdit_17.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_17.setObjectName("w1end_timeEdit_17")
        self.gridLayout_17.addWidget(self.w1end_timeEdit_17, 4, 6, 1, 2)
        self.w2start_timeEdit_17 = QtWidgets.QTimeEdit(self.widget_17)
        self.w2start_timeEdit_17.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_17.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_17.setObjectName("w2start_timeEdit_17")
        self.gridLayout_17.addWidget(self.w2start_timeEdit_17, 5, 3, 1, 1)
        self.w3start_17 = QtWidgets.QLabel(self.widget_17)
        self.w3start_17.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_17.setObjectName("w3start_17")
        self.gridLayout_17.addWidget(self.w3start_17, 6, 0, 1, 3)
        self.w1end_17 = QtWidgets.QLabel(self.widget_17)
        self.w1end_17.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_17.setObjectName("w1end_17")
        self.gridLayout_17.addWidget(self.w1end_17, 4, 5, 1, 1)
        self.w3end_17 = QtWidgets.QLabel(self.widget_17)
        self.w3end_17.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_17.setObjectName("w3end_17")
        self.gridLayout_17.addWidget(self.w3end_17, 6, 5, 1, 1)
        self.w2end_timeEdit_17 = QtWidgets.QTimeEdit(self.widget_17)
        self.w2end_timeEdit_17.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_17.setObjectName("w2end_timeEdit_17")
        self.gridLayout_17.addWidget(self.w2end_timeEdit_17, 5, 6, 1, 2)
        self.w3start_timeEdit_17 = QtWidgets.QTimeEdit(self.widget_17)
        self.w3start_timeEdit_17.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_17.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_17.setObjectName("w3start_timeEdit_17")
        self.gridLayout_17.addWidget(self.w3start_timeEdit_17, 6, 3, 1, 1)
        self.w3end_timeEdit_17 = QtWidgets.QTimeEdit(self.widget_17)
        self.w3end_timeEdit_17.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_17.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_17.setObjectName("w3end_timeEdit_17")
        self.gridLayout_17.addWidget(self.w3end_timeEdit_17, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_17)
        self.horizontallayout_18 = QtWidgets.QHBoxLayout()
        self.horizontallayout_18.setObjectName("horizontallayout_18")
        self.appliancename_label_18 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_18.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_18.setFont(font)
        self.appliancename_label_18.setObjectName("appliancename_label_18")
        self.horizontallayout_18.addWidget(self.appliancename_label_18)
        self.appliancename_lineEdit_18 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_18.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_18.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_18.setObjectName("appliancename_lineEdit_18")
        self.horizontallayout_18.addWidget(self.appliancename_lineEdit_18)
        self.Togglebutton_18 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_18.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_18.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_18.setObjectName("Togglebutton_18")
        self.horizontallayout_18.addWidget(self.Togglebutton_18)
        self.verticalLayout.addLayout(self.horizontallayout_18)
        self.widget_18 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_18.setPalette(palette)
        self.widget_18.setTabletTracking(False)
        self.widget_18.setAutoFillBackground(False)
        self.widget_18.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_18.setObjectName("widget_18")
        self.gridLayout_18 = QtWidgets.QGridLayout(self.widget_18)
        self.gridLayout_18.setObjectName("gridLayout_18")
        spacerItem68 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_18.addItem(spacerItem68, 3, 5, 1, 3)
        spacerItem69 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_18.addItem(spacerItem69, 7, 5, 1, 3)
        spacerItem70 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_18.addItem(spacerItem70, 3, 0, 1, 4)
        self.line_36 = QtWidgets.QFrame(self.widget_18)
        self.line_36.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_36.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_36.setObjectName("line_36")
        self.gridLayout_18.addWidget(self.line_36, 0, 4, 3, 1)
        self.power_18 = QtWidgets.QLabel(self.widget_18)
        self.power_18.setMinimumSize(QtCore.QSize(0, 31))
        self.power_18.setObjectName("power_18")
        self.gridLayout_18.addWidget(self.power_18, 0, 5, 1, 1)
        self.number_18 = QtWidgets.QLabel(self.widget_18)
        self.number_18.setMinimumSize(QtCore.QSize(151, 31))
        self.number_18.setObjectName("number_18")
        self.gridLayout_18.addWidget(self.number_18, 0, 0, 1, 3)
        self.power_spinBox_18 = QtWidgets.QSpinBox(self.widget_18)
        self.power_spinBox_18.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_18.setMaximum(999999999)
        self.power_spinBox_18.setObjectName("power_spinBox_18")
        self.gridLayout_18.addWidget(self.power_spinBox_18, 0, 6, 1, 3)
        self.number_spinBox_18 = QtWidgets.QSpinBox(self.widget_18)
        self.number_spinBox_18.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_18.setMinimum(1)
        self.number_spinBox_18.setMaximum(999999999)
        self.number_spinBox_18.setProperty("value", 1)
        self.number_spinBox_18.setObjectName("number_spinBox_18")
        self.gridLayout_18.addWidget(self.number_spinBox_18, 0, 3, 1, 1)
        self.r_var_spinBox_18 = QtWidgets.QSpinBox(self.widget_18)
        self.r_var_spinBox_18.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_18.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_18.setMaximum(100)
        self.r_var_spinBox_18.setObjectName("r_var_spinBox_18")
        self.gridLayout_18.addWidget(self.r_var_spinBox_18, 8, 3, 1, 1)
        self.line_37 = QtWidgets.QFrame(self.widget_18)
        self.line_37.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_37.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_37.setObjectName("line_37")
        self.gridLayout_18.addWidget(self.line_37, 8, 4, 3, 1)
        self.wd_we_comboBox_18 = QtWidgets.QComboBox(self.widget_18)
        self.wd_we_comboBox_18.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_18.setObjectName("wd_we_comboBox_18")
        self.wd_we_comboBox_18.addItem("")
        self.wd_we_comboBox_18.addItem("")
        self.wd_we_comboBox_18.addItem("")
        self.gridLayout_18.addWidget(self.wd_we_comboBox_18, 2, 6, 1, 3)
        self.num_windows_spinBox_18 = QtWidgets.QSpinBox(self.widget_18)
        self.num_windows_spinBox_18.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_18.setMinimum(1)
        self.num_windows_spinBox_18.setMaximum(3)
        self.num_windows_spinBox_18.setObjectName("num_windows_spinBox_18")
        self.gridLayout_18.addWidget(self.num_windows_spinBox_18, 1, 8, 1, 1)
        self.num_windows_18 = QtWidgets.QLabel(self.widget_18)
        self.num_windows_18.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_18.setObjectName("num_windows_18")
        self.gridLayout_18.addWidget(self.num_windows_18, 1, 5, 1, 3)
        self.w1start_18 = QtWidgets.QLabel(self.widget_18)
        self.w1start_18.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_18.setObjectName("w1start_18")
        self.gridLayout_18.addWidget(self.w1start_18, 4, 0, 1, 1)
        self.function_time_spinBox_18 = QtWidgets.QSpinBox(self.widget_18)
        self.function_time_spinBox_18.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_18.setMaximum(1440)
        self.function_time_spinBox_18.setProperty("value", 0)
        self.function_time_spinBox_18.setObjectName("function_time_spinBox_18")
        self.gridLayout_18.addWidget(self.function_time_spinBox_18, 1, 3, 1, 1)
        self.label_60 = QtWidgets.QLabel(self.widget_18)
        self.label_60.setObjectName("label_60")
        self.gridLayout_18.addWidget(self.label_60, 6, 4, 1, 1)
        self.label_61 = QtWidgets.QLabel(self.widget_18)
        self.label_61.setObjectName("label_61")
        self.gridLayout_18.addWidget(self.label_61, 4, 4, 1, 1)
        self.wd_we_18 = QtWidgets.QLabel(self.widget_18)
        self.wd_we_18.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_18.setObjectName("wd_we_18")
        self.gridLayout_18.addWidget(self.wd_we_18, 2, 5, 1, 1)
        self.function_time_18 = QtWidgets.QLabel(self.widget_18)
        self.function_time_18.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_18.setObjectName("function_time_18")
        self.gridLayout_18.addWidget(self.function_time_18, 1, 0, 1, 3)
        self.label_62 = QtWidgets.QLabel(self.widget_18)
        self.label_62.setObjectName("label_62")
        self.gridLayout_18.addWidget(self.label_62, 5, 4, 1, 1)
        self.r_var_18 = QtWidgets.QLabel(self.widget_18)
        self.r_var_18.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_18.setObjectName("r_var_18")
        self.gridLayout_18.addWidget(self.r_var_18, 8, 0, 1, 3)
        self.occationaluse_18 = QtWidgets.QLabel(self.widget_18)
        self.occationaluse_18.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_18.setObjectName("occationaluse_18")
        self.gridLayout_18.addWidget(self.occationaluse_18, 2, 0, 1, 1)
        spacerItem71 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_18.addItem(spacerItem71, 7, 0, 1, 4)
        self.occationaluse_spinBox_18 = QtWidgets.QSpinBox(self.widget_18)
        self.occationaluse_spinBox_18.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_18.setMinimum(1)
        self.occationaluse_spinBox_18.setMaximum(100)
        self.occationaluse_spinBox_18.setProperty("value", 100)
        self.occationaluse_spinBox_18.setObjectName("occationaluse_spinBox_18")
        self.gridLayout_18.addWidget(self.occationaluse_spinBox_18, 2, 3, 1, 1)
        self.func_cycle_spinBox_18 = QtWidgets.QSpinBox(self.widget_18)
        self.func_cycle_spinBox_18.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_18.setMaximum(1440)
        self.func_cycle_spinBox_18.setProperty("value", 1)
        self.func_cycle_spinBox_18.setObjectName("func_cycle_spinBox_18")
        self.gridLayout_18.addWidget(self.func_cycle_spinBox_18, 9, 7, 1, 2)
        self.fixed_18 = QtWidgets.QLabel(self.widget_18)
        self.fixed_18.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_18.setObjectName("fixed_18")
        self.gridLayout_18.addWidget(self.fixed_18, 10, 0, 1, 1)
        self.tfrv_18 = QtWidgets.QLabel(self.widget_18)
        self.tfrv_18.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_18.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_18.setObjectName("tfrv_18")
        self.gridLayout_18.addWidget(self.tfrv_18, 8, 5, 1, 2)
        self.flat_18 = QtWidgets.QLabel(self.widget_18)
        self.flat_18.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_18.setObjectName("flat_18")
        self.gridLayout_18.addWidget(self.flat_18, 10, 5, 1, 1)
        self.tfrv_spinBox_18 = QtWidgets.QSpinBox(self.widget_18)
        self.tfrv_spinBox_18.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_18.setMaximum(100)
        self.tfrv_spinBox_18.setObjectName("tfrv_spinBox_18")
        self.gridLayout_18.addWidget(self.tfrv_spinBox_18, 8, 8, 1, 1)
        self.flat_comboBox_18 = QtWidgets.QComboBox(self.widget_18)
        self.flat_comboBox_18.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_18.setObjectName("flat_comboBox_18")
        self.flat_comboBox_18.addItem("")
        self.flat_comboBox_18.addItem("")
        self.gridLayout_18.addWidget(self.flat_comboBox_18, 10, 7, 1, 2)
        self.thermal_v_spinBox_18 = QtWidgets.QSpinBox(self.widget_18)
        self.thermal_v_spinBox_18.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_18.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_18.setMaximum(100)
        self.thermal_v_spinBox_18.setObjectName("thermal_v_spinBox_18")
        self.gridLayout_18.addWidget(self.thermal_v_spinBox_18, 9, 3, 1, 1)
        self.fixe_comboBox_18 = QtWidgets.QComboBox(self.widget_18)
        self.fixe_comboBox_18.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_18.setObjectName("fixe_comboBox_18")
        self.fixe_comboBox_18.addItem("")
        self.fixe_comboBox_18.addItem("")
        self.gridLayout_18.addWidget(self.fixe_comboBox_18, 10, 3, 1, 1)
        self.func_cycle_18 = QtWidgets.QLabel(self.widget_18)
        self.func_cycle_18.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_18.setObjectName("func_cycle_18")
        self.gridLayout_18.addWidget(self.func_cycle_18, 9, 5, 1, 1)
        self.thermal_v_18 = QtWidgets.QLabel(self.widget_18)
        self.thermal_v_18.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_18.setObjectName("thermal_v_18")
        self.gridLayout_18.addWidget(self.thermal_v_18, 9, 0, 1, 3)
        self.w1start_timeEdit_18 = QtWidgets.QTimeEdit(self.widget_18)
        self.w1start_timeEdit_18.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_18.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_18.setObjectName("w1start_timeEdit_18")
        self.gridLayout_18.addWidget(self.w1start_timeEdit_18, 4, 3, 1, 1)
        self.w2end_18 = QtWidgets.QLabel(self.widget_18)
        self.w2end_18.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_18.setObjectName("w2end_18")
        self.gridLayout_18.addWidget(self.w2end_18, 5, 5, 1, 1)
        self.w2start_18 = QtWidgets.QLabel(self.widget_18)
        self.w2start_18.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_18.setObjectName("w2start_18")
        self.gridLayout_18.addWidget(self.w2start_18, 5, 0, 1, 2)
        self.w1end_timeEdit_18 = QtWidgets.QTimeEdit(self.widget_18)
        self.w1end_timeEdit_18.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_18.setObjectName("w1end_timeEdit_18")
        self.gridLayout_18.addWidget(self.w1end_timeEdit_18, 4, 6, 1, 2)
        self.w2start_timeEdit_18 = QtWidgets.QTimeEdit(self.widget_18)
        self.w2start_timeEdit_18.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_18.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_18.setObjectName("w2start_timeEdit_18")
        self.gridLayout_18.addWidget(self.w2start_timeEdit_18, 5, 3, 1, 1)
        self.w3start_18 = QtWidgets.QLabel(self.widget_18)
        self.w3start_18.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_18.setObjectName("w3start_18")
        self.gridLayout_18.addWidget(self.w3start_18, 6, 0, 1, 3)
        self.w1end_18 = QtWidgets.QLabel(self.widget_18)
        self.w1end_18.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_18.setObjectName("w1end_18")
        self.gridLayout_18.addWidget(self.w1end_18, 4, 5, 1, 1)
        self.w3end_18 = QtWidgets.QLabel(self.widget_18)
        self.w3end_18.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_18.setObjectName("w3end_18")
        self.gridLayout_18.addWidget(self.w3end_18, 6, 5, 1, 1)
        self.w2end_timeEdit_18 = QtWidgets.QTimeEdit(self.widget_18)
        self.w2end_timeEdit_18.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_18.setObjectName("w2end_timeEdit_18")
        self.gridLayout_18.addWidget(self.w2end_timeEdit_18, 5, 6, 1, 2)
        self.w3start_timeEdit_18 = QtWidgets.QTimeEdit(self.widget_18)
        self.w3start_timeEdit_18.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_18.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_18.setObjectName("w3start_timeEdit_18")
        self.gridLayout_18.addWidget(self.w3start_timeEdit_18, 6, 3, 1, 1)
        self.w3end_timeEdit_18 = QtWidgets.QTimeEdit(self.widget_18)
        self.w3end_timeEdit_18.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_18.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_18.setObjectName("w3end_timeEdit_18")
        self.gridLayout_18.addWidget(self.w3end_timeEdit_18, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_18)
        self.horizontallayout_19 = QtWidgets.QHBoxLayout()
        self.horizontallayout_19.setObjectName("horizontallayout_19")
        self.appliancename_label_19 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_19.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_19.setFont(font)
        self.appliancename_label_19.setObjectName("appliancename_label_19")
        self.horizontallayout_19.addWidget(self.appliancename_label_19)
        self.appliancename_lineEdit_19 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_19.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_19.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_19.setObjectName("appliancename_lineEdit_19")
        self.horizontallayout_19.addWidget(self.appliancename_lineEdit_19)
        self.Togglebutton_19 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_19.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_19.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_19.setObjectName("Togglebutton_19")
        self.horizontallayout_19.addWidget(self.Togglebutton_19)
        self.verticalLayout.addLayout(self.horizontallayout_19)
        self.widget_19 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_19.setPalette(palette)
        self.widget_19.setTabletTracking(False)
        self.widget_19.setAutoFillBackground(False)
        self.widget_19.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_19.setObjectName("widget_19")
        self.gridLayout_19 = QtWidgets.QGridLayout(self.widget_19)
        self.gridLayout_19.setObjectName("gridLayout_19")
        spacerItem72 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_19.addItem(spacerItem72, 3, 5, 1, 3)
        spacerItem73 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_19.addItem(spacerItem73, 7, 5, 1, 3)
        spacerItem74 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_19.addItem(spacerItem74, 3, 0, 1, 4)
        self.line_38 = QtWidgets.QFrame(self.widget_19)
        self.line_38.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_38.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_38.setObjectName("line_38")
        self.gridLayout_19.addWidget(self.line_38, 0, 4, 3, 1)
        self.power_19 = QtWidgets.QLabel(self.widget_19)
        self.power_19.setMinimumSize(QtCore.QSize(0, 31))
        self.power_19.setObjectName("power_19")
        self.gridLayout_19.addWidget(self.power_19, 0, 5, 1, 1)
        self.number_19 = QtWidgets.QLabel(self.widget_19)
        self.number_19.setMinimumSize(QtCore.QSize(151, 31))
        self.number_19.setObjectName("number_19")
        self.gridLayout_19.addWidget(self.number_19, 0, 0, 1, 3)
        self.power_spinBox_19 = QtWidgets.QSpinBox(self.widget_19)
        self.power_spinBox_19.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_19.setMaximum(999999999)
        self.power_spinBox_19.setObjectName("power_spinBox_19")
        self.gridLayout_19.addWidget(self.power_spinBox_19, 0, 6, 1, 3)
        self.number_spinBox_19 = QtWidgets.QSpinBox(self.widget_19)
        self.number_spinBox_19.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_19.setMinimum(1)
        self.number_spinBox_19.setMaximum(999999999)
        self.number_spinBox_19.setProperty("value", 1)
        self.number_spinBox_19.setObjectName("number_spinBox_19")
        self.gridLayout_19.addWidget(self.number_spinBox_19, 0, 3, 1, 1)
        self.r_var_spinBox_19 = QtWidgets.QSpinBox(self.widget_19)
        self.r_var_spinBox_19.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_19.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_19.setMaximum(100)
        self.r_var_spinBox_19.setObjectName("r_var_spinBox_19")
        self.gridLayout_19.addWidget(self.r_var_spinBox_19, 8, 3, 1, 1)
        self.line_39 = QtWidgets.QFrame(self.widget_19)
        self.line_39.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_39.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_39.setObjectName("line_39")
        self.gridLayout_19.addWidget(self.line_39, 8, 4, 3, 1)
        self.wd_we_comboBox_19 = QtWidgets.QComboBox(self.widget_19)
        self.wd_we_comboBox_19.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_19.setObjectName("wd_we_comboBox_19")
        self.wd_we_comboBox_19.addItem("")
        self.wd_we_comboBox_19.addItem("")
        self.wd_we_comboBox_19.addItem("")
        self.gridLayout_19.addWidget(self.wd_we_comboBox_19, 2, 6, 1, 3)
        self.num_windows_spinBox_19 = QtWidgets.QSpinBox(self.widget_19)
        self.num_windows_spinBox_19.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_19.setMinimum(1)
        self.num_windows_spinBox_19.setMaximum(3)
        self.num_windows_spinBox_19.setObjectName("num_windows_spinBox_19")
        self.gridLayout_19.addWidget(self.num_windows_spinBox_19, 1, 8, 1, 1)
        self.num_windows_19 = QtWidgets.QLabel(self.widget_19)
        self.num_windows_19.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_19.setObjectName("num_windows_19")
        self.gridLayout_19.addWidget(self.num_windows_19, 1, 5, 1, 3)
        self.w1start_19 = QtWidgets.QLabel(self.widget_19)
        self.w1start_19.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_19.setObjectName("w1start_19")
        self.gridLayout_19.addWidget(self.w1start_19, 4, 0, 1, 1)
        self.function_time_spinBox_19 = QtWidgets.QSpinBox(self.widget_19)
        self.function_time_spinBox_19.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_19.setMaximum(1440)
        self.function_time_spinBox_19.setProperty("value", 0)
        self.function_time_spinBox_19.setObjectName("function_time_spinBox_19")
        self.gridLayout_19.addWidget(self.function_time_spinBox_19, 1, 3, 1, 1)
        self.label_63 = QtWidgets.QLabel(self.widget_19)
        self.label_63.setObjectName("label_63")
        self.gridLayout_19.addWidget(self.label_63, 6, 4, 1, 1)
        self.label_64 = QtWidgets.QLabel(self.widget_19)
        self.label_64.setObjectName("label_64")
        self.gridLayout_19.addWidget(self.label_64, 4, 4, 1, 1)
        self.wd_we_19 = QtWidgets.QLabel(self.widget_19)
        self.wd_we_19.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_19.setObjectName("wd_we_19")
        self.gridLayout_19.addWidget(self.wd_we_19, 2, 5, 1, 1)
        self.function_time_19 = QtWidgets.QLabel(self.widget_19)
        self.function_time_19.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_19.setObjectName("function_time_19")
        self.gridLayout_19.addWidget(self.function_time_19, 1, 0, 1, 3)
        self.label_65 = QtWidgets.QLabel(self.widget_19)
        self.label_65.setObjectName("label_65")
        self.gridLayout_19.addWidget(self.label_65, 5, 4, 1, 1)
        self.r_var_19 = QtWidgets.QLabel(self.widget_19)
        self.r_var_19.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_19.setObjectName("r_var_19")
        self.gridLayout_19.addWidget(self.r_var_19, 8, 0, 1, 3)
        self.occationaluse_19 = QtWidgets.QLabel(self.widget_19)
        self.occationaluse_19.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_19.setObjectName("occationaluse_19")
        self.gridLayout_19.addWidget(self.occationaluse_19, 2, 0, 1, 1)
        spacerItem75 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_19.addItem(spacerItem75, 7, 0, 1, 4)
        self.occationaluse_spinBox_19 = QtWidgets.QSpinBox(self.widget_19)
        self.occationaluse_spinBox_19.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_19.setMinimum(1)
        self.occationaluse_spinBox_19.setMaximum(100)
        self.occationaluse_spinBox_19.setProperty("value", 100)
        self.occationaluse_spinBox_19.setObjectName("occationaluse_spinBox_19")
        self.gridLayout_19.addWidget(self.occationaluse_spinBox_19, 2, 3, 1, 1)
        self.func_cycle_spinBox_19 = QtWidgets.QSpinBox(self.widget_19)
        self.func_cycle_spinBox_19.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_19.setMaximum(1440)
        self.func_cycle_spinBox_19.setProperty("value", 1)
        self.func_cycle_spinBox_19.setObjectName("func_cycle_spinBox_19")
        self.gridLayout_19.addWidget(self.func_cycle_spinBox_19, 9, 7, 1, 2)
        self.fixed_19 = QtWidgets.QLabel(self.widget_19)
        self.fixed_19.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_19.setObjectName("fixed_19")
        self.gridLayout_19.addWidget(self.fixed_19, 10, 0, 1, 1)
        self.tfrv_19 = QtWidgets.QLabel(self.widget_19)
        self.tfrv_19.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_19.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_19.setObjectName("tfrv_19")
        self.gridLayout_19.addWidget(self.tfrv_19, 8, 5, 1, 2)
        self.flat_19 = QtWidgets.QLabel(self.widget_19)
        self.flat_19.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_19.setObjectName("flat_19")
        self.gridLayout_19.addWidget(self.flat_19, 10, 5, 1, 1)
        self.tfrv_spinBox_19 = QtWidgets.QSpinBox(self.widget_19)
        self.tfrv_spinBox_19.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_19.setMaximum(100)
        self.tfrv_spinBox_19.setObjectName("tfrv_spinBox_19")
        self.gridLayout_19.addWidget(self.tfrv_spinBox_19, 8, 8, 1, 1)
        self.flat_comboBox_19 = QtWidgets.QComboBox(self.widget_19)
        self.flat_comboBox_19.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_19.setObjectName("flat_comboBox_19")
        self.flat_comboBox_19.addItem("")
        self.flat_comboBox_19.addItem("")
        self.gridLayout_19.addWidget(self.flat_comboBox_19, 10, 7, 1, 2)
        self.thermal_v_spinBox_19 = QtWidgets.QSpinBox(self.widget_19)
        self.thermal_v_spinBox_19.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_19.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_19.setMaximum(100)
        self.thermal_v_spinBox_19.setObjectName("thermal_v_spinBox_19")
        self.gridLayout_19.addWidget(self.thermal_v_spinBox_19, 9, 3, 1, 1)
        self.fixe_comboBox_19 = QtWidgets.QComboBox(self.widget_19)
        self.fixe_comboBox_19.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_19.setObjectName("fixe_comboBox_19")
        self.fixe_comboBox_19.addItem("")
        self.fixe_comboBox_19.addItem("")
        self.gridLayout_19.addWidget(self.fixe_comboBox_19, 10, 3, 1, 1)
        self.func_cycle_19 = QtWidgets.QLabel(self.widget_19)
        self.func_cycle_19.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_19.setObjectName("func_cycle_19")
        self.gridLayout_19.addWidget(self.func_cycle_19, 9, 5, 1, 1)
        self.thermal_v_19 = QtWidgets.QLabel(self.widget_19)
        self.thermal_v_19.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_19.setObjectName("thermal_v_19")
        self.gridLayout_19.addWidget(self.thermal_v_19, 9, 0, 1, 3)
        self.w1start_timeEdit_19 = QtWidgets.QTimeEdit(self.widget_19)
        self.w1start_timeEdit_19.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_19.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_19.setObjectName("w1start_timeEdit_19")
        self.gridLayout_19.addWidget(self.w1start_timeEdit_19, 4, 3, 1, 1)
        self.w2end_19 = QtWidgets.QLabel(self.widget_19)
        self.w2end_19.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_19.setObjectName("w2end_19")
        self.gridLayout_19.addWidget(self.w2end_19, 5, 5, 1, 1)
        self.w2start_19 = QtWidgets.QLabel(self.widget_19)
        self.w2start_19.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_19.setObjectName("w2start_19")
        self.gridLayout_19.addWidget(self.w2start_19, 5, 0, 1, 2)
        self.w1end_timeEdit_19 = QtWidgets.QTimeEdit(self.widget_19)
        self.w1end_timeEdit_19.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_19.setObjectName("w1end_timeEdit_19")
        self.gridLayout_19.addWidget(self.w1end_timeEdit_19, 4, 6, 1, 2)
        self.w2start_timeEdit_19 = QtWidgets.QTimeEdit(self.widget_19)
        self.w2start_timeEdit_19.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_19.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_19.setObjectName("w2start_timeEdit_19")
        self.gridLayout_19.addWidget(self.w2start_timeEdit_19, 5, 3, 1, 1)
        self.w3start_19 = QtWidgets.QLabel(self.widget_19)
        self.w3start_19.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_19.setObjectName("w3start_19")
        self.gridLayout_19.addWidget(self.w3start_19, 6, 0, 1, 3)
        self.w1end_19 = QtWidgets.QLabel(self.widget_19)
        self.w1end_19.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_19.setObjectName("w1end_19")
        self.gridLayout_19.addWidget(self.w1end_19, 4, 5, 1, 1)
        self.w3end_19 = QtWidgets.QLabel(self.widget_19)
        self.w3end_19.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_19.setObjectName("w3end_19")
        self.gridLayout_19.addWidget(self.w3end_19, 6, 5, 1, 1)
        self.w2end_timeEdit_19 = QtWidgets.QTimeEdit(self.widget_19)
        self.w2end_timeEdit_19.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_19.setObjectName("w2end_timeEdit_19")
        self.gridLayout_19.addWidget(self.w2end_timeEdit_19, 5, 6, 1, 2)
        self.w3start_timeEdit_19 = QtWidgets.QTimeEdit(self.widget_19)
        self.w3start_timeEdit_19.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_19.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_19.setObjectName("w3start_timeEdit_19")
        self.gridLayout_19.addWidget(self.w3start_timeEdit_19, 6, 3, 1, 1)
        self.w3end_timeEdit_19 = QtWidgets.QTimeEdit(self.widget_19)
        self.w3end_timeEdit_19.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_19.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_19.setObjectName("w3end_timeEdit_19")
        self.gridLayout_19.addWidget(self.w3end_timeEdit_19, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_19)
        self.horizontallayout_20 = QtWidgets.QHBoxLayout()
        self.horizontallayout_20.setObjectName("horizontallayout_20")
        self.appliancename_label_20 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_20.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_20.setFont(font)
        self.appliancename_label_20.setObjectName("appliancename_label_20")
        self.horizontallayout_20.addWidget(self.appliancename_label_20)
        self.appliancename_lineEdit_20 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_20.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_20.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_20.setObjectName("appliancename_lineEdit_20")
        self.horizontallayout_20.addWidget(self.appliancename_lineEdit_20)
        self.Togglebutton_20 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_20.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_20.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_20.setObjectName("Togglebutton_20")
        self.horizontallayout_20.addWidget(self.Togglebutton_20)
        self.verticalLayout.addLayout(self.horizontallayout_20)
        self.widget_20 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_20.setPalette(palette)
        self.widget_20.setTabletTracking(False)
        self.widget_20.setAutoFillBackground(False)
        self.widget_20.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_20.setObjectName("widget_20")
        self.gridLayout_20 = QtWidgets.QGridLayout(self.widget_20)
        self.gridLayout_20.setObjectName("gridLayout_20")
        spacerItem76 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_20.addItem(spacerItem76, 3, 5, 1, 3)
        spacerItem77 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_20.addItem(spacerItem77, 7, 5, 1, 3)
        spacerItem78 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_20.addItem(spacerItem78, 3, 0, 1, 4)
        self.line_40 = QtWidgets.QFrame(self.widget_20)
        self.line_40.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_40.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_40.setObjectName("line_40")
        self.gridLayout_20.addWidget(self.line_40, 0, 4, 3, 1)
        self.power_20 = QtWidgets.QLabel(self.widget_20)
        self.power_20.setMinimumSize(QtCore.QSize(0, 31))
        self.power_20.setObjectName("power_20")
        self.gridLayout_20.addWidget(self.power_20, 0, 5, 1, 1)
        self.number_20 = QtWidgets.QLabel(self.widget_20)
        self.number_20.setMinimumSize(QtCore.QSize(151, 31))
        self.number_20.setObjectName("number_20")
        self.gridLayout_20.addWidget(self.number_20, 0, 0, 1, 3)
        self.power_spinBox_20 = QtWidgets.QSpinBox(self.widget_20)
        self.power_spinBox_20.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_20.setMaximum(999999999)
        self.power_spinBox_20.setObjectName("power_spinBox_20")
        self.gridLayout_20.addWidget(self.power_spinBox_20, 0, 6, 1, 3)
        self.number_spinBox_20 = QtWidgets.QSpinBox(self.widget_20)
        self.number_spinBox_20.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_20.setMinimum(1)
        self.number_spinBox_20.setMaximum(999999999)
        self.number_spinBox_20.setProperty("value", 1)
        self.number_spinBox_20.setObjectName("number_spinBox_20")
        self.gridLayout_20.addWidget(self.number_spinBox_20, 0, 3, 1, 1)
        self.r_var_spinBox_20 = QtWidgets.QSpinBox(self.widget_20)
        self.r_var_spinBox_20.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_20.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_20.setMaximum(100)
        self.r_var_spinBox_20.setObjectName("r_var_spinBox_20")
        self.gridLayout_20.addWidget(self.r_var_spinBox_20, 8, 3, 1, 1)
        self.line_41 = QtWidgets.QFrame(self.widget_20)
        self.line_41.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_41.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_41.setObjectName("line_41")
        self.gridLayout_20.addWidget(self.line_41, 8, 4, 3, 1)
        self.wd_we_comboBox_20 = QtWidgets.QComboBox(self.widget_20)
        self.wd_we_comboBox_20.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_20.setObjectName("wd_we_comboBox_20")
        self.wd_we_comboBox_20.addItem("")
        self.wd_we_comboBox_20.addItem("")
        self.wd_we_comboBox_20.addItem("")
        self.gridLayout_20.addWidget(self.wd_we_comboBox_20, 2, 6, 1, 3)
        self.num_windows_spinBox_20 = QtWidgets.QSpinBox(self.widget_20)
        self.num_windows_spinBox_20.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_20.setMinimum(1)
        self.num_windows_spinBox_20.setMaximum(3)
        self.num_windows_spinBox_20.setObjectName("num_windows_spinBox_20")
        self.gridLayout_20.addWidget(self.num_windows_spinBox_20, 1, 8, 1, 1)
        self.num_windows_20 = QtWidgets.QLabel(self.widget_20)
        self.num_windows_20.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_20.setObjectName("num_windows_20")
        self.gridLayout_20.addWidget(self.num_windows_20, 1, 5, 1, 3)
        self.w1start_20 = QtWidgets.QLabel(self.widget_20)
        self.w1start_20.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_20.setObjectName("w1start_20")
        self.gridLayout_20.addWidget(self.w1start_20, 4, 0, 1, 1)
        self.function_time_spinBox_20 = QtWidgets.QSpinBox(self.widget_20)
        self.function_time_spinBox_20.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_20.setMaximum(1440)
        self.function_time_spinBox_20.setProperty("value", 0)
        self.function_time_spinBox_20.setObjectName("function_time_spinBox_20")
        self.gridLayout_20.addWidget(self.function_time_spinBox_20, 1, 3, 1, 1)
        self.label_66 = QtWidgets.QLabel(self.widget_20)
        self.label_66.setObjectName("label_66")
        self.gridLayout_20.addWidget(self.label_66, 6, 4, 1, 1)
        self.label_67 = QtWidgets.QLabel(self.widget_20)
        self.label_67.setObjectName("label_67")
        self.gridLayout_20.addWidget(self.label_67, 4, 4, 1, 1)
        self.wd_we_20 = QtWidgets.QLabel(self.widget_20)
        self.wd_we_20.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_20.setObjectName("wd_we_20")
        self.gridLayout_20.addWidget(self.wd_we_20, 2, 5, 1, 1)
        self.function_time_20 = QtWidgets.QLabel(self.widget_20)
        self.function_time_20.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_20.setObjectName("function_time_20")
        self.gridLayout_20.addWidget(self.function_time_20, 1, 0, 1, 3)
        self.label_68 = QtWidgets.QLabel(self.widget_20)
        self.label_68.setObjectName("label_68")
        self.gridLayout_20.addWidget(self.label_68, 5, 4, 1, 1)
        self.r_var_20 = QtWidgets.QLabel(self.widget_20)
        self.r_var_20.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_20.setObjectName("r_var_20")
        self.gridLayout_20.addWidget(self.r_var_20, 8, 0, 1, 3)
        self.occationaluse_20 = QtWidgets.QLabel(self.widget_20)
        self.occationaluse_20.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_20.setObjectName("occationaluse_20")
        self.gridLayout_20.addWidget(self.occationaluse_20, 2, 0, 1, 1)
        spacerItem79 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_20.addItem(spacerItem79, 7, 0, 1, 4)
        self.occationaluse_spinBox_20 = QtWidgets.QSpinBox(self.widget_20)
        self.occationaluse_spinBox_20.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_20.setMinimum(1)
        self.occationaluse_spinBox_20.setMaximum(100)
        self.occationaluse_spinBox_20.setProperty("value", 100)
        self.occationaluse_spinBox_20.setObjectName("occationaluse_spinBox_20")
        self.gridLayout_20.addWidget(self.occationaluse_spinBox_20, 2, 3, 1, 1)
        self.func_cycle_spinBox_20 = QtWidgets.QSpinBox(self.widget_20)
        self.func_cycle_spinBox_20.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_20.setMaximum(1440)
        self.func_cycle_spinBox_20.setProperty("value", 1)
        self.func_cycle_spinBox_20.setObjectName("func_cycle_spinBox_20")
        self.gridLayout_20.addWidget(self.func_cycle_spinBox_20, 9, 7, 1, 2)
        self.fixed_20 = QtWidgets.QLabel(self.widget_20)
        self.fixed_20.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_20.setObjectName("fixed_20")
        self.gridLayout_20.addWidget(self.fixed_20, 10, 0, 1, 1)
        self.tfrv_20 = QtWidgets.QLabel(self.widget_20)
        self.tfrv_20.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_20.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_20.setObjectName("tfrv_20")
        self.gridLayout_20.addWidget(self.tfrv_20, 8, 5, 1, 2)
        self.flat_20 = QtWidgets.QLabel(self.widget_20)
        self.flat_20.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_20.setObjectName("flat_20")
        self.gridLayout_20.addWidget(self.flat_20, 10, 5, 1, 1)
        self.tfrv_spinBox_20 = QtWidgets.QSpinBox(self.widget_20)
        self.tfrv_spinBox_20.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_20.setMaximum(100)
        self.tfrv_spinBox_20.setObjectName("tfrv_spinBox_20")
        self.gridLayout_20.addWidget(self.tfrv_spinBox_20, 8, 8, 1, 1)
        self.flat_comboBox_20 = QtWidgets.QComboBox(self.widget_20)
        self.flat_comboBox_20.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_20.setObjectName("flat_comboBox_20")
        self.flat_comboBox_20.addItem("")
        self.flat_comboBox_20.addItem("")
        self.gridLayout_20.addWidget(self.flat_comboBox_20, 10, 7, 1, 2)
        self.thermal_v_spinBox_20 = QtWidgets.QSpinBox(self.widget_20)
        self.thermal_v_spinBox_20.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_20.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_20.setMaximum(100)
        self.thermal_v_spinBox_20.setObjectName("thermal_v_spinBox_20")
        self.gridLayout_20.addWidget(self.thermal_v_spinBox_20, 9, 3, 1, 1)
        self.fixe_comboBox_20 = QtWidgets.QComboBox(self.widget_20)
        self.fixe_comboBox_20.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_20.setObjectName("fixe_comboBox_20")
        self.fixe_comboBox_20.addItem("")
        self.fixe_comboBox_20.addItem("")
        self.gridLayout_20.addWidget(self.fixe_comboBox_20, 10, 3, 1, 1)
        self.func_cycle_20 = QtWidgets.QLabel(self.widget_20)
        self.func_cycle_20.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_20.setObjectName("func_cycle_20")
        self.gridLayout_20.addWidget(self.func_cycle_20, 9, 5, 1, 1)
        self.thermal_v_20 = QtWidgets.QLabel(self.widget_20)
        self.thermal_v_20.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_20.setObjectName("thermal_v_20")
        self.gridLayout_20.addWidget(self.thermal_v_20, 9, 0, 1, 3)
        self.w1start_timeEdit_20 = QtWidgets.QTimeEdit(self.widget_20)
        self.w1start_timeEdit_20.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_20.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_20.setObjectName("w1start_timeEdit_20")
        self.gridLayout_20.addWidget(self.w1start_timeEdit_20, 4, 3, 1, 1)
        self.w2end_20 = QtWidgets.QLabel(self.widget_20)
        self.w2end_20.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_20.setObjectName("w2end_20")
        self.gridLayout_20.addWidget(self.w2end_20, 5, 5, 1, 1)
        self.w2start_20 = QtWidgets.QLabel(self.widget_20)
        self.w2start_20.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_20.setObjectName("w2start_20")
        self.gridLayout_20.addWidget(self.w2start_20, 5, 0, 1, 2)
        self.w1end_timeEdit_20 = QtWidgets.QTimeEdit(self.widget_20)
        self.w1end_timeEdit_20.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_20.setObjectName("w1end_timeEdit_20")
        self.gridLayout_20.addWidget(self.w1end_timeEdit_20, 4, 6, 1, 2)
        self.w2start_timeEdit_20 = QtWidgets.QTimeEdit(self.widget_20)
        self.w2start_timeEdit_20.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_20.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_20.setObjectName("w2start_timeEdit_20")
        self.gridLayout_20.addWidget(self.w2start_timeEdit_20, 5, 3, 1, 1)
        self.w3start_20 = QtWidgets.QLabel(self.widget_20)
        self.w3start_20.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_20.setObjectName("w3start_20")
        self.gridLayout_20.addWidget(self.w3start_20, 6, 0, 1, 3)
        self.w1end_20 = QtWidgets.QLabel(self.widget_20)
        self.w1end_20.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_20.setObjectName("w1end_20")
        self.gridLayout_20.addWidget(self.w1end_20, 4, 5, 1, 1)
        self.w3end_20 = QtWidgets.QLabel(self.widget_20)
        self.w3end_20.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_20.setObjectName("w3end_20")
        self.gridLayout_20.addWidget(self.w3end_20, 6, 5, 1, 1)
        self.w2end_timeEdit_20 = QtWidgets.QTimeEdit(self.widget_20)
        self.w2end_timeEdit_20.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_20.setObjectName("w2end_timeEdit_20")
        self.gridLayout_20.addWidget(self.w2end_timeEdit_20, 5, 6, 1, 2)
        self.w3start_timeEdit_20 = QtWidgets.QTimeEdit(self.widget_20)
        self.w3start_timeEdit_20.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_20.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_20.setObjectName("w3start_timeEdit_20")
        self.gridLayout_20.addWidget(self.w3start_timeEdit_20, 6, 3, 1, 1)
        self.w3end_timeEdit_20 = QtWidgets.QTimeEdit(self.widget_20)
        self.w3end_timeEdit_20.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_20.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_20.setObjectName("w3end_timeEdit_20")
        self.gridLayout_20.addWidget(self.w3end_timeEdit_20, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_20)
        self.horizontallayout_21 = QtWidgets.QHBoxLayout()
        self.horizontallayout_21.setObjectName("horizontallayout_21")
        self.appliancename_label_21 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_21.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_21.setFont(font)
        self.appliancename_label_21.setObjectName("appliancename_label_21")
        self.horizontallayout_21.addWidget(self.appliancename_label_21)
        self.appliancename_lineEdit_21 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_21.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_21.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_21.setObjectName("appliancename_lineEdit_21")
        self.horizontallayout_21.addWidget(self.appliancename_lineEdit_21)
        self.Togglebutton_21 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_21.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_21.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_21.setObjectName("Togglebutton_21")
        self.horizontallayout_21.addWidget(self.Togglebutton_21)
        self.verticalLayout.addLayout(self.horizontallayout_21)
        self.widget_21 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_21.setPalette(palette)
        self.widget_21.setTabletTracking(False)
        self.widget_21.setAutoFillBackground(False)
        self.widget_21.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_21.setObjectName("widget_21")
        self.gridLayout_21 = QtWidgets.QGridLayout(self.widget_21)
        self.gridLayout_21.setObjectName("gridLayout_21")
        spacerItem80 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_21.addItem(spacerItem80, 3, 5, 1, 3)
        spacerItem81 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_21.addItem(spacerItem81, 7, 5, 1, 3)
        spacerItem82 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_21.addItem(spacerItem82, 3, 0, 1, 4)
        self.line_42 = QtWidgets.QFrame(self.widget_21)
        self.line_42.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_42.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_42.setObjectName("line_42")
        self.gridLayout_21.addWidget(self.line_42, 0, 4, 3, 1)
        self.power_21 = QtWidgets.QLabel(self.widget_21)
        self.power_21.setMinimumSize(QtCore.QSize(0, 31))
        self.power_21.setObjectName("power_21")
        self.gridLayout_21.addWidget(self.power_21, 0, 5, 1, 1)
        self.number_21 = QtWidgets.QLabel(self.widget_21)
        self.number_21.setMinimumSize(QtCore.QSize(151, 31))
        self.number_21.setObjectName("number_21")
        self.gridLayout_21.addWidget(self.number_21, 0, 0, 1, 3)
        self.power_spinBox_21 = QtWidgets.QSpinBox(self.widget_21)
        self.power_spinBox_21.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_21.setMaximum(999999999)
        self.power_spinBox_21.setObjectName("power_spinBox_21")
        self.gridLayout_21.addWidget(self.power_spinBox_21, 0, 6, 1, 3)
        self.number_spinBox_21 = QtWidgets.QSpinBox(self.widget_21)
        self.number_spinBox_21.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_21.setMinimum(1)
        self.number_spinBox_21.setMaximum(999999999)
        self.number_spinBox_21.setProperty("value", 1)
        self.number_spinBox_21.setObjectName("number_spinBox_21")
        self.gridLayout_21.addWidget(self.number_spinBox_21, 0, 3, 1, 1)
        self.r_var_spinBox_21 = QtWidgets.QSpinBox(self.widget_21)
        self.r_var_spinBox_21.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_21.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_21.setMaximum(100)
        self.r_var_spinBox_21.setObjectName("r_var_spinBox_21")
        self.gridLayout_21.addWidget(self.r_var_spinBox_21, 8, 3, 1, 1)
        self.line_43 = QtWidgets.QFrame(self.widget_21)
        self.line_43.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_43.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_43.setObjectName("line_43")
        self.gridLayout_21.addWidget(self.line_43, 8, 4, 3, 1)
        self.wd_we_comboBox_21 = QtWidgets.QComboBox(self.widget_21)
        self.wd_we_comboBox_21.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_21.setObjectName("wd_we_comboBox_21")
        self.wd_we_comboBox_21.addItem("")
        self.wd_we_comboBox_21.addItem("")
        self.wd_we_comboBox_21.addItem("")
        self.gridLayout_21.addWidget(self.wd_we_comboBox_21, 2, 6, 1, 3)
        self.num_windows_spinBox_21 = QtWidgets.QSpinBox(self.widget_21)
        self.num_windows_spinBox_21.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_21.setMinimum(1)
        self.num_windows_spinBox_21.setMaximum(3)
        self.num_windows_spinBox_21.setObjectName("num_windows_spinBox_21")
        self.gridLayout_21.addWidget(self.num_windows_spinBox_21, 1, 8, 1, 1)
        self.num_windows_21 = QtWidgets.QLabel(self.widget_21)
        self.num_windows_21.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_21.setObjectName("num_windows_21")
        self.gridLayout_21.addWidget(self.num_windows_21, 1, 5, 1, 3)
        self.w1start_21 = QtWidgets.QLabel(self.widget_21)
        self.w1start_21.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_21.setObjectName("w1start_21")
        self.gridLayout_21.addWidget(self.w1start_21, 4, 0, 1, 1)
        self.function_time_spinBox_21 = QtWidgets.QSpinBox(self.widget_21)
        self.function_time_spinBox_21.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_21.setMaximum(1440)
        self.function_time_spinBox_21.setProperty("value", 0)
        self.function_time_spinBox_21.setObjectName("function_time_spinBox_21")
        self.gridLayout_21.addWidget(self.function_time_spinBox_21, 1, 3, 1, 1)
        self.label_69 = QtWidgets.QLabel(self.widget_21)
        self.label_69.setObjectName("label_69")
        self.gridLayout_21.addWidget(self.label_69, 6, 4, 1, 1)
        self.label_70 = QtWidgets.QLabel(self.widget_21)
        self.label_70.setObjectName("label_70")
        self.gridLayout_21.addWidget(self.label_70, 4, 4, 1, 1)
        self.wd_we_21 = QtWidgets.QLabel(self.widget_21)
        self.wd_we_21.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_21.setObjectName("wd_we_21")
        self.gridLayout_21.addWidget(self.wd_we_21, 2, 5, 1, 1)
        self.function_time_21 = QtWidgets.QLabel(self.widget_21)
        self.function_time_21.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_21.setObjectName("function_time_21")
        self.gridLayout_21.addWidget(self.function_time_21, 1, 0, 1, 3)
        self.label_71 = QtWidgets.QLabel(self.widget_21)
        self.label_71.setObjectName("label_71")
        self.gridLayout_21.addWidget(self.label_71, 5, 4, 1, 1)
        self.r_var_21 = QtWidgets.QLabel(self.widget_21)
        self.r_var_21.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_21.setObjectName("r_var_21")
        self.gridLayout_21.addWidget(self.r_var_21, 8, 0, 1, 3)
        self.occationaluse_21 = QtWidgets.QLabel(self.widget_21)
        self.occationaluse_21.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_21.setObjectName("occationaluse_21")
        self.gridLayout_21.addWidget(self.occationaluse_21, 2, 0, 1, 1)
        spacerItem83 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_21.addItem(spacerItem83, 7, 0, 1, 4)
        self.occationaluse_spinBox_21 = QtWidgets.QSpinBox(self.widget_21)
        self.occationaluse_spinBox_21.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_21.setMinimum(1)
        self.occationaluse_spinBox_21.setMaximum(100)
        self.occationaluse_spinBox_21.setProperty("value", 100)
        self.occationaluse_spinBox_21.setObjectName("occationaluse_spinBox_21")
        self.gridLayout_21.addWidget(self.occationaluse_spinBox_21, 2, 3, 1, 1)
        self.func_cycle_spinBox_21 = QtWidgets.QSpinBox(self.widget_21)
        self.func_cycle_spinBox_21.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_21.setMaximum(1440)
        self.func_cycle_spinBox_21.setProperty("value", 1)
        self.func_cycle_spinBox_21.setObjectName("func_cycle_spinBox_21")
        self.gridLayout_21.addWidget(self.func_cycle_spinBox_21, 9, 7, 1, 2)
        self.fixed_21 = QtWidgets.QLabel(self.widget_21)
        self.fixed_21.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_21.setObjectName("fixed_21")
        self.gridLayout_21.addWidget(self.fixed_21, 10, 0, 1, 1)
        self.tfrv_21 = QtWidgets.QLabel(self.widget_21)
        self.tfrv_21.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_21.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_21.setObjectName("tfrv_21")
        self.gridLayout_21.addWidget(self.tfrv_21, 8, 5, 1, 2)
        self.flat_21 = QtWidgets.QLabel(self.widget_21)
        self.flat_21.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_21.setObjectName("flat_21")
        self.gridLayout_21.addWidget(self.flat_21, 10, 5, 1, 1)
        self.tfrv_spinBox_21 = QtWidgets.QSpinBox(self.widget_21)
        self.tfrv_spinBox_21.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_21.setMaximum(100)
        self.tfrv_spinBox_21.setObjectName("tfrv_spinBox_21")
        self.gridLayout_21.addWidget(self.tfrv_spinBox_21, 8, 8, 1, 1)
        self.flat_comboBox_21 = QtWidgets.QComboBox(self.widget_21)
        self.flat_comboBox_21.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_21.setObjectName("flat_comboBox_21")
        self.flat_comboBox_21.addItem("")
        self.flat_comboBox_21.addItem("")
        self.gridLayout_21.addWidget(self.flat_comboBox_21, 10, 7, 1, 2)
        self.thermal_v_spinBox_21 = QtWidgets.QSpinBox(self.widget_21)
        self.thermal_v_spinBox_21.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_21.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_21.setMaximum(100)
        self.thermal_v_spinBox_21.setObjectName("thermal_v_spinBox_21")
        self.gridLayout_21.addWidget(self.thermal_v_spinBox_21, 9, 3, 1, 1)
        self.fixe_comboBox_21 = QtWidgets.QComboBox(self.widget_21)
        self.fixe_comboBox_21.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_21.setObjectName("fixe_comboBox_21")
        self.fixe_comboBox_21.addItem("")
        self.fixe_comboBox_21.addItem("")
        self.gridLayout_21.addWidget(self.fixe_comboBox_21, 10, 3, 1, 1)
        self.func_cycle_21 = QtWidgets.QLabel(self.widget_21)
        self.func_cycle_21.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_21.setObjectName("func_cycle_21")
        self.gridLayout_21.addWidget(self.func_cycle_21, 9, 5, 1, 1)
        self.thermal_v_21 = QtWidgets.QLabel(self.widget_21)
        self.thermal_v_21.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_21.setObjectName("thermal_v_21")
        self.gridLayout_21.addWidget(self.thermal_v_21, 9, 0, 1, 3)
        self.w1start_timeEdit_21 = QtWidgets.QTimeEdit(self.widget_21)
        self.w1start_timeEdit_21.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_21.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_21.setObjectName("w1start_timeEdit_21")
        self.gridLayout_21.addWidget(self.w1start_timeEdit_21, 4, 3, 1, 1)
        self.w2end_21 = QtWidgets.QLabel(self.widget_21)
        self.w2end_21.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_21.setObjectName("w2end_21")
        self.gridLayout_21.addWidget(self.w2end_21, 5, 5, 1, 1)
        self.w2start_21 = QtWidgets.QLabel(self.widget_21)
        self.w2start_21.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_21.setObjectName("w2start_21")
        self.gridLayout_21.addWidget(self.w2start_21, 5, 0, 1, 2)
        self.w1end_timeEdit_21 = QtWidgets.QTimeEdit(self.widget_21)
        self.w1end_timeEdit_21.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_21.setObjectName("w1end_timeEdit_21")
        self.gridLayout_21.addWidget(self.w1end_timeEdit_21, 4, 6, 1, 2)
        self.w2start_timeEdit_21 = QtWidgets.QTimeEdit(self.widget_21)
        self.w2start_timeEdit_21.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_21.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_21.setObjectName("w2start_timeEdit_21")
        self.gridLayout_21.addWidget(self.w2start_timeEdit_21, 5, 3, 1, 1)
        self.w3start_21 = QtWidgets.QLabel(self.widget_21)
        self.w3start_21.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_21.setObjectName("w3start_21")
        self.gridLayout_21.addWidget(self.w3start_21, 6, 0, 1, 3)
        self.w1end_21 = QtWidgets.QLabel(self.widget_21)
        self.w1end_21.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_21.setObjectName("w1end_21")
        self.gridLayout_21.addWidget(self.w1end_21, 4, 5, 1, 1)
        self.w3end_21 = QtWidgets.QLabel(self.widget_21)
        self.w3end_21.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_21.setObjectName("w3end_21")
        self.gridLayout_21.addWidget(self.w3end_21, 6, 5, 1, 1)
        self.w2end_timeEdit_21 = QtWidgets.QTimeEdit(self.widget_21)
        self.w2end_timeEdit_21.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_21.setObjectName("w2end_timeEdit_21")
        self.gridLayout_21.addWidget(self.w2end_timeEdit_21, 5, 6, 1, 2)
        self.w3start_timeEdit_21 = QtWidgets.QTimeEdit(self.widget_21)
        self.w3start_timeEdit_21.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_21.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_21.setObjectName("w3start_timeEdit_21")
        self.gridLayout_21.addWidget(self.w3start_timeEdit_21, 6, 3, 1, 1)
        self.w3end_timeEdit_21 = QtWidgets.QTimeEdit(self.widget_21)
        self.w3end_timeEdit_21.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_21.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_21.setObjectName("w3end_timeEdit_21")
        self.gridLayout_21.addWidget(self.w3end_timeEdit_21, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_21)
        self.horizontallayout_22 = QtWidgets.QHBoxLayout()
        self.horizontallayout_22.setObjectName("horizontallayout_22")
        self.appliancename_label_22 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_22.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_22.setFont(font)
        self.appliancename_label_22.setObjectName("appliancename_label_22")
        self.horizontallayout_22.addWidget(self.appliancename_label_22)
        self.appliancename_lineEdit_22 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_22.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_22.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_22.setObjectName("appliancename_lineEdit_22")
        self.horizontallayout_22.addWidget(self.appliancename_lineEdit_22)
        self.Togglebutton_22 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_22.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_22.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_22.setObjectName("Togglebutton_22")
        self.horizontallayout_22.addWidget(self.Togglebutton_22)
        self.verticalLayout.addLayout(self.horizontallayout_22)
        self.widget_22 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_22.setPalette(palette)
        self.widget_22.setTabletTracking(False)
        self.widget_22.setAutoFillBackground(False)
        self.widget_22.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_22.setObjectName("widget_22")
        self.gridLayout_22 = QtWidgets.QGridLayout(self.widget_22)
        self.gridLayout_22.setObjectName("gridLayout_22")
        spacerItem84 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_22.addItem(spacerItem84, 3, 5, 1, 3)
        spacerItem85 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_22.addItem(spacerItem85, 7, 5, 1, 3)
        spacerItem86 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_22.addItem(spacerItem86, 3, 0, 1, 4)
        self.line_44 = QtWidgets.QFrame(self.widget_22)
        self.line_44.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_44.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_44.setObjectName("line_44")
        self.gridLayout_22.addWidget(self.line_44, 0, 4, 3, 1)
        self.power_22 = QtWidgets.QLabel(self.widget_22)
        self.power_22.setMinimumSize(QtCore.QSize(0, 31))
        self.power_22.setObjectName("power_22")
        self.gridLayout_22.addWidget(self.power_22, 0, 5, 1, 1)
        self.number_22 = QtWidgets.QLabel(self.widget_22)
        self.number_22.setMinimumSize(QtCore.QSize(151, 31))
        self.number_22.setObjectName("number_22")
        self.gridLayout_22.addWidget(self.number_22, 0, 0, 1, 3)
        self.power_spinBox_22 = QtWidgets.QSpinBox(self.widget_22)
        self.power_spinBox_22.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_22.setMaximum(999999999)
        self.power_spinBox_22.setObjectName("power_spinBox_22")
        self.gridLayout_22.addWidget(self.power_spinBox_22, 0, 6, 1, 3)
        self.number_spinBox_22 = QtWidgets.QSpinBox(self.widget_22)
        self.number_spinBox_22.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_22.setMinimum(1)
        self.number_spinBox_22.setMaximum(999999999)
        self.number_spinBox_22.setProperty("value", 1)
        self.number_spinBox_22.setObjectName("number_spinBox_22")
        self.gridLayout_22.addWidget(self.number_spinBox_22, 0, 3, 1, 1)
        self.r_var_spinBox_22 = QtWidgets.QSpinBox(self.widget_22)
        self.r_var_spinBox_22.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_22.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_22.setMaximum(100)
        self.r_var_spinBox_22.setObjectName("r_var_spinBox_22")
        self.gridLayout_22.addWidget(self.r_var_spinBox_22, 8, 3, 1, 1)
        self.line_45 = QtWidgets.QFrame(self.widget_22)
        self.line_45.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_45.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_45.setObjectName("line_45")
        self.gridLayout_22.addWidget(self.line_45, 8, 4, 3, 1)
        self.wd_we_comboBox_22 = QtWidgets.QComboBox(self.widget_22)
        self.wd_we_comboBox_22.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_22.setObjectName("wd_we_comboBox_22")
        self.wd_we_comboBox_22.addItem("")
        self.wd_we_comboBox_22.addItem("")
        self.wd_we_comboBox_22.addItem("")
        self.gridLayout_22.addWidget(self.wd_we_comboBox_22, 2, 6, 1, 3)
        self.num_windows_spinBox_22 = QtWidgets.QSpinBox(self.widget_22)
        self.num_windows_spinBox_22.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_22.setMinimum(1)
        self.num_windows_spinBox_22.setMaximum(3)
        self.num_windows_spinBox_22.setObjectName("num_windows_spinBox_22")
        self.gridLayout_22.addWidget(self.num_windows_spinBox_22, 1, 8, 1, 1)
        self.num_windows_22 = QtWidgets.QLabel(self.widget_22)
        self.num_windows_22.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_22.setObjectName("num_windows_22")
        self.gridLayout_22.addWidget(self.num_windows_22, 1, 5, 1, 3)
        self.w1start_22 = QtWidgets.QLabel(self.widget_22)
        self.w1start_22.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_22.setObjectName("w1start_22")
        self.gridLayout_22.addWidget(self.w1start_22, 4, 0, 1, 1)
        self.function_time_spinBox_22 = QtWidgets.QSpinBox(self.widget_22)
        self.function_time_spinBox_22.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_22.setMaximum(1440)
        self.function_time_spinBox_22.setProperty("value", 0)
        self.function_time_spinBox_22.setObjectName("function_time_spinBox_22")
        self.gridLayout_22.addWidget(self.function_time_spinBox_22, 1, 3, 1, 1)
        self.label_72 = QtWidgets.QLabel(self.widget_22)
        self.label_72.setObjectName("label_72")
        self.gridLayout_22.addWidget(self.label_72, 6, 4, 1, 1)
        self.label_73 = QtWidgets.QLabel(self.widget_22)
        self.label_73.setObjectName("label_73")
        self.gridLayout_22.addWidget(self.label_73, 4, 4, 1, 1)
        self.wd_we_22 = QtWidgets.QLabel(self.widget_22)
        self.wd_we_22.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_22.setObjectName("wd_we_22")
        self.gridLayout_22.addWidget(self.wd_we_22, 2, 5, 1, 1)
        self.function_time_22 = QtWidgets.QLabel(self.widget_22)
        self.function_time_22.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_22.setObjectName("function_time_22")
        self.gridLayout_22.addWidget(self.function_time_22, 1, 0, 1, 3)
        self.label_74 = QtWidgets.QLabel(self.widget_22)
        self.label_74.setObjectName("label_74")
        self.gridLayout_22.addWidget(self.label_74, 5, 4, 1, 1)
        self.r_var_22 = QtWidgets.QLabel(self.widget_22)
        self.r_var_22.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_22.setObjectName("r_var_22")
        self.gridLayout_22.addWidget(self.r_var_22, 8, 0, 1, 3)
        self.occationaluse_22 = QtWidgets.QLabel(self.widget_22)
        self.occationaluse_22.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_22.setObjectName("occationaluse_22")
        self.gridLayout_22.addWidget(self.occationaluse_22, 2, 0, 1, 1)
        spacerItem87 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_22.addItem(spacerItem87, 7, 0, 1, 4)
        self.occationaluse_spinBox_22 = QtWidgets.QSpinBox(self.widget_22)
        self.occationaluse_spinBox_22.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_22.setMinimum(1)
        self.occationaluse_spinBox_22.setMaximum(100)
        self.occationaluse_spinBox_22.setProperty("value", 100)
        self.occationaluse_spinBox_22.setObjectName("occationaluse_spinBox_22")
        self.gridLayout_22.addWidget(self.occationaluse_spinBox_22, 2, 3, 1, 1)
        self.func_cycle_spinBox_22 = QtWidgets.QSpinBox(self.widget_22)
        self.func_cycle_spinBox_22.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_22.setMaximum(1440)
        self.func_cycle_spinBox_22.setProperty("value", 1)
        self.func_cycle_spinBox_22.setObjectName("func_cycle_spinBox_22")
        self.gridLayout_22.addWidget(self.func_cycle_spinBox_22, 9, 7, 1, 2)
        self.fixed_22 = QtWidgets.QLabel(self.widget_22)
        self.fixed_22.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_22.setObjectName("fixed_22")
        self.gridLayout_22.addWidget(self.fixed_22, 10, 0, 1, 1)
        self.tfrv_22 = QtWidgets.QLabel(self.widget_22)
        self.tfrv_22.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_22.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_22.setObjectName("tfrv_22")
        self.gridLayout_22.addWidget(self.tfrv_22, 8, 5, 1, 2)
        self.flat_22 = QtWidgets.QLabel(self.widget_22)
        self.flat_22.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_22.setObjectName("flat_22")
        self.gridLayout_22.addWidget(self.flat_22, 10, 5, 1, 1)
        self.tfrv_spinBox_22 = QtWidgets.QSpinBox(self.widget_22)
        self.tfrv_spinBox_22.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_22.setMaximum(100)
        self.tfrv_spinBox_22.setObjectName("tfrv_spinBox_22")
        self.gridLayout_22.addWidget(self.tfrv_spinBox_22, 8, 8, 1, 1)
        self.flat_comboBox_22 = QtWidgets.QComboBox(self.widget_22)
        self.flat_comboBox_22.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_22.setObjectName("flat_comboBox_22")
        self.flat_comboBox_22.addItem("")
        self.flat_comboBox_22.addItem("")
        self.gridLayout_22.addWidget(self.flat_comboBox_22, 10, 7, 1, 2)
        self.thermal_v_spinBox_22 = QtWidgets.QSpinBox(self.widget_22)
        self.thermal_v_spinBox_22.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_22.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_22.setMaximum(100)
        self.thermal_v_spinBox_22.setObjectName("thermal_v_spinBox_22")
        self.gridLayout_22.addWidget(self.thermal_v_spinBox_22, 9, 3, 1, 1)
        self.fixe_comboBox_22 = QtWidgets.QComboBox(self.widget_22)
        self.fixe_comboBox_22.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_22.setObjectName("fixe_comboBox_22")
        self.fixe_comboBox_22.addItem("")
        self.fixe_comboBox_22.addItem("")
        self.gridLayout_22.addWidget(self.fixe_comboBox_22, 10, 3, 1, 1)
        self.func_cycle_22 = QtWidgets.QLabel(self.widget_22)
        self.func_cycle_22.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_22.setObjectName("func_cycle_22")
        self.gridLayout_22.addWidget(self.func_cycle_22, 9, 5, 1, 1)
        self.thermal_v_22 = QtWidgets.QLabel(self.widget_22)
        self.thermal_v_22.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_22.setObjectName("thermal_v_22")
        self.gridLayout_22.addWidget(self.thermal_v_22, 9, 0, 1, 3)
        self.w1start_timeEdit_22 = QtWidgets.QTimeEdit(self.widget_22)
        self.w1start_timeEdit_22.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_22.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_22.setObjectName("w1start_timeEdit_22")
        self.gridLayout_22.addWidget(self.w1start_timeEdit_22, 4, 3, 1, 1)
        self.w2end_22 = QtWidgets.QLabel(self.widget_22)
        self.w2end_22.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_22.setObjectName("w2end_22")
        self.gridLayout_22.addWidget(self.w2end_22, 5, 5, 1, 1)
        self.w2start_22 = QtWidgets.QLabel(self.widget_22)
        self.w2start_22.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_22.setObjectName("w2start_22")
        self.gridLayout_22.addWidget(self.w2start_22, 5, 0, 1, 2)
        self.w1end_timeEdit_22 = QtWidgets.QTimeEdit(self.widget_22)
        self.w1end_timeEdit_22.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_22.setObjectName("w1end_timeEdit_22")
        self.gridLayout_22.addWidget(self.w1end_timeEdit_22, 4, 6, 1, 2)
        self.w2start_timeEdit_22 = QtWidgets.QTimeEdit(self.widget_22)
        self.w2start_timeEdit_22.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_22.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_22.setObjectName("w2start_timeEdit_22")
        self.gridLayout_22.addWidget(self.w2start_timeEdit_22, 5, 3, 1, 1)
        self.w3start_22 = QtWidgets.QLabel(self.widget_22)
        self.w3start_22.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_22.setObjectName("w3start_22")
        self.gridLayout_22.addWidget(self.w3start_22, 6, 0, 1, 3)
        self.w1end_22 = QtWidgets.QLabel(self.widget_22)
        self.w1end_22.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_22.setObjectName("w1end_22")
        self.gridLayout_22.addWidget(self.w1end_22, 4, 5, 1, 1)
        self.w3end_22 = QtWidgets.QLabel(self.widget_22)
        self.w3end_22.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_22.setObjectName("w3end_22")
        self.gridLayout_22.addWidget(self.w3end_22, 6, 5, 1, 1)
        self.w2end_timeEdit_22 = QtWidgets.QTimeEdit(self.widget_22)
        self.w2end_timeEdit_22.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_22.setObjectName("w2end_timeEdit_22")
        self.gridLayout_22.addWidget(self.w2end_timeEdit_22, 5, 6, 1, 2)
        self.w3start_timeEdit_22 = QtWidgets.QTimeEdit(self.widget_22)
        self.w3start_timeEdit_22.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_22.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_22.setObjectName("w3start_timeEdit_22")
        self.gridLayout_22.addWidget(self.w3start_timeEdit_22, 6, 3, 1, 1)
        self.w3end_timeEdit_22 = QtWidgets.QTimeEdit(self.widget_22)
        self.w3end_timeEdit_22.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_22.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_22.setObjectName("w3end_timeEdit_22")
        self.gridLayout_22.addWidget(self.w3end_timeEdit_22, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_22)
        self.horizontallayout_23 = QtWidgets.QHBoxLayout()
        self.horizontallayout_23.setObjectName("horizontallayout_23")
        self.appliancename_label_23 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_23.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_23.setFont(font)
        self.appliancename_label_23.setObjectName("appliancename_label_23")
        self.horizontallayout_23.addWidget(self.appliancename_label_23)
        self.appliancename_lineEdit_23 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_23.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_23.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_23.setObjectName("appliancename_lineEdit_23")
        self.horizontallayout_23.addWidget(self.appliancename_lineEdit_23)
        self.Togglebutton_23 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_23.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_23.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_23.setObjectName("Togglebutton_23")
        self.horizontallayout_23.addWidget(self.Togglebutton_23)
        self.verticalLayout.addLayout(self.horizontallayout_23)
        self.widget_23 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_23.setPalette(palette)
        self.widget_23.setTabletTracking(False)
        self.widget_23.setAutoFillBackground(False)
        self.widget_23.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_23.setObjectName("widget_23")
        self.gridLayout_23 = QtWidgets.QGridLayout(self.widget_23)
        self.gridLayout_23.setObjectName("gridLayout_23")
        spacerItem88 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_23.addItem(spacerItem88, 3, 5, 1, 3)
        spacerItem89 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_23.addItem(spacerItem89, 7, 5, 1, 3)
        spacerItem90 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_23.addItem(spacerItem90, 3, 0, 1, 4)
        self.line_46 = QtWidgets.QFrame(self.widget_23)
        self.line_46.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_46.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_46.setObjectName("line_46")
        self.gridLayout_23.addWidget(self.line_46, 0, 4, 3, 1)
        self.power_23 = QtWidgets.QLabel(self.widget_23)
        self.power_23.setMinimumSize(QtCore.QSize(0, 31))
        self.power_23.setObjectName("power_23")
        self.gridLayout_23.addWidget(self.power_23, 0, 5, 1, 1)
        self.number_23 = QtWidgets.QLabel(self.widget_23)
        self.number_23.setMinimumSize(QtCore.QSize(151, 31))
        self.number_23.setObjectName("number_23")
        self.gridLayout_23.addWidget(self.number_23, 0, 0, 1, 3)
        self.power_spinBox_23 = QtWidgets.QSpinBox(self.widget_23)
        self.power_spinBox_23.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_23.setMaximum(999999999)
        self.power_spinBox_23.setObjectName("power_spinBox_23")
        self.gridLayout_23.addWidget(self.power_spinBox_23, 0, 6, 1, 3)
        self.number_spinBox_23 = QtWidgets.QSpinBox(self.widget_23)
        self.number_spinBox_23.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_23.setMinimum(1)
        self.number_spinBox_23.setMaximum(999999999)
        self.number_spinBox_23.setProperty("value", 1)
        self.number_spinBox_23.setObjectName("number_spinBox_23")
        self.gridLayout_23.addWidget(self.number_spinBox_23, 0, 3, 1, 1)
        self.r_var_spinBox_23 = QtWidgets.QSpinBox(self.widget_23)
        self.r_var_spinBox_23.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_23.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_23.setMaximum(100)
        self.r_var_spinBox_23.setObjectName("r_var_spinBox_23")
        self.gridLayout_23.addWidget(self.r_var_spinBox_23, 8, 3, 1, 1)
        self.line_47 = QtWidgets.QFrame(self.widget_23)
        self.line_47.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_47.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_47.setObjectName("line_47")
        self.gridLayout_23.addWidget(self.line_47, 8, 4, 3, 1)
        self.wd_we_comboBox_23 = QtWidgets.QComboBox(self.widget_23)
        self.wd_we_comboBox_23.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_23.setObjectName("wd_we_comboBox_23")
        self.wd_we_comboBox_23.addItem("")
        self.wd_we_comboBox_23.addItem("")
        self.wd_we_comboBox_23.addItem("")
        self.gridLayout_23.addWidget(self.wd_we_comboBox_23, 2, 6, 1, 3)
        self.num_windows_spinBox_23 = QtWidgets.QSpinBox(self.widget_23)
        self.num_windows_spinBox_23.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_23.setMinimum(1)
        self.num_windows_spinBox_23.setMaximum(3)
        self.num_windows_spinBox_23.setObjectName("num_windows_spinBox_23")
        self.gridLayout_23.addWidget(self.num_windows_spinBox_23, 1, 8, 1, 1)
        self.num_windows_23 = QtWidgets.QLabel(self.widget_23)
        self.num_windows_23.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_23.setObjectName("num_windows_23")
        self.gridLayout_23.addWidget(self.num_windows_23, 1, 5, 1, 3)
        self.w1start_23 = QtWidgets.QLabel(self.widget_23)
        self.w1start_23.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_23.setObjectName("w1start_23")
        self.gridLayout_23.addWidget(self.w1start_23, 4, 0, 1, 1)
        self.function_time_spinBox_23 = QtWidgets.QSpinBox(self.widget_23)
        self.function_time_spinBox_23.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_23.setMaximum(1440)
        self.function_time_spinBox_23.setProperty("value", 0)
        self.function_time_spinBox_23.setObjectName("function_time_spinBox_23")
        self.gridLayout_23.addWidget(self.function_time_spinBox_23, 1, 3, 1, 1)
        self.label_75 = QtWidgets.QLabel(self.widget_23)
        self.label_75.setObjectName("label_75")
        self.gridLayout_23.addWidget(self.label_75, 6, 4, 1, 1)
        self.label_76 = QtWidgets.QLabel(self.widget_23)
        self.label_76.setObjectName("label_76")
        self.gridLayout_23.addWidget(self.label_76, 4, 4, 1, 1)
        self.wd_we_23 = QtWidgets.QLabel(self.widget_23)
        self.wd_we_23.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_23.setObjectName("wd_we_23")
        self.gridLayout_23.addWidget(self.wd_we_23, 2, 5, 1, 1)
        self.function_time_23 = QtWidgets.QLabel(self.widget_23)
        self.function_time_23.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_23.setObjectName("function_time_23")
        self.gridLayout_23.addWidget(self.function_time_23, 1, 0, 1, 3)
        self.label_77 = QtWidgets.QLabel(self.widget_23)
        self.label_77.setObjectName("label_77")
        self.gridLayout_23.addWidget(self.label_77, 5, 4, 1, 1)
        self.r_var_23 = QtWidgets.QLabel(self.widget_23)
        self.r_var_23.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_23.setObjectName("r_var_23")
        self.gridLayout_23.addWidget(self.r_var_23, 8, 0, 1, 3)
        self.occationaluse_23 = QtWidgets.QLabel(self.widget_23)
        self.occationaluse_23.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_23.setObjectName("occationaluse_23")
        self.gridLayout_23.addWidget(self.occationaluse_23, 2, 0, 1, 1)
        spacerItem91 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_23.addItem(spacerItem91, 7, 0, 1, 4)
        self.occationaluse_spinBox_23 = QtWidgets.QSpinBox(self.widget_23)
        self.occationaluse_spinBox_23.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_23.setMinimum(1)
        self.occationaluse_spinBox_23.setMaximum(100)
        self.occationaluse_spinBox_23.setProperty("value", 100)
        self.occationaluse_spinBox_23.setObjectName("occationaluse_spinBox_23")
        self.gridLayout_23.addWidget(self.occationaluse_spinBox_23, 2, 3, 1, 1)
        self.func_cycle_spinBox_23 = QtWidgets.QSpinBox(self.widget_23)
        self.func_cycle_spinBox_23.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_23.setMaximum(1440)
        self.func_cycle_spinBox_23.setProperty("value", 1)
        self.func_cycle_spinBox_23.setObjectName("func_cycle_spinBox_23")
        self.gridLayout_23.addWidget(self.func_cycle_spinBox_23, 9, 7, 1, 2)
        self.fixed_23 = QtWidgets.QLabel(self.widget_23)
        self.fixed_23.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_23.setObjectName("fixed_23")
        self.gridLayout_23.addWidget(self.fixed_23, 10, 0, 1, 1)
        self.tfrv_23 = QtWidgets.QLabel(self.widget_23)
        self.tfrv_23.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_23.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_23.setObjectName("tfrv_23")
        self.gridLayout_23.addWidget(self.tfrv_23, 8, 5, 1, 2)
        self.flat_23 = QtWidgets.QLabel(self.widget_23)
        self.flat_23.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_23.setObjectName("flat_23")
        self.gridLayout_23.addWidget(self.flat_23, 10, 5, 1, 1)
        self.tfrv_spinBox_23 = QtWidgets.QSpinBox(self.widget_23)
        self.tfrv_spinBox_23.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_23.setMaximum(100)
        self.tfrv_spinBox_23.setObjectName("tfrv_spinBox_23")
        self.gridLayout_23.addWidget(self.tfrv_spinBox_23, 8, 8, 1, 1)
        self.flat_comboBox_23 = QtWidgets.QComboBox(self.widget_23)
        self.flat_comboBox_23.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_23.setObjectName("flat_comboBox_23")
        self.flat_comboBox_23.addItem("")
        self.flat_comboBox_23.addItem("")
        self.gridLayout_23.addWidget(self.flat_comboBox_23, 10, 7, 1, 2)
        self.thermal_v_spinBox_23 = QtWidgets.QSpinBox(self.widget_23)
        self.thermal_v_spinBox_23.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_23.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_23.setMaximum(100)
        self.thermal_v_spinBox_23.setObjectName("thermal_v_spinBox_23")
        self.gridLayout_23.addWidget(self.thermal_v_spinBox_23, 9, 3, 1, 1)
        self.fixe_comboBox_23 = QtWidgets.QComboBox(self.widget_23)
        self.fixe_comboBox_23.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_23.setObjectName("fixe_comboBox_23")
        self.fixe_comboBox_23.addItem("")
        self.fixe_comboBox_23.addItem("")
        self.gridLayout_23.addWidget(self.fixe_comboBox_23, 10, 3, 1, 1)
        self.func_cycle_23 = QtWidgets.QLabel(self.widget_23)
        self.func_cycle_23.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_23.setObjectName("func_cycle_23")
        self.gridLayout_23.addWidget(self.func_cycle_23, 9, 5, 1, 1)
        self.thermal_v_23 = QtWidgets.QLabel(self.widget_23)
        self.thermal_v_23.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_23.setObjectName("thermal_v_23")
        self.gridLayout_23.addWidget(self.thermal_v_23, 9, 0, 1, 3)
        self.w1start_timeEdit_23 = QtWidgets.QTimeEdit(self.widget_23)
        self.w1start_timeEdit_23.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_23.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_23.setObjectName("w1start_timeEdit_23")
        self.gridLayout_23.addWidget(self.w1start_timeEdit_23, 4, 3, 1, 1)
        self.w2end_23 = QtWidgets.QLabel(self.widget_23)
        self.w2end_23.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_23.setObjectName("w2end_23")
        self.gridLayout_23.addWidget(self.w2end_23, 5, 5, 1, 1)
        self.w2start_23 = QtWidgets.QLabel(self.widget_23)
        self.w2start_23.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_23.setObjectName("w2start_23")
        self.gridLayout_23.addWidget(self.w2start_23, 5, 0, 1, 2)
        self.w1end_timeEdit_23 = QtWidgets.QTimeEdit(self.widget_23)
        self.w1end_timeEdit_23.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_23.setObjectName("w1end_timeEdit_23")
        self.gridLayout_23.addWidget(self.w1end_timeEdit_23, 4, 6, 1, 2)
        self.w2start_timeEdit_23 = QtWidgets.QTimeEdit(self.widget_23)
        self.w2start_timeEdit_23.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_23.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_23.setObjectName("w2start_timeEdit_23")
        self.gridLayout_23.addWidget(self.w2start_timeEdit_23, 5, 3, 1, 1)
        self.w3start_23 = QtWidgets.QLabel(self.widget_23)
        self.w3start_23.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_23.setObjectName("w3start_23")
        self.gridLayout_23.addWidget(self.w3start_23, 6, 0, 1, 3)
        self.w1end_23 = QtWidgets.QLabel(self.widget_23)
        self.w1end_23.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_23.setObjectName("w1end_23")
        self.gridLayout_23.addWidget(self.w1end_23, 4, 5, 1, 1)
        self.w3end_23 = QtWidgets.QLabel(self.widget_23)
        self.w3end_23.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_23.setObjectName("w3end_23")
        self.gridLayout_23.addWidget(self.w3end_23, 6, 5, 1, 1)
        self.w2end_timeEdit_23 = QtWidgets.QTimeEdit(self.widget_23)
        self.w2end_timeEdit_23.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_23.setObjectName("w2end_timeEdit_23")
        self.gridLayout_23.addWidget(self.w2end_timeEdit_23, 5, 6, 1, 2)
        self.w3start_timeEdit_23 = QtWidgets.QTimeEdit(self.widget_23)
        self.w3start_timeEdit_23.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_23.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_23.setObjectName("w3start_timeEdit_23")
        self.gridLayout_23.addWidget(self.w3start_timeEdit_23, 6, 3, 1, 1)
        self.w3end_timeEdit_23 = QtWidgets.QTimeEdit(self.widget_23)
        self.w3end_timeEdit_23.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_23.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_23.setObjectName("w3end_timeEdit_23")
        self.gridLayout_23.addWidget(self.w3end_timeEdit_23, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_23)
        self.horizontallayout_24 = QtWidgets.QHBoxLayout()
        self.horizontallayout_24.setObjectName("horizontallayout_24")
        self.appliancename_label_24 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_24.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_24.setFont(font)
        self.appliancename_label_24.setObjectName("appliancename_label_24")
        self.horizontallayout_24.addWidget(self.appliancename_label_24)
        self.appliancename_lineEdit_24 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_24.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_24.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_24.setObjectName("appliancename_lineEdit_24")
        self.horizontallayout_24.addWidget(self.appliancename_lineEdit_24)
        self.Togglebutton_24 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_24.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_24.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_24.setObjectName("Togglebutton_24")
        self.horizontallayout_24.addWidget(self.Togglebutton_24)
        self.verticalLayout.addLayout(self.horizontallayout_24)
        self.widget_24 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_24.setPalette(palette)
        self.widget_24.setTabletTracking(False)
        self.widget_24.setAutoFillBackground(False)
        self.widget_24.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_24.setObjectName("widget_24")
        self.gridLayout_24 = QtWidgets.QGridLayout(self.widget_24)
        self.gridLayout_24.setObjectName("gridLayout_24")
        spacerItem92 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_24.addItem(spacerItem92, 3, 5, 1, 3)
        spacerItem93 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_24.addItem(spacerItem93, 7, 5, 1, 3)
        spacerItem94 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_24.addItem(spacerItem94, 3, 0, 1, 4)
        self.line_48 = QtWidgets.QFrame(self.widget_24)
        self.line_48.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_48.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_48.setObjectName("line_48")
        self.gridLayout_24.addWidget(self.line_48, 0, 4, 3, 1)
        self.power_24 = QtWidgets.QLabel(self.widget_24)
        self.power_24.setMinimumSize(QtCore.QSize(0, 31))
        self.power_24.setObjectName("power_24")
        self.gridLayout_24.addWidget(self.power_24, 0, 5, 1, 1)
        self.number_24 = QtWidgets.QLabel(self.widget_24)
        self.number_24.setMinimumSize(QtCore.QSize(151, 31))
        self.number_24.setObjectName("number_24")
        self.gridLayout_24.addWidget(self.number_24, 0, 0, 1, 3)
        self.power_spinBox_24 = QtWidgets.QSpinBox(self.widget_24)
        self.power_spinBox_24.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_24.setMaximum(999999999)
        self.power_spinBox_24.setObjectName("power_spinBox_24")
        self.gridLayout_24.addWidget(self.power_spinBox_24, 0, 6, 1, 3)
        self.number_spinBox_24 = QtWidgets.QSpinBox(self.widget_24)
        self.number_spinBox_24.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_24.setMinimum(1)
        self.number_spinBox_24.setMaximum(999999999)
        self.number_spinBox_24.setProperty("value", 1)
        self.number_spinBox_24.setObjectName("number_spinBox_24")
        self.gridLayout_24.addWidget(self.number_spinBox_24, 0, 3, 1, 1)
        self.r_var_spinBox_24 = QtWidgets.QSpinBox(self.widget_24)
        self.r_var_spinBox_24.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_24.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_24.setMaximum(100)
        self.r_var_spinBox_24.setObjectName("r_var_spinBox_24")
        self.gridLayout_24.addWidget(self.r_var_spinBox_24, 8, 3, 1, 1)
        self.line_49 = QtWidgets.QFrame(self.widget_24)
        self.line_49.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_49.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_49.setObjectName("line_49")
        self.gridLayout_24.addWidget(self.line_49, 8, 4, 3, 1)
        self.wd_we_comboBox_24 = QtWidgets.QComboBox(self.widget_24)
        self.wd_we_comboBox_24.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_24.setObjectName("wd_we_comboBox_24")
        self.wd_we_comboBox_24.addItem("")
        self.wd_we_comboBox_24.addItem("")
        self.wd_we_comboBox_24.addItem("")
        self.gridLayout_24.addWidget(self.wd_we_comboBox_24, 2, 6, 1, 3)
        self.num_windows_spinBox_24 = QtWidgets.QSpinBox(self.widget_24)
        self.num_windows_spinBox_24.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_24.setMinimum(1)
        self.num_windows_spinBox_24.setMaximum(3)
        self.num_windows_spinBox_24.setObjectName("num_windows_spinBox_24")
        self.gridLayout_24.addWidget(self.num_windows_spinBox_24, 1, 8, 1, 1)
        self.num_windows_24 = QtWidgets.QLabel(self.widget_24)
        self.num_windows_24.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_24.setObjectName("num_windows_24")
        self.gridLayout_24.addWidget(self.num_windows_24, 1, 5, 1, 3)
        self.w1start_24 = QtWidgets.QLabel(self.widget_24)
        self.w1start_24.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_24.setObjectName("w1start_24")
        self.gridLayout_24.addWidget(self.w1start_24, 4, 0, 1, 1)
        self.function_time_spinBox_24 = QtWidgets.QSpinBox(self.widget_24)
        self.function_time_spinBox_24.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_24.setMaximum(1440)
        self.function_time_spinBox_24.setProperty("value", 0)
        self.function_time_spinBox_24.setObjectName("function_time_spinBox_24")
        self.gridLayout_24.addWidget(self.function_time_spinBox_24, 1, 3, 1, 1)
        self.label_78 = QtWidgets.QLabel(self.widget_24)
        self.label_78.setObjectName("label_78")
        self.gridLayout_24.addWidget(self.label_78, 6, 4, 1, 1)
        self.label_79 = QtWidgets.QLabel(self.widget_24)
        self.label_79.setObjectName("label_79")
        self.gridLayout_24.addWidget(self.label_79, 4, 4, 1, 1)
        self.wd_we_24 = QtWidgets.QLabel(self.widget_24)
        self.wd_we_24.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_24.setObjectName("wd_we_24")
        self.gridLayout_24.addWidget(self.wd_we_24, 2, 5, 1, 1)
        self.function_time_24 = QtWidgets.QLabel(self.widget_24)
        self.function_time_24.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_24.setObjectName("function_time_24")
        self.gridLayout_24.addWidget(self.function_time_24, 1, 0, 1, 3)
        self.label_80 = QtWidgets.QLabel(self.widget_24)
        self.label_80.setObjectName("label_80")
        self.gridLayout_24.addWidget(self.label_80, 5, 4, 1, 1)
        self.r_var_24 = QtWidgets.QLabel(self.widget_24)
        self.r_var_24.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_24.setObjectName("r_var_24")
        self.gridLayout_24.addWidget(self.r_var_24, 8, 0, 1, 3)
        self.occationaluse_24 = QtWidgets.QLabel(self.widget_24)
        self.occationaluse_24.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_24.setObjectName("occationaluse_24")
        self.gridLayout_24.addWidget(self.occationaluse_24, 2, 0, 1, 1)
        spacerItem95 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_24.addItem(spacerItem95, 7, 0, 1, 4)
        self.occationaluse_spinBox_24 = QtWidgets.QSpinBox(self.widget_24)
        self.occationaluse_spinBox_24.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_24.setMinimum(1)
        self.occationaluse_spinBox_24.setMaximum(100)
        self.occationaluse_spinBox_24.setProperty("value", 100)
        self.occationaluse_spinBox_24.setObjectName("occationaluse_spinBox_24")
        self.gridLayout_24.addWidget(self.occationaluse_spinBox_24, 2, 3, 1, 1)
        self.func_cycle_spinBox_24 = QtWidgets.QSpinBox(self.widget_24)
        self.func_cycle_spinBox_24.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_24.setMaximum(1440)
        self.func_cycle_spinBox_24.setProperty("value", 1)
        self.func_cycle_spinBox_24.setObjectName("func_cycle_spinBox_24")
        self.gridLayout_24.addWidget(self.func_cycle_spinBox_24, 9, 7, 1, 2)
        self.fixed_24 = QtWidgets.QLabel(self.widget_24)
        self.fixed_24.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_24.setObjectName("fixed_24")
        self.gridLayout_24.addWidget(self.fixed_24, 10, 0, 1, 1)
        self.tfrv_24 = QtWidgets.QLabel(self.widget_24)
        self.tfrv_24.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_24.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_24.setObjectName("tfrv_24")
        self.gridLayout_24.addWidget(self.tfrv_24, 8, 5, 1, 2)
        self.flat_24 = QtWidgets.QLabel(self.widget_24)
        self.flat_24.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_24.setObjectName("flat_24")
        self.gridLayout_24.addWidget(self.flat_24, 10, 5, 1, 1)
        self.tfrv_spinBox_24 = QtWidgets.QSpinBox(self.widget_24)
        self.tfrv_spinBox_24.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_24.setMaximum(100)
        self.tfrv_spinBox_24.setObjectName("tfrv_spinBox_24")
        self.gridLayout_24.addWidget(self.tfrv_spinBox_24, 8, 8, 1, 1)
        self.flat_comboBox_24 = QtWidgets.QComboBox(self.widget_24)
        self.flat_comboBox_24.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_24.setObjectName("flat_comboBox_24")
        self.flat_comboBox_24.addItem("")
        self.flat_comboBox_24.addItem("")
        self.gridLayout_24.addWidget(self.flat_comboBox_24, 10, 7, 1, 2)
        self.thermal_v_spinBox_24 = QtWidgets.QSpinBox(self.widget_24)
        self.thermal_v_spinBox_24.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_24.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_24.setMaximum(100)
        self.thermal_v_spinBox_24.setObjectName("thermal_v_spinBox_24")
        self.gridLayout_24.addWidget(self.thermal_v_spinBox_24, 9, 3, 1, 1)
        self.fixe_comboBox_24 = QtWidgets.QComboBox(self.widget_24)
        self.fixe_comboBox_24.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_24.setObjectName("fixe_comboBox_24")
        self.fixe_comboBox_24.addItem("")
        self.fixe_comboBox_24.addItem("")
        self.gridLayout_24.addWidget(self.fixe_comboBox_24, 10, 3, 1, 1)
        self.func_cycle_24 = QtWidgets.QLabel(self.widget_24)
        self.func_cycle_24.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_24.setObjectName("func_cycle_24")
        self.gridLayout_24.addWidget(self.func_cycle_24, 9, 5, 1, 1)
        self.thermal_v_24 = QtWidgets.QLabel(self.widget_24)
        self.thermal_v_24.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_24.setObjectName("thermal_v_24")
        self.gridLayout_24.addWidget(self.thermal_v_24, 9, 0, 1, 3)
        self.w1start_timeEdit_24 = QtWidgets.QTimeEdit(self.widget_24)
        self.w1start_timeEdit_24.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_24.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_24.setObjectName("w1start_timeEdit_24")
        self.gridLayout_24.addWidget(self.w1start_timeEdit_24, 4, 3, 1, 1)
        self.w2end_24 = QtWidgets.QLabel(self.widget_24)
        self.w2end_24.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_24.setObjectName("w2end_24")
        self.gridLayout_24.addWidget(self.w2end_24, 5, 5, 1, 1)
        self.w2start_24 = QtWidgets.QLabel(self.widget_24)
        self.w2start_24.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_24.setObjectName("w2start_24")
        self.gridLayout_24.addWidget(self.w2start_24, 5, 0, 1, 2)
        self.w1end_timeEdit_24 = QtWidgets.QTimeEdit(self.widget_24)
        self.w1end_timeEdit_24.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_24.setObjectName("w1end_timeEdit_24")
        self.gridLayout_24.addWidget(self.w1end_timeEdit_24, 4, 6, 1, 2)
        self.w2start_timeEdit_24 = QtWidgets.QTimeEdit(self.widget_24)
        self.w2start_timeEdit_24.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_24.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_24.setObjectName("w2start_timeEdit_24")
        self.gridLayout_24.addWidget(self.w2start_timeEdit_24, 5, 3, 1, 1)
        self.w3start_24 = QtWidgets.QLabel(self.widget_24)
        self.w3start_24.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_24.setObjectName("w3start_24")
        self.gridLayout_24.addWidget(self.w3start_24, 6, 0, 1, 3)
        self.w1end_24 = QtWidgets.QLabel(self.widget_24)
        self.w1end_24.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_24.setObjectName("w1end_24")
        self.gridLayout_24.addWidget(self.w1end_24, 4, 5, 1, 1)
        self.w3end_24 = QtWidgets.QLabel(self.widget_24)
        self.w3end_24.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_24.setObjectName("w3end_24")
        self.gridLayout_24.addWidget(self.w3end_24, 6, 5, 1, 1)
        self.w2end_timeEdit_24 = QtWidgets.QTimeEdit(self.widget_24)
        self.w2end_timeEdit_24.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_24.setObjectName("w2end_timeEdit_24")
        self.gridLayout_24.addWidget(self.w2end_timeEdit_24, 5, 6, 1, 2)
        self.w3start_timeEdit_24 = QtWidgets.QTimeEdit(self.widget_24)
        self.w3start_timeEdit_24.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_24.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_24.setObjectName("w3start_timeEdit_24")
        self.gridLayout_24.addWidget(self.w3start_timeEdit_24, 6, 3, 1, 1)
        self.w3end_timeEdit_24 = QtWidgets.QTimeEdit(self.widget_24)
        self.w3end_timeEdit_24.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_24.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_24.setObjectName("w3end_timeEdit_24")
        self.gridLayout_24.addWidget(self.w3end_timeEdit_24, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_24)
        self.horizontallayout_25 = QtWidgets.QHBoxLayout()
        self.horizontallayout_25.setObjectName("horizontallayout_25")
        self.appliancename_label_25 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_25.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_25.setFont(font)
        self.appliancename_label_25.setObjectName("appliancename_label_25")
        self.horizontallayout_25.addWidget(self.appliancename_label_25)
        self.appliancename_lineEdit_25 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_25.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_25.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_25.setObjectName("appliancename_lineEdit_25")
        self.horizontallayout_25.addWidget(self.appliancename_lineEdit_25)
        self.Togglebutton_25 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_25.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_25.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_25.setObjectName("Togglebutton_25")
        self.horizontallayout_25.addWidget(self.Togglebutton_25)
        self.verticalLayout.addLayout(self.horizontallayout_25)
        self.widget_25 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_25.setPalette(palette)
        self.widget_25.setTabletTracking(False)
        self.widget_25.setAutoFillBackground(False)
        self.widget_25.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_25.setObjectName("widget_25")
        self.gridLayout_25 = QtWidgets.QGridLayout(self.widget_25)
        self.gridLayout_25.setObjectName("gridLayout_25")
        spacerItem96 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_25.addItem(spacerItem96, 3, 5, 1, 3)
        spacerItem97 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_25.addItem(spacerItem97, 7, 5, 1, 3)
        spacerItem98 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_25.addItem(spacerItem98, 3, 0, 1, 4)
        self.line_50 = QtWidgets.QFrame(self.widget_25)
        self.line_50.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_50.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_50.setObjectName("line_50")
        self.gridLayout_25.addWidget(self.line_50, 0, 4, 3, 1)
        self.power_25 = QtWidgets.QLabel(self.widget_25)
        self.power_25.setMinimumSize(QtCore.QSize(0, 31))
        self.power_25.setObjectName("power_25")
        self.gridLayout_25.addWidget(self.power_25, 0, 5, 1, 1)
        self.number_25 = QtWidgets.QLabel(self.widget_25)
        self.number_25.setMinimumSize(QtCore.QSize(151, 31))
        self.number_25.setObjectName("number_25")
        self.gridLayout_25.addWidget(self.number_25, 0, 0, 1, 3)
        self.power_spinBox_25 = QtWidgets.QSpinBox(self.widget_25)
        self.power_spinBox_25.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_25.setMaximum(999999999)
        self.power_spinBox_25.setObjectName("power_spinBox_25")
        self.gridLayout_25.addWidget(self.power_spinBox_25, 0, 6, 1, 3)
        self.number_spinBox_25 = QtWidgets.QSpinBox(self.widget_25)
        self.number_spinBox_25.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_25.setMinimum(1)
        self.number_spinBox_25.setMaximum(999999999)
        self.number_spinBox_25.setProperty("value", 1)
        self.number_spinBox_25.setObjectName("number_spinBox_25")
        self.gridLayout_25.addWidget(self.number_spinBox_25, 0, 3, 1, 1)
        self.r_var_spinBox_25 = QtWidgets.QSpinBox(self.widget_25)
        self.r_var_spinBox_25.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_25.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_25.setMaximum(100)
        self.r_var_spinBox_25.setObjectName("r_var_spinBox_25")
        self.gridLayout_25.addWidget(self.r_var_spinBox_25, 8, 3, 1, 1)
        self.line_51 = QtWidgets.QFrame(self.widget_25)
        self.line_51.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_51.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_51.setObjectName("line_51")
        self.gridLayout_25.addWidget(self.line_51, 8, 4, 3, 1)
        self.wd_we_comboBox_25 = QtWidgets.QComboBox(self.widget_25)
        self.wd_we_comboBox_25.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_25.setObjectName("wd_we_comboBox_25")
        self.wd_we_comboBox_25.addItem("")
        self.wd_we_comboBox_25.addItem("")
        self.wd_we_comboBox_25.addItem("")
        self.gridLayout_25.addWidget(self.wd_we_comboBox_25, 2, 6, 1, 3)
        self.num_windows_spinBox_25 = QtWidgets.QSpinBox(self.widget_25)
        self.num_windows_spinBox_25.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_25.setMinimum(1)
        self.num_windows_spinBox_25.setMaximum(3)
        self.num_windows_spinBox_25.setObjectName("num_windows_spinBox_25")
        self.gridLayout_25.addWidget(self.num_windows_spinBox_25, 1, 8, 1, 1)
        self.num_windows_25 = QtWidgets.QLabel(self.widget_25)
        self.num_windows_25.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_25.setObjectName("num_windows_25")
        self.gridLayout_25.addWidget(self.num_windows_25, 1, 5, 1, 3)
        self.w1start_25 = QtWidgets.QLabel(self.widget_25)
        self.w1start_25.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_25.setObjectName("w1start_25")
        self.gridLayout_25.addWidget(self.w1start_25, 4, 0, 1, 1)
        self.function_time_spinBox_25 = QtWidgets.QSpinBox(self.widget_25)
        self.function_time_spinBox_25.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_25.setMaximum(1440)
        self.function_time_spinBox_25.setProperty("value", 0)
        self.function_time_spinBox_25.setObjectName("function_time_spinBox_25")
        self.gridLayout_25.addWidget(self.function_time_spinBox_25, 1, 3, 1, 1)
        self.label_81 = QtWidgets.QLabel(self.widget_25)
        self.label_81.setObjectName("label_81")
        self.gridLayout_25.addWidget(self.label_81, 6, 4, 1, 1)
        self.label_82 = QtWidgets.QLabel(self.widget_25)
        self.label_82.setObjectName("label_82")
        self.gridLayout_25.addWidget(self.label_82, 4, 4, 1, 1)
        self.wd_we_25 = QtWidgets.QLabel(self.widget_25)
        self.wd_we_25.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_25.setObjectName("wd_we_25")
        self.gridLayout_25.addWidget(self.wd_we_25, 2, 5, 1, 1)
        self.function_time_25 = QtWidgets.QLabel(self.widget_25)
        self.function_time_25.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_25.setObjectName("function_time_25")
        self.gridLayout_25.addWidget(self.function_time_25, 1, 0, 1, 3)
        self.label_83 = QtWidgets.QLabel(self.widget_25)
        self.label_83.setObjectName("label_83")
        self.gridLayout_25.addWidget(self.label_83, 5, 4, 1, 1)
        self.r_var_25 = QtWidgets.QLabel(self.widget_25)
        self.r_var_25.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_25.setObjectName("r_var_25")
        self.gridLayout_25.addWidget(self.r_var_25, 8, 0, 1, 3)
        self.occationaluse_25 = QtWidgets.QLabel(self.widget_25)
        self.occationaluse_25.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_25.setObjectName("occationaluse_25")
        self.gridLayout_25.addWidget(self.occationaluse_25, 2, 0, 1, 1)
        spacerItem99 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_25.addItem(spacerItem99, 7, 0, 1, 4)
        self.occationaluse_spinBox_25 = QtWidgets.QSpinBox(self.widget_25)
        self.occationaluse_spinBox_25.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_25.setMinimum(1)
        self.occationaluse_spinBox_25.setMaximum(100)
        self.occationaluse_spinBox_25.setProperty("value", 100)
        self.occationaluse_spinBox_25.setObjectName("occationaluse_spinBox_25")
        self.gridLayout_25.addWidget(self.occationaluse_spinBox_25, 2, 3, 1, 1)
        self.func_cycle_spinBox_25 = QtWidgets.QSpinBox(self.widget_25)
        self.func_cycle_spinBox_25.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_25.setMaximum(1440)
        self.func_cycle_spinBox_25.setProperty("value", 1)
        self.func_cycle_spinBox_25.setObjectName("func_cycle_spinBox_25")
        self.gridLayout_25.addWidget(self.func_cycle_spinBox_25, 9, 7, 1, 2)
        self.fixed_25 = QtWidgets.QLabel(self.widget_25)
        self.fixed_25.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_25.setObjectName("fixed_25")
        self.gridLayout_25.addWidget(self.fixed_25, 10, 0, 1, 1)
        self.tfrv_25 = QtWidgets.QLabel(self.widget_25)
        self.tfrv_25.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_25.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_25.setObjectName("tfrv_25")
        self.gridLayout_25.addWidget(self.tfrv_25, 8, 5, 1, 2)
        self.flat_25 = QtWidgets.QLabel(self.widget_25)
        self.flat_25.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_25.setObjectName("flat_25")
        self.gridLayout_25.addWidget(self.flat_25, 10, 5, 1, 1)
        self.tfrv_spinBox_25 = QtWidgets.QSpinBox(self.widget_25)
        self.tfrv_spinBox_25.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_25.setMaximum(100)
        self.tfrv_spinBox_25.setObjectName("tfrv_spinBox_25")
        self.gridLayout_25.addWidget(self.tfrv_spinBox_25, 8, 8, 1, 1)
        self.flat_comboBox_25 = QtWidgets.QComboBox(self.widget_25)
        self.flat_comboBox_25.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_25.setObjectName("flat_comboBox_25")
        self.flat_comboBox_25.addItem("")
        self.flat_comboBox_25.addItem("")
        self.gridLayout_25.addWidget(self.flat_comboBox_25, 10, 7, 1, 2)
        self.thermal_v_spinBox_25 = QtWidgets.QSpinBox(self.widget_25)
        self.thermal_v_spinBox_25.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_25.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_25.setMaximum(100)
        self.thermal_v_spinBox_25.setObjectName("thermal_v_spinBox_25")
        self.gridLayout_25.addWidget(self.thermal_v_spinBox_25, 9, 3, 1, 1)
        self.fixe_comboBox_25 = QtWidgets.QComboBox(self.widget_25)
        self.fixe_comboBox_25.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_25.setObjectName("fixe_comboBox_25")
        self.fixe_comboBox_25.addItem("")
        self.fixe_comboBox_25.addItem("")
        self.gridLayout_25.addWidget(self.fixe_comboBox_25, 10, 3, 1, 1)
        self.func_cycle_25 = QtWidgets.QLabel(self.widget_25)
        self.func_cycle_25.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_25.setObjectName("func_cycle_25")
        self.gridLayout_25.addWidget(self.func_cycle_25, 9, 5, 1, 1)
        self.thermal_v_25 = QtWidgets.QLabel(self.widget_25)
        self.thermal_v_25.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_25.setObjectName("thermal_v_25")
        self.gridLayout_25.addWidget(self.thermal_v_25, 9, 0, 1, 3)
        self.w1start_timeEdit_25 = QtWidgets.QTimeEdit(self.widget_25)
        self.w1start_timeEdit_25.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_25.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_25.setObjectName("w1start_timeEdit_25")
        self.gridLayout_25.addWidget(self.w1start_timeEdit_25, 4, 3, 1, 1)
        self.w2end_25 = QtWidgets.QLabel(self.widget_25)
        self.w2end_25.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_25.setObjectName("w2end_25")
        self.gridLayout_25.addWidget(self.w2end_25, 5, 5, 1, 1)
        self.w2start_25 = QtWidgets.QLabel(self.widget_25)
        self.w2start_25.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_25.setObjectName("w2start_25")
        self.gridLayout_25.addWidget(self.w2start_25, 5, 0, 1, 2)
        self.w1end_timeEdit_25 = QtWidgets.QTimeEdit(self.widget_25)
        self.w1end_timeEdit_25.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_25.setObjectName("w1end_timeEdit_25")
        self.gridLayout_25.addWidget(self.w1end_timeEdit_25, 4, 6, 1, 2)
        self.w2start_timeEdit_25 = QtWidgets.QTimeEdit(self.widget_25)
        self.w2start_timeEdit_25.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_25.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_25.setObjectName("w2start_timeEdit_25")
        self.gridLayout_25.addWidget(self.w2start_timeEdit_25, 5, 3, 1, 1)
        self.w3start_25 = QtWidgets.QLabel(self.widget_25)
        self.w3start_25.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_25.setObjectName("w3start_25")
        self.gridLayout_25.addWidget(self.w3start_25, 6, 0, 1, 3)
        self.w1end_25 = QtWidgets.QLabel(self.widget_25)
        self.w1end_25.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_25.setObjectName("w1end_25")
        self.gridLayout_25.addWidget(self.w1end_25, 4, 5, 1, 1)
        self.w3end_25 = QtWidgets.QLabel(self.widget_25)
        self.w3end_25.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_25.setObjectName("w3end_25")
        self.gridLayout_25.addWidget(self.w3end_25, 6, 5, 1, 1)
        self.w2end_timeEdit_25 = QtWidgets.QTimeEdit(self.widget_25)
        self.w2end_timeEdit_25.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_25.setObjectName("w2end_timeEdit_25")
        self.gridLayout_25.addWidget(self.w2end_timeEdit_25, 5, 6, 1, 2)
        self.w3start_timeEdit_25 = QtWidgets.QTimeEdit(self.widget_25)
        self.w3start_timeEdit_25.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_25.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_25.setObjectName("w3start_timeEdit_25")
        self.gridLayout_25.addWidget(self.w3start_timeEdit_25, 6, 3, 1, 1)
        self.w3end_timeEdit_25 = QtWidgets.QTimeEdit(self.widget_25)
        self.w3end_timeEdit_25.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_25.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_25.setObjectName("w3end_timeEdit_25")
        self.gridLayout_25.addWidget(self.w3end_timeEdit_25, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_25)
        self.horizontallayout_26 = QtWidgets.QHBoxLayout()
        self.horizontallayout_26.setObjectName("horizontallayout_26")
        self.appliancename_label_26 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_26.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_26.setFont(font)
        self.appliancename_label_26.setObjectName("appliancename_label_26")
        self.horizontallayout_26.addWidget(self.appliancename_label_26)
        self.appliancename_lineEdit_26 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_26.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_26.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_26.setObjectName("appliancename_lineEdit_26")
        self.horizontallayout_26.addWidget(self.appliancename_lineEdit_26)
        self.Togglebutton_26 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_26.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_26.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_26.setObjectName("Togglebutton_26")
        self.horizontallayout_26.addWidget(self.Togglebutton_26)
        self.verticalLayout.addLayout(self.horizontallayout_26)
        self.widget_26 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_26.setPalette(palette)
        self.widget_26.setTabletTracking(False)
        self.widget_26.setAutoFillBackground(False)
        self.widget_26.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_26.setObjectName("widget_26")
        self.gridLayout_26 = QtWidgets.QGridLayout(self.widget_26)
        self.gridLayout_26.setObjectName("gridLayout_26")
        spacerItem100 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_26.addItem(spacerItem100, 3, 5, 1, 3)
        spacerItem101 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_26.addItem(spacerItem101, 7, 5, 1, 3)
        spacerItem102 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_26.addItem(spacerItem102, 3, 0, 1, 4)
        self.line_52 = QtWidgets.QFrame(self.widget_26)
        self.line_52.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_52.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_52.setObjectName("line_52")
        self.gridLayout_26.addWidget(self.line_52, 0, 4, 3, 1)
        self.power_26 = QtWidgets.QLabel(self.widget_26)
        self.power_26.setMinimumSize(QtCore.QSize(0, 31))
        self.power_26.setObjectName("power_26")
        self.gridLayout_26.addWidget(self.power_26, 0, 5, 1, 1)
        self.number_26 = QtWidgets.QLabel(self.widget_26)
        self.number_26.setMinimumSize(QtCore.QSize(151, 31))
        self.number_26.setObjectName("number_26")
        self.gridLayout_26.addWidget(self.number_26, 0, 0, 1, 3)
        self.power_spinBox_26 = QtWidgets.QSpinBox(self.widget_26)
        self.power_spinBox_26.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_26.setMaximum(999999999)
        self.power_spinBox_26.setObjectName("power_spinBox_26")
        self.gridLayout_26.addWidget(self.power_spinBox_26, 0, 6, 1, 3)
        self.number_spinBox_26 = QtWidgets.QSpinBox(self.widget_26)
        self.number_spinBox_26.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_26.setMinimum(1)
        self.number_spinBox_26.setMaximum(999999999)
        self.number_spinBox_26.setProperty("value", 1)
        self.number_spinBox_26.setObjectName("number_spinBox_26")
        self.gridLayout_26.addWidget(self.number_spinBox_26, 0, 3, 1, 1)
        self.r_var_spinBox_26 = QtWidgets.QSpinBox(self.widget_26)
        self.r_var_spinBox_26.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_26.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_26.setMaximum(100)
        self.r_var_spinBox_26.setObjectName("r_var_spinBox_26")
        self.gridLayout_26.addWidget(self.r_var_spinBox_26, 8, 3, 1, 1)
        self.line_53 = QtWidgets.QFrame(self.widget_26)
        self.line_53.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_53.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_53.setObjectName("line_53")
        self.gridLayout_26.addWidget(self.line_53, 8, 4, 3, 1)
        self.wd_we_comboBox_26 = QtWidgets.QComboBox(self.widget_26)
        self.wd_we_comboBox_26.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_26.setObjectName("wd_we_comboBox_26")
        self.wd_we_comboBox_26.addItem("")
        self.wd_we_comboBox_26.addItem("")
        self.wd_we_comboBox_26.addItem("")
        self.gridLayout_26.addWidget(self.wd_we_comboBox_26, 2, 6, 1, 3)
        self.num_windows_spinBox_26 = QtWidgets.QSpinBox(self.widget_26)
        self.num_windows_spinBox_26.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_26.setMinimum(1)
        self.num_windows_spinBox_26.setMaximum(3)
        self.num_windows_spinBox_26.setObjectName("num_windows_spinBox_26")
        self.gridLayout_26.addWidget(self.num_windows_spinBox_26, 1, 8, 1, 1)
        self.num_windows_26 = QtWidgets.QLabel(self.widget_26)
        self.num_windows_26.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_26.setObjectName("num_windows_26")
        self.gridLayout_26.addWidget(self.num_windows_26, 1, 5, 1, 3)
        self.w1start_26 = QtWidgets.QLabel(self.widget_26)
        self.w1start_26.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_26.setObjectName("w1start_26")
        self.gridLayout_26.addWidget(self.w1start_26, 4, 0, 1, 1)
        self.function_time_spinBox_26 = QtWidgets.QSpinBox(self.widget_26)
        self.function_time_spinBox_26.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_26.setMaximum(1440)
        self.function_time_spinBox_26.setProperty("value", 0)
        self.function_time_spinBox_26.setObjectName("function_time_spinBox_26")
        self.gridLayout_26.addWidget(self.function_time_spinBox_26, 1, 3, 1, 1)
        self.label_84 = QtWidgets.QLabel(self.widget_26)
        self.label_84.setObjectName("label_84")
        self.gridLayout_26.addWidget(self.label_84, 6, 4, 1, 1)
        self.label_85 = QtWidgets.QLabel(self.widget_26)
        self.label_85.setObjectName("label_85")
        self.gridLayout_26.addWidget(self.label_85, 4, 4, 1, 1)
        self.wd_we_26 = QtWidgets.QLabel(self.widget_26)
        self.wd_we_26.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_26.setObjectName("wd_we_26")
        self.gridLayout_26.addWidget(self.wd_we_26, 2, 5, 1, 1)
        self.function_time_26 = QtWidgets.QLabel(self.widget_26)
        self.function_time_26.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_26.setObjectName("function_time_26")
        self.gridLayout_26.addWidget(self.function_time_26, 1, 0, 1, 3)
        self.label_86 = QtWidgets.QLabel(self.widget_26)
        self.label_86.setObjectName("label_86")
        self.gridLayout_26.addWidget(self.label_86, 5, 4, 1, 1)
        self.r_var_26 = QtWidgets.QLabel(self.widget_26)
        self.r_var_26.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_26.setObjectName("r_var_26")
        self.gridLayout_26.addWidget(self.r_var_26, 8, 0, 1, 3)
        self.occationaluse_26 = QtWidgets.QLabel(self.widget_26)
        self.occationaluse_26.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_26.setObjectName("occationaluse_26")
        self.gridLayout_26.addWidget(self.occationaluse_26, 2, 0, 1, 1)
        spacerItem103 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_26.addItem(spacerItem103, 7, 0, 1, 4)
        self.occationaluse_spinBox_26 = QtWidgets.QSpinBox(self.widget_26)
        self.occationaluse_spinBox_26.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_26.setMinimum(1)
        self.occationaluse_spinBox_26.setMaximum(100)
        self.occationaluse_spinBox_26.setProperty("value", 100)
        self.occationaluse_spinBox_26.setObjectName("occationaluse_spinBox_26")
        self.gridLayout_26.addWidget(self.occationaluse_spinBox_26, 2, 3, 1, 1)
        self.func_cycle_spinBox_26 = QtWidgets.QSpinBox(self.widget_26)
        self.func_cycle_spinBox_26.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_26.setMaximum(1440)
        self.func_cycle_spinBox_26.setProperty("value", 1)
        self.func_cycle_spinBox_26.setObjectName("func_cycle_spinBox_26")
        self.gridLayout_26.addWidget(self.func_cycle_spinBox_26, 9, 7, 1, 2)
        self.fixed_26 = QtWidgets.QLabel(self.widget_26)
        self.fixed_26.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_26.setObjectName("fixed_26")
        self.gridLayout_26.addWidget(self.fixed_26, 10, 0, 1, 1)
        self.tfrv_26 = QtWidgets.QLabel(self.widget_26)
        self.tfrv_26.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_26.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_26.setObjectName("tfrv_26")
        self.gridLayout_26.addWidget(self.tfrv_26, 8, 5, 1, 2)
        self.flat_26 = QtWidgets.QLabel(self.widget_26)
        self.flat_26.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_26.setObjectName("flat_26")
        self.gridLayout_26.addWidget(self.flat_26, 10, 5, 1, 1)
        self.tfrv_spinBox_26 = QtWidgets.QSpinBox(self.widget_26)
        self.tfrv_spinBox_26.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_26.setMaximum(100)
        self.tfrv_spinBox_26.setObjectName("tfrv_spinBox_26")
        self.gridLayout_26.addWidget(self.tfrv_spinBox_26, 8, 8, 1, 1)
        self.flat_comboBox_26 = QtWidgets.QComboBox(self.widget_26)
        self.flat_comboBox_26.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_26.setObjectName("flat_comboBox_26")
        self.flat_comboBox_26.addItem("")
        self.flat_comboBox_26.addItem("")
        self.gridLayout_26.addWidget(self.flat_comboBox_26, 10, 7, 1, 2)
        self.thermal_v_spinBox_26 = QtWidgets.QSpinBox(self.widget_26)
        self.thermal_v_spinBox_26.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_26.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_26.setMaximum(100)
        self.thermal_v_spinBox_26.setObjectName("thermal_v_spinBox_26")
        self.gridLayout_26.addWidget(self.thermal_v_spinBox_26, 9, 3, 1, 1)
        self.fixe_comboBox_26 = QtWidgets.QComboBox(self.widget_26)
        self.fixe_comboBox_26.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_26.setObjectName("fixe_comboBox_26")
        self.fixe_comboBox_26.addItem("")
        self.fixe_comboBox_26.addItem("")
        self.gridLayout_26.addWidget(self.fixe_comboBox_26, 10, 3, 1, 1)
        self.func_cycle_26 = QtWidgets.QLabel(self.widget_26)
        self.func_cycle_26.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_26.setObjectName("func_cycle_26")
        self.gridLayout_26.addWidget(self.func_cycle_26, 9, 5, 1, 1)
        self.thermal_v_26 = QtWidgets.QLabel(self.widget_26)
        self.thermal_v_26.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_26.setObjectName("thermal_v_26")
        self.gridLayout_26.addWidget(self.thermal_v_26, 9, 0, 1, 3)
        self.w1start_timeEdit_26 = QtWidgets.QTimeEdit(self.widget_26)
        self.w1start_timeEdit_26.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_26.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_26.setObjectName("w1start_timeEdit_26")
        self.gridLayout_26.addWidget(self.w1start_timeEdit_26, 4, 3, 1, 1)
        self.w2end_26 = QtWidgets.QLabel(self.widget_26)
        self.w2end_26.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_26.setObjectName("w2end_26")
        self.gridLayout_26.addWidget(self.w2end_26, 5, 5, 1, 1)
        self.w2start_26 = QtWidgets.QLabel(self.widget_26)
        self.w2start_26.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_26.setObjectName("w2start_26")
        self.gridLayout_26.addWidget(self.w2start_26, 5, 0, 1, 2)
        self.w1end_timeEdit_26 = QtWidgets.QTimeEdit(self.widget_26)
        self.w1end_timeEdit_26.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_26.setObjectName("w1end_timeEdit_26")
        self.gridLayout_26.addWidget(self.w1end_timeEdit_26, 4, 6, 1, 2)
        self.w2start_timeEdit_26 = QtWidgets.QTimeEdit(self.widget_26)
        self.w2start_timeEdit_26.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_26.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_26.setObjectName("w2start_timeEdit_26")
        self.gridLayout_26.addWidget(self.w2start_timeEdit_26, 5, 3, 1, 1)
        self.w3start_26 = QtWidgets.QLabel(self.widget_26)
        self.w3start_26.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_26.setObjectName("w3start_26")
        self.gridLayout_26.addWidget(self.w3start_26, 6, 0, 1, 3)
        self.w1end_26 = QtWidgets.QLabel(self.widget_26)
        self.w1end_26.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_26.setObjectName("w1end_26")
        self.gridLayout_26.addWidget(self.w1end_26, 4, 5, 1, 1)
        self.w3end_26 = QtWidgets.QLabel(self.widget_26)
        self.w3end_26.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_26.setObjectName("w3end_26")
        self.gridLayout_26.addWidget(self.w3end_26, 6, 5, 1, 1)
        self.w2end_timeEdit_26 = QtWidgets.QTimeEdit(self.widget_26)
        self.w2end_timeEdit_26.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_26.setObjectName("w2end_timeEdit_26")
        self.gridLayout_26.addWidget(self.w2end_timeEdit_26, 5, 6, 1, 2)
        self.w3start_timeEdit_26 = QtWidgets.QTimeEdit(self.widget_26)
        self.w3start_timeEdit_26.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_26.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_26.setObjectName("w3start_timeEdit_26")
        self.gridLayout_26.addWidget(self.w3start_timeEdit_26, 6, 3, 1, 1)
        self.w3end_timeEdit_26 = QtWidgets.QTimeEdit(self.widget_26)
        self.w3end_timeEdit_26.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_26.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_26.setObjectName("w3end_timeEdit_26")
        self.gridLayout_26.addWidget(self.w3end_timeEdit_26, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_26)
        self.horizontallayout_27 = QtWidgets.QHBoxLayout()
        self.horizontallayout_27.setObjectName("horizontallayout_27")
        self.appliancename_label_27 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_27.setFont(font)
        self.appliancename_label_27.setObjectName("appliancename_label_27")
        self.horizontallayout_27.addWidget(self.appliancename_label_27)
        self.appliancename_lineEdit_27 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_27.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_27.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_27.setObjectName("appliancename_lineEdit_27")
        self.horizontallayout_27.addWidget(self.appliancename_lineEdit_27)
        self.Togglebutton_27 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_27.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_27.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_27.setObjectName("Togglebutton_27")
        self.horizontallayout_27.addWidget(self.Togglebutton_27)
        self.verticalLayout.addLayout(self.horizontallayout_27)
        self.widget_27 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_27.setPalette(palette)
        self.widget_27.setTabletTracking(False)
        self.widget_27.setAutoFillBackground(False)
        self.widget_27.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_27.setObjectName("widget_27")
        self.gridLayout_27 = QtWidgets.QGridLayout(self.widget_27)
        self.gridLayout_27.setObjectName("gridLayout_27")
        spacerItem104 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_27.addItem(spacerItem104, 3, 5, 1, 3)
        spacerItem105 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_27.addItem(spacerItem105, 7, 5, 1, 3)
        spacerItem106 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_27.addItem(spacerItem106, 3, 0, 1, 4)
        self.line_54 = QtWidgets.QFrame(self.widget_27)
        self.line_54.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_54.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_54.setObjectName("line_54")
        self.gridLayout_27.addWidget(self.line_54, 0, 4, 3, 1)
        self.power_27 = QtWidgets.QLabel(self.widget_27)
        self.power_27.setMinimumSize(QtCore.QSize(0, 31))
        self.power_27.setObjectName("power_27")
        self.gridLayout_27.addWidget(self.power_27, 0, 5, 1, 1)
        self.number_27 = QtWidgets.QLabel(self.widget_27)
        self.number_27.setMinimumSize(QtCore.QSize(151, 31))
        self.number_27.setObjectName("number_27")
        self.gridLayout_27.addWidget(self.number_27, 0, 0, 1, 3)
        self.power_spinBox_27 = QtWidgets.QSpinBox(self.widget_27)
        self.power_spinBox_27.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_27.setMaximum(999999999)
        self.power_spinBox_27.setObjectName("power_spinBox_27")
        self.gridLayout_27.addWidget(self.power_spinBox_27, 0, 6, 1, 3)
        self.number_spinBox_27 = QtWidgets.QSpinBox(self.widget_27)
        self.number_spinBox_27.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_27.setMinimum(1)
        self.number_spinBox_27.setMaximum(999999999)
        self.number_spinBox_27.setProperty("value", 1)
        self.number_spinBox_27.setObjectName("number_spinBox_27")
        self.gridLayout_27.addWidget(self.number_spinBox_27, 0, 3, 1, 1)
        self.r_var_spinBox_27 = QtWidgets.QSpinBox(self.widget_27)
        self.r_var_spinBox_27.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_27.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_27.setMaximum(100)
        self.r_var_spinBox_27.setObjectName("r_var_spinBox_27")
        self.gridLayout_27.addWidget(self.r_var_spinBox_27, 8, 3, 1, 1)
        self.line_55 = QtWidgets.QFrame(self.widget_27)
        self.line_55.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_55.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_55.setObjectName("line_55")
        self.gridLayout_27.addWidget(self.line_55, 8, 4, 3, 1)
        self.wd_we_comboBox_27 = QtWidgets.QComboBox(self.widget_27)
        self.wd_we_comboBox_27.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_27.setObjectName("wd_we_comboBox_27")
        self.wd_we_comboBox_27.addItem("")
        self.wd_we_comboBox_27.addItem("")
        self.wd_we_comboBox_27.addItem("")
        self.gridLayout_27.addWidget(self.wd_we_comboBox_27, 2, 6, 1, 3)
        self.num_windows_spinBox_27 = QtWidgets.QSpinBox(self.widget_27)
        self.num_windows_spinBox_27.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_27.setMinimum(1)
        self.num_windows_spinBox_27.setMaximum(3)
        self.num_windows_spinBox_27.setObjectName("num_windows_spinBox_27")
        self.gridLayout_27.addWidget(self.num_windows_spinBox_27, 1, 8, 1, 1)
        self.num_windows_27 = QtWidgets.QLabel(self.widget_27)
        self.num_windows_27.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_27.setObjectName("num_windows_27")
        self.gridLayout_27.addWidget(self.num_windows_27, 1, 5, 1, 3)
        self.w1start_27 = QtWidgets.QLabel(self.widget_27)
        self.w1start_27.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_27.setObjectName("w1start_27")
        self.gridLayout_27.addWidget(self.w1start_27, 4, 0, 1, 1)
        self.function_time_spinBox_27 = QtWidgets.QSpinBox(self.widget_27)
        self.function_time_spinBox_27.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_27.setMaximum(1440)
        self.function_time_spinBox_27.setProperty("value", 0)
        self.function_time_spinBox_27.setObjectName("function_time_spinBox_27")
        self.gridLayout_27.addWidget(self.function_time_spinBox_27, 1, 3, 1, 1)
        self.label_87 = QtWidgets.QLabel(self.widget_27)
        self.label_87.setObjectName("label_87")
        self.gridLayout_27.addWidget(self.label_87, 6, 4, 1, 1)
        self.label_88 = QtWidgets.QLabel(self.widget_27)
        self.label_88.setObjectName("label_88")
        self.gridLayout_27.addWidget(self.label_88, 4, 4, 1, 1)
        self.wd_we_27 = QtWidgets.QLabel(self.widget_27)
        self.wd_we_27.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_27.setObjectName("wd_we_27")
        self.gridLayout_27.addWidget(self.wd_we_27, 2, 5, 1, 1)
        self.function_time_27 = QtWidgets.QLabel(self.widget_27)
        self.function_time_27.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_27.setObjectName("function_time_27")
        self.gridLayout_27.addWidget(self.function_time_27, 1, 0, 1, 3)
        self.label_89 = QtWidgets.QLabel(self.widget_27)
        self.label_89.setObjectName("label_89")
        self.gridLayout_27.addWidget(self.label_89, 5, 4, 1, 1)
        self.r_var_27 = QtWidgets.QLabel(self.widget_27)
        self.r_var_27.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_27.setObjectName("r_var_27")
        self.gridLayout_27.addWidget(self.r_var_27, 8, 0, 1, 3)
        self.occationaluse_27 = QtWidgets.QLabel(self.widget_27)
        self.occationaluse_27.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_27.setObjectName("occationaluse_27")
        self.gridLayout_27.addWidget(self.occationaluse_27, 2, 0, 1, 1)
        spacerItem107 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_27.addItem(spacerItem107, 7, 0, 1, 4)
        self.occationaluse_spinBox_27 = QtWidgets.QSpinBox(self.widget_27)
        self.occationaluse_spinBox_27.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_27.setMinimum(1)
        self.occationaluse_spinBox_27.setMaximum(100)
        self.occationaluse_spinBox_27.setProperty("value", 100)
        self.occationaluse_spinBox_27.setObjectName("occationaluse_spinBox_27")
        self.gridLayout_27.addWidget(self.occationaluse_spinBox_27, 2, 3, 1, 1)
        self.func_cycle_spinBox_27 = QtWidgets.QSpinBox(self.widget_27)
        self.func_cycle_spinBox_27.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_27.setMaximum(1440)
        self.func_cycle_spinBox_27.setProperty("value", 1)
        self.func_cycle_spinBox_27.setObjectName("func_cycle_spinBox_27")
        self.gridLayout_27.addWidget(self.func_cycle_spinBox_27, 9, 7, 1, 2)
        self.fixed_27 = QtWidgets.QLabel(self.widget_27)
        self.fixed_27.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_27.setObjectName("fixed_27")
        self.gridLayout_27.addWidget(self.fixed_27, 10, 0, 1, 1)
        self.tfrv_27 = QtWidgets.QLabel(self.widget_27)
        self.tfrv_27.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_27.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_27.setObjectName("tfrv_27")
        self.gridLayout_27.addWidget(self.tfrv_27, 8, 5, 1, 2)
        self.flat_27 = QtWidgets.QLabel(self.widget_27)
        self.flat_27.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_27.setObjectName("flat_27")
        self.gridLayout_27.addWidget(self.flat_27, 10, 5, 1, 1)
        self.tfrv_spinBox_27 = QtWidgets.QSpinBox(self.widget_27)
        self.tfrv_spinBox_27.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_27.setMaximum(100)
        self.tfrv_spinBox_27.setObjectName("tfrv_spinBox_27")
        self.gridLayout_27.addWidget(self.tfrv_spinBox_27, 8, 8, 1, 1)
        self.flat_comboBox_27 = QtWidgets.QComboBox(self.widget_27)
        self.flat_comboBox_27.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_27.setObjectName("flat_comboBox_27")
        self.flat_comboBox_27.addItem("")
        self.flat_comboBox_27.addItem("")
        self.gridLayout_27.addWidget(self.flat_comboBox_27, 10, 7, 1, 2)
        self.thermal_v_spinBox_27 = QtWidgets.QSpinBox(self.widget_27)
        self.thermal_v_spinBox_27.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_27.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_27.setMaximum(100)
        self.thermal_v_spinBox_27.setObjectName("thermal_v_spinBox_27")
        self.gridLayout_27.addWidget(self.thermal_v_spinBox_27, 9, 3, 1, 1)
        self.fixe_comboBox_27 = QtWidgets.QComboBox(self.widget_27)
        self.fixe_comboBox_27.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_27.setObjectName("fixe_comboBox_27")
        self.fixe_comboBox_27.addItem("")
        self.fixe_comboBox_27.addItem("")
        self.gridLayout_27.addWidget(self.fixe_comboBox_27, 10, 3, 1, 1)
        self.func_cycle_27 = QtWidgets.QLabel(self.widget_27)
        self.func_cycle_27.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_27.setObjectName("func_cycle_27")
        self.gridLayout_27.addWidget(self.func_cycle_27, 9, 5, 1, 1)
        self.thermal_v_27 = QtWidgets.QLabel(self.widget_27)
        self.thermal_v_27.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_27.setObjectName("thermal_v_27")
        self.gridLayout_27.addWidget(self.thermal_v_27, 9, 0, 1, 3)
        self.w1start_timeEdit_27 = QtWidgets.QTimeEdit(self.widget_27)
        self.w1start_timeEdit_27.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_27.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_27.setObjectName("w1start_timeEdit_27")
        self.gridLayout_27.addWidget(self.w1start_timeEdit_27, 4, 3, 1, 1)
        self.w2end_27 = QtWidgets.QLabel(self.widget_27)
        self.w2end_27.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_27.setObjectName("w2end_27")
        self.gridLayout_27.addWidget(self.w2end_27, 5, 5, 1, 1)
        self.w2start_27 = QtWidgets.QLabel(self.widget_27)
        self.w2start_27.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_27.setObjectName("w2start_27")
        self.gridLayout_27.addWidget(self.w2start_27, 5, 0, 1, 2)
        self.w1end_timeEdit_27 = QtWidgets.QTimeEdit(self.widget_27)
        self.w1end_timeEdit_27.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_27.setObjectName("w1end_timeEdit_27")
        self.gridLayout_27.addWidget(self.w1end_timeEdit_27, 4, 6, 1, 2)
        self.w2start_timeEdit_27 = QtWidgets.QTimeEdit(self.widget_27)
        self.w2start_timeEdit_27.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_27.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_27.setObjectName("w2start_timeEdit_27")
        self.gridLayout_27.addWidget(self.w2start_timeEdit_27, 5, 3, 1, 1)
        self.w3start_27 = QtWidgets.QLabel(self.widget_27)
        self.w3start_27.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_27.setObjectName("w3start_27")
        self.gridLayout_27.addWidget(self.w3start_27, 6, 0, 1, 3)
        self.w1end_27 = QtWidgets.QLabel(self.widget_27)
        self.w1end_27.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_27.setObjectName("w1end_27")
        self.gridLayout_27.addWidget(self.w1end_27, 4, 5, 1, 1)
        self.w3end_27 = QtWidgets.QLabel(self.widget_27)
        self.w3end_27.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_27.setObjectName("w3end_27")
        self.gridLayout_27.addWidget(self.w3end_27, 6, 5, 1, 1)
        self.w2end_timeEdit_27 = QtWidgets.QTimeEdit(self.widget_27)
        self.w2end_timeEdit_27.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_27.setObjectName("w2end_timeEdit_27")
        self.gridLayout_27.addWidget(self.w2end_timeEdit_27, 5, 6, 1, 2)
        self.w3start_timeEdit_27 = QtWidgets.QTimeEdit(self.widget_27)
        self.w3start_timeEdit_27.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_27.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_27.setObjectName("w3start_timeEdit_27")
        self.gridLayout_27.addWidget(self.w3start_timeEdit_27, 6, 3, 1, 1)
        self.w3end_timeEdit_27 = QtWidgets.QTimeEdit(self.widget_27)
        self.w3end_timeEdit_27.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_27.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_27.setObjectName("w3end_timeEdit_27")
        self.gridLayout_27.addWidget(self.w3end_timeEdit_27, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_27)
        self.horizontallayout_28 = QtWidgets.QHBoxLayout()
        self.horizontallayout_28.setObjectName("horizontallayout_28")
        self.appliancename_label_28 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_28.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_28.setFont(font)
        self.appliancename_label_28.setObjectName("appliancename_label_28")
        self.horizontallayout_28.addWidget(self.appliancename_label_28)
        self.appliancename_lineEdit_28 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_28.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_28.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_28.setObjectName("appliancename_lineEdit_28")
        self.horizontallayout_28.addWidget(self.appliancename_lineEdit_28)
        self.Togglebutton_28 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_28.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_28.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_28.setObjectName("Togglebutton_28")
        self.horizontallayout_28.addWidget(self.Togglebutton_28)
        self.verticalLayout.addLayout(self.horizontallayout_28)
        self.widget_28 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_28.setPalette(palette)
        self.widget_28.setTabletTracking(False)
        self.widget_28.setAutoFillBackground(False)
        self.widget_28.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_28.setObjectName("widget_28")
        self.gridLayout_28 = QtWidgets.QGridLayout(self.widget_28)
        self.gridLayout_28.setObjectName("gridLayout_28")
        spacerItem108 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_28.addItem(spacerItem108, 3, 5, 1, 3)
        spacerItem109 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_28.addItem(spacerItem109, 7, 5, 1, 3)
        spacerItem110 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_28.addItem(spacerItem110, 3, 0, 1, 4)
        self.line_56 = QtWidgets.QFrame(self.widget_28)
        self.line_56.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_56.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_56.setObjectName("line_56")
        self.gridLayout_28.addWidget(self.line_56, 0, 4, 3, 1)
        self.power_28 = QtWidgets.QLabel(self.widget_28)
        self.power_28.setMinimumSize(QtCore.QSize(0, 31))
        self.power_28.setObjectName("power_28")
        self.gridLayout_28.addWidget(self.power_28, 0, 5, 1, 1)
        self.number_28 = QtWidgets.QLabel(self.widget_28)
        self.number_28.setMinimumSize(QtCore.QSize(151, 31))
        self.number_28.setObjectName("number_28")
        self.gridLayout_28.addWidget(self.number_28, 0, 0, 1, 3)
        self.power_spinBox_28 = QtWidgets.QSpinBox(self.widget_28)
        self.power_spinBox_28.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_28.setMaximum(999999999)
        self.power_spinBox_28.setObjectName("power_spinBox_28")
        self.gridLayout_28.addWidget(self.power_spinBox_28, 0, 6, 1, 3)
        self.number_spinBox_28 = QtWidgets.QSpinBox(self.widget_28)
        self.number_spinBox_28.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_28.setMinimum(1)
        self.number_spinBox_28.setMaximum(999999999)
        self.number_spinBox_28.setProperty("value", 1)
        self.number_spinBox_28.setObjectName("number_spinBox_28")
        self.gridLayout_28.addWidget(self.number_spinBox_28, 0, 3, 1, 1)
        self.r_var_spinBox_28 = QtWidgets.QSpinBox(self.widget_28)
        self.r_var_spinBox_28.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_28.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_28.setMaximum(100)
        self.r_var_spinBox_28.setObjectName("r_var_spinBox_28")
        self.gridLayout_28.addWidget(self.r_var_spinBox_28, 8, 3, 1, 1)
        self.line_57 = QtWidgets.QFrame(self.widget_28)
        self.line_57.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_57.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_57.setObjectName("line_57")
        self.gridLayout_28.addWidget(self.line_57, 8, 4, 3, 1)
        self.wd_we_comboBox_28 = QtWidgets.QComboBox(self.widget_28)
        self.wd_we_comboBox_28.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_28.setObjectName("wd_we_comboBox_28")
        self.wd_we_comboBox_28.addItem("")
        self.wd_we_comboBox_28.addItem("")
        self.wd_we_comboBox_28.addItem("")
        self.gridLayout_28.addWidget(self.wd_we_comboBox_28, 2, 6, 1, 3)
        self.num_windows_spinBox_28 = QtWidgets.QSpinBox(self.widget_28)
        self.num_windows_spinBox_28.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_28.setMinimum(1)
        self.num_windows_spinBox_28.setMaximum(3)
        self.num_windows_spinBox_28.setObjectName("num_windows_spinBox_28")
        self.gridLayout_28.addWidget(self.num_windows_spinBox_28, 1, 8, 1, 1)
        self.num_windows_28 = QtWidgets.QLabel(self.widget_28)
        self.num_windows_28.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_28.setObjectName("num_windows_28")
        self.gridLayout_28.addWidget(self.num_windows_28, 1, 5, 1, 3)
        self.w1start_28 = QtWidgets.QLabel(self.widget_28)
        self.w1start_28.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_28.setObjectName("w1start_28")
        self.gridLayout_28.addWidget(self.w1start_28, 4, 0, 1, 1)
        self.function_time_spinBox_28 = QtWidgets.QSpinBox(self.widget_28)
        self.function_time_spinBox_28.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_28.setMaximum(1440)
        self.function_time_spinBox_28.setProperty("value", 0)
        self.function_time_spinBox_28.setObjectName("function_time_spinBox_28")
        self.gridLayout_28.addWidget(self.function_time_spinBox_28, 1, 3, 1, 1)
        self.label_90 = QtWidgets.QLabel(self.widget_28)
        self.label_90.setObjectName("label_90")
        self.gridLayout_28.addWidget(self.label_90, 6, 4, 1, 1)
        self.label_91 = QtWidgets.QLabel(self.widget_28)
        self.label_91.setObjectName("label_91")
        self.gridLayout_28.addWidget(self.label_91, 4, 4, 1, 1)
        self.wd_we_28 = QtWidgets.QLabel(self.widget_28)
        self.wd_we_28.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_28.setObjectName("wd_we_28")
        self.gridLayout_28.addWidget(self.wd_we_28, 2, 5, 1, 1)
        self.function_time_28 = QtWidgets.QLabel(self.widget_28)
        self.function_time_28.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_28.setObjectName("function_time_28")
        self.gridLayout_28.addWidget(self.function_time_28, 1, 0, 1, 3)
        self.label_92 = QtWidgets.QLabel(self.widget_28)
        self.label_92.setObjectName("label_92")
        self.gridLayout_28.addWidget(self.label_92, 5, 4, 1, 1)
        self.r_var_28 = QtWidgets.QLabel(self.widget_28)
        self.r_var_28.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_28.setObjectName("r_var_28")
        self.gridLayout_28.addWidget(self.r_var_28, 8, 0, 1, 3)
        self.occationaluse_28 = QtWidgets.QLabel(self.widget_28)
        self.occationaluse_28.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_28.setObjectName("occationaluse_28")
        self.gridLayout_28.addWidget(self.occationaluse_28, 2, 0, 1, 1)
        spacerItem111 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_28.addItem(spacerItem111, 7, 0, 1, 4)
        self.occationaluse_spinBox_28 = QtWidgets.QSpinBox(self.widget_28)
        self.occationaluse_spinBox_28.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_28.setMinimum(1)
        self.occationaluse_spinBox_28.setMaximum(100)
        self.occationaluse_spinBox_28.setProperty("value", 100)
        self.occationaluse_spinBox_28.setObjectName("occationaluse_spinBox_28")
        self.gridLayout_28.addWidget(self.occationaluse_spinBox_28, 2, 3, 1, 1)
        self.func_cycle_spinBox_28 = QtWidgets.QSpinBox(self.widget_28)
        self.func_cycle_spinBox_28.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_28.setMaximum(1440)
        self.func_cycle_spinBox_28.setProperty("value", 1)
        self.func_cycle_spinBox_28.setObjectName("func_cycle_spinBox_28")
        self.gridLayout_28.addWidget(self.func_cycle_spinBox_28, 9, 7, 1, 2)
        self.fixed_28 = QtWidgets.QLabel(self.widget_28)
        self.fixed_28.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_28.setObjectName("fixed_28")
        self.gridLayout_28.addWidget(self.fixed_28, 10, 0, 1, 1)
        self.tfrv_28 = QtWidgets.QLabel(self.widget_28)
        self.tfrv_28.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_28.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_28.setObjectName("tfrv_28")
        self.gridLayout_28.addWidget(self.tfrv_28, 8, 5, 1, 2)
        self.flat_28 = QtWidgets.QLabel(self.widget_28)
        self.flat_28.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_28.setObjectName("flat_28")
        self.gridLayout_28.addWidget(self.flat_28, 10, 5, 1, 1)
        self.tfrv_spinBox_28 = QtWidgets.QSpinBox(self.widget_28)
        self.tfrv_spinBox_28.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_28.setMaximum(100)
        self.tfrv_spinBox_28.setObjectName("tfrv_spinBox_28")
        self.gridLayout_28.addWidget(self.tfrv_spinBox_28, 8, 8, 1, 1)
        self.flat_comboBox_28 = QtWidgets.QComboBox(self.widget_28)
        self.flat_comboBox_28.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_28.setObjectName("flat_comboBox_28")
        self.flat_comboBox_28.addItem("")
        self.flat_comboBox_28.addItem("")
        self.gridLayout_28.addWidget(self.flat_comboBox_28, 10, 7, 1, 2)
        self.thermal_v_spinBox_28 = QtWidgets.QSpinBox(self.widget_28)
        self.thermal_v_spinBox_28.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_28.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_28.setMaximum(100)
        self.thermal_v_spinBox_28.setObjectName("thermal_v_spinBox_28")
        self.gridLayout_28.addWidget(self.thermal_v_spinBox_28, 9, 3, 1, 1)
        self.fixe_comboBox_28 = QtWidgets.QComboBox(self.widget_28)
        self.fixe_comboBox_28.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_28.setObjectName("fixe_comboBox_28")
        self.fixe_comboBox_28.addItem("")
        self.fixe_comboBox_28.addItem("")
        self.gridLayout_28.addWidget(self.fixe_comboBox_28, 10, 3, 1, 1)
        self.func_cycle_28 = QtWidgets.QLabel(self.widget_28)
        self.func_cycle_28.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_28.setObjectName("func_cycle_28")
        self.gridLayout_28.addWidget(self.func_cycle_28, 9, 5, 1, 1)
        self.thermal_v_28 = QtWidgets.QLabel(self.widget_28)
        self.thermal_v_28.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_28.setObjectName("thermal_v_28")
        self.gridLayout_28.addWidget(self.thermal_v_28, 9, 0, 1, 3)
        self.w1start_timeEdit_28 = QtWidgets.QTimeEdit(self.widget_28)
        self.w1start_timeEdit_28.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_28.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_28.setObjectName("w1start_timeEdit_28")
        self.gridLayout_28.addWidget(self.w1start_timeEdit_28, 4, 3, 1, 1)
        self.w2end_28 = QtWidgets.QLabel(self.widget_28)
        self.w2end_28.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_28.setObjectName("w2end_28")
        self.gridLayout_28.addWidget(self.w2end_28, 5, 5, 1, 1)
        self.w2start_28 = QtWidgets.QLabel(self.widget_28)
        self.w2start_28.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_28.setObjectName("w2start_28")
        self.gridLayout_28.addWidget(self.w2start_28, 5, 0, 1, 2)
        self.w1end_timeEdit_28 = QtWidgets.QTimeEdit(self.widget_28)
        self.w1end_timeEdit_28.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_28.setObjectName("w1end_timeEdit_28")
        self.gridLayout_28.addWidget(self.w1end_timeEdit_28, 4, 6, 1, 2)
        self.w2start_timeEdit_28 = QtWidgets.QTimeEdit(self.widget_28)
        self.w2start_timeEdit_28.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_28.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_28.setObjectName("w2start_timeEdit_28")
        self.gridLayout_28.addWidget(self.w2start_timeEdit_28, 5, 3, 1, 1)
        self.w3start_28 = QtWidgets.QLabel(self.widget_28)
        self.w3start_28.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_28.setObjectName("w3start_28")
        self.gridLayout_28.addWidget(self.w3start_28, 6, 0, 1, 3)
        self.w1end_28 = QtWidgets.QLabel(self.widget_28)
        self.w1end_28.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_28.setObjectName("w1end_28")
        self.gridLayout_28.addWidget(self.w1end_28, 4, 5, 1, 1)
        self.w3end_28 = QtWidgets.QLabel(self.widget_28)
        self.w3end_28.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_28.setObjectName("w3end_28")
        self.gridLayout_28.addWidget(self.w3end_28, 6, 5, 1, 1)
        self.w2end_timeEdit_28 = QtWidgets.QTimeEdit(self.widget_28)
        self.w2end_timeEdit_28.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_28.setObjectName("w2end_timeEdit_28")
        self.gridLayout_28.addWidget(self.w2end_timeEdit_28, 5, 6, 1, 2)
        self.w3start_timeEdit_28 = QtWidgets.QTimeEdit(self.widget_28)
        self.w3start_timeEdit_28.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_28.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_28.setObjectName("w3start_timeEdit_28")
        self.gridLayout_28.addWidget(self.w3start_timeEdit_28, 6, 3, 1, 1)
        self.w3end_timeEdit_28 = QtWidgets.QTimeEdit(self.widget_28)
        self.w3end_timeEdit_28.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_28.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_28.setObjectName("w3end_timeEdit_28")
        self.gridLayout_28.addWidget(self.w3end_timeEdit_28, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_28)
        self.horizontallayout_29 = QtWidgets.QHBoxLayout()
        self.horizontallayout_29.setObjectName("horizontallayout_29")
        self.appliancename_label_29 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_29.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_29.setFont(font)
        self.appliancename_label_29.setObjectName("appliancename_label_29")
        self.horizontallayout_29.addWidget(self.appliancename_label_29)
        self.appliancename_lineEdit_29 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_29.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_29.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_29.setObjectName("appliancename_lineEdit_29")
        self.horizontallayout_29.addWidget(self.appliancename_lineEdit_29)
        self.Togglebutton_29 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_29.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_29.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_29.setObjectName("Togglebutton_29")
        self.horizontallayout_29.addWidget(self.Togglebutton_29)
        self.verticalLayout.addLayout(self.horizontallayout_29)
        self.widget_29 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(241, 241, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_29.setPalette(palette)
        self.widget_29.setTabletTracking(False)
        self.widget_29.setAutoFillBackground(False)
        self.widget_29.setStyleSheet("background-color: rgb(241, 241, 245);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_29.setObjectName("widget_29")
        self.gridLayout_29 = QtWidgets.QGridLayout(self.widget_29)
        self.gridLayout_29.setObjectName("gridLayout_29")
        spacerItem112 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_29.addItem(spacerItem112, 3, 5, 1, 3)
        spacerItem113 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_29.addItem(spacerItem113, 7, 5, 1, 3)
        spacerItem114 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_29.addItem(spacerItem114, 3, 0, 1, 4)
        self.line_58 = QtWidgets.QFrame(self.widget_29)
        self.line_58.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_58.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_58.setObjectName("line_58")
        self.gridLayout_29.addWidget(self.line_58, 0, 4, 3, 1)
        self.power_29 = QtWidgets.QLabel(self.widget_29)
        self.power_29.setMinimumSize(QtCore.QSize(0, 31))
        self.power_29.setObjectName("power_29")
        self.gridLayout_29.addWidget(self.power_29, 0, 5, 1, 1)
        self.number_29 = QtWidgets.QLabel(self.widget_29)
        self.number_29.setMinimumSize(QtCore.QSize(151, 31))
        self.number_29.setObjectName("number_29")
        self.gridLayout_29.addWidget(self.number_29, 0, 0, 1, 3)
        self.power_spinBox_29 = QtWidgets.QSpinBox(self.widget_29)
        self.power_spinBox_29.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_29.setMaximum(999999999)
        self.power_spinBox_29.setObjectName("power_spinBox_29")
        self.gridLayout_29.addWidget(self.power_spinBox_29, 0, 6, 1, 3)
        self.number_spinBox_29 = QtWidgets.QSpinBox(self.widget_29)
        self.number_spinBox_29.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_29.setMinimum(1)
        self.number_spinBox_29.setMaximum(999999999)
        self.number_spinBox_29.setProperty("value", 1)
        self.number_spinBox_29.setObjectName("number_spinBox_29")
        self.gridLayout_29.addWidget(self.number_spinBox_29, 0, 3, 1, 1)
        self.r_var_spinBox_29 = QtWidgets.QSpinBox(self.widget_29)
        self.r_var_spinBox_29.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_29.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_29.setMaximum(100)
        self.r_var_spinBox_29.setObjectName("r_var_spinBox_29")
        self.gridLayout_29.addWidget(self.r_var_spinBox_29, 8, 3, 1, 1)
        self.line_59 = QtWidgets.QFrame(self.widget_29)
        self.line_59.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_59.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_59.setObjectName("line_59")
        self.gridLayout_29.addWidget(self.line_59, 8, 4, 3, 1)
        self.wd_we_comboBox_29 = QtWidgets.QComboBox(self.widget_29)
        self.wd_we_comboBox_29.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_29.setObjectName("wd_we_comboBox_29")
        self.wd_we_comboBox_29.addItem("")
        self.wd_we_comboBox_29.addItem("")
        self.wd_we_comboBox_29.addItem("")
        self.gridLayout_29.addWidget(self.wd_we_comboBox_29, 2, 6, 1, 3)
        self.num_windows_spinBox_29 = QtWidgets.QSpinBox(self.widget_29)
        self.num_windows_spinBox_29.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_29.setMinimum(1)
        self.num_windows_spinBox_29.setMaximum(3)
        self.num_windows_spinBox_29.setObjectName("num_windows_spinBox_29")
        self.gridLayout_29.addWidget(self.num_windows_spinBox_29, 1, 8, 1, 1)
        self.num_windows_29 = QtWidgets.QLabel(self.widget_29)
        self.num_windows_29.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_29.setObjectName("num_windows_29")
        self.gridLayout_29.addWidget(self.num_windows_29, 1, 5, 1, 3)
        self.w1start_29 = QtWidgets.QLabel(self.widget_29)
        self.w1start_29.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_29.setObjectName("w1start_29")
        self.gridLayout_29.addWidget(self.w1start_29, 4, 0, 1, 1)
        self.function_time_spinBox_29 = QtWidgets.QSpinBox(self.widget_29)
        self.function_time_spinBox_29.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_29.setMaximum(1440)
        self.function_time_spinBox_29.setProperty("value", 0)
        self.function_time_spinBox_29.setObjectName("function_time_spinBox_29")
        self.gridLayout_29.addWidget(self.function_time_spinBox_29, 1, 3, 1, 1)
        self.label_93 = QtWidgets.QLabel(self.widget_29)
        self.label_93.setObjectName("label_93")
        self.gridLayout_29.addWidget(self.label_93, 6, 4, 1, 1)
        self.label_94 = QtWidgets.QLabel(self.widget_29)
        self.label_94.setObjectName("label_94")
        self.gridLayout_29.addWidget(self.label_94, 4, 4, 1, 1)
        self.wd_we_29 = QtWidgets.QLabel(self.widget_29)
        self.wd_we_29.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_29.setObjectName("wd_we_29")
        self.gridLayout_29.addWidget(self.wd_we_29, 2, 5, 1, 1)
        self.function_time_29 = QtWidgets.QLabel(self.widget_29)
        self.function_time_29.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_29.setObjectName("function_time_29")
        self.gridLayout_29.addWidget(self.function_time_29, 1, 0, 1, 3)
        self.label_95 = QtWidgets.QLabel(self.widget_29)
        self.label_95.setObjectName("label_95")
        self.gridLayout_29.addWidget(self.label_95, 5, 4, 1, 1)
        self.r_var_29 = QtWidgets.QLabel(self.widget_29)
        self.r_var_29.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_29.setObjectName("r_var_29")
        self.gridLayout_29.addWidget(self.r_var_29, 8, 0, 1, 3)
        self.occationaluse_29 = QtWidgets.QLabel(self.widget_29)
        self.occationaluse_29.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_29.setObjectName("occationaluse_29")
        self.gridLayout_29.addWidget(self.occationaluse_29, 2, 0, 1, 1)
        spacerItem115 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_29.addItem(spacerItem115, 7, 0, 1, 4)
        self.occationaluse_spinBox_29 = QtWidgets.QSpinBox(self.widget_29)
        self.occationaluse_spinBox_29.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_29.setMinimum(1)
        self.occationaluse_spinBox_29.setMaximum(100)
        self.occationaluse_spinBox_29.setProperty("value", 100)
        self.occationaluse_spinBox_29.setObjectName("occationaluse_spinBox_29")
        self.gridLayout_29.addWidget(self.occationaluse_spinBox_29, 2, 3, 1, 1)
        self.func_cycle_spinBox_29 = QtWidgets.QSpinBox(self.widget_29)
        self.func_cycle_spinBox_29.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_29.setMaximum(1440)
        self.func_cycle_spinBox_29.setProperty("value", 1)
        self.func_cycle_spinBox_29.setObjectName("func_cycle_spinBox_29")
        self.gridLayout_29.addWidget(self.func_cycle_spinBox_29, 9, 7, 1, 2)
        self.fixed_29 = QtWidgets.QLabel(self.widget_29)
        self.fixed_29.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_29.setObjectName("fixed_29")
        self.gridLayout_29.addWidget(self.fixed_29, 10, 0, 1, 1)
        self.tfrv_29 = QtWidgets.QLabel(self.widget_29)
        self.tfrv_29.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_29.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_29.setObjectName("tfrv_29")
        self.gridLayout_29.addWidget(self.tfrv_29, 8, 5, 1, 2)
        self.flat_29 = QtWidgets.QLabel(self.widget_29)
        self.flat_29.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_29.setObjectName("flat_29")
        self.gridLayout_29.addWidget(self.flat_29, 10, 5, 1, 1)
        self.tfrv_spinBox_29 = QtWidgets.QSpinBox(self.widget_29)
        self.tfrv_spinBox_29.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_29.setMaximum(100)
        self.tfrv_spinBox_29.setObjectName("tfrv_spinBox_29")
        self.gridLayout_29.addWidget(self.tfrv_spinBox_29, 8, 8, 1, 1)
        self.flat_comboBox_29 = QtWidgets.QComboBox(self.widget_29)
        self.flat_comboBox_29.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_29.setObjectName("flat_comboBox_29")
        self.flat_comboBox_29.addItem("")
        self.flat_comboBox_29.addItem("")
        self.gridLayout_29.addWidget(self.flat_comboBox_29, 10, 7, 1, 2)
        self.thermal_v_spinBox_29 = QtWidgets.QSpinBox(self.widget_29)
        self.thermal_v_spinBox_29.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_29.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_29.setMaximum(100)
        self.thermal_v_spinBox_29.setObjectName("thermal_v_spinBox_29")
        self.gridLayout_29.addWidget(self.thermal_v_spinBox_29, 9, 3, 1, 1)
        self.fixe_comboBox_29 = QtWidgets.QComboBox(self.widget_29)
        self.fixe_comboBox_29.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_29.setObjectName("fixe_comboBox_29")
        self.fixe_comboBox_29.addItem("")
        self.fixe_comboBox_29.addItem("")
        self.gridLayout_29.addWidget(self.fixe_comboBox_29, 10, 3, 1, 1)
        self.func_cycle_29 = QtWidgets.QLabel(self.widget_29)
        self.func_cycle_29.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_29.setObjectName("func_cycle_29")
        self.gridLayout_29.addWidget(self.func_cycle_29, 9, 5, 1, 1)
        self.thermal_v_29 = QtWidgets.QLabel(self.widget_29)
        self.thermal_v_29.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_29.setObjectName("thermal_v_29")
        self.gridLayout_29.addWidget(self.thermal_v_29, 9, 0, 1, 3)
        self.w1start_timeEdit_29 = QtWidgets.QTimeEdit(self.widget_29)
        self.w1start_timeEdit_29.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_29.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_29.setObjectName("w1start_timeEdit_29")
        self.gridLayout_29.addWidget(self.w1start_timeEdit_29, 4, 3, 1, 1)
        self.w2end_29 = QtWidgets.QLabel(self.widget_29)
        self.w2end_29.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_29.setObjectName("w2end_29")
        self.gridLayout_29.addWidget(self.w2end_29, 5, 5, 1, 1)
        self.w2start_29 = QtWidgets.QLabel(self.widget_29)
        self.w2start_29.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_29.setObjectName("w2start_29")
        self.gridLayout_29.addWidget(self.w2start_29, 5, 0, 1, 2)
        self.w1end_timeEdit_29 = QtWidgets.QTimeEdit(self.widget_29)
        self.w1end_timeEdit_29.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_29.setObjectName("w1end_timeEdit_29")
        self.gridLayout_29.addWidget(self.w1end_timeEdit_29, 4, 6, 1, 2)
        self.w2start_timeEdit_29 = QtWidgets.QTimeEdit(self.widget_29)
        self.w2start_timeEdit_29.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_29.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_29.setObjectName("w2start_timeEdit_29")
        self.gridLayout_29.addWidget(self.w2start_timeEdit_29, 5, 3, 1, 1)
        self.w3start_29 = QtWidgets.QLabel(self.widget_29)
        self.w3start_29.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_29.setObjectName("w3start_29")
        self.gridLayout_29.addWidget(self.w3start_29, 6, 0, 1, 3)
        self.w1end_29 = QtWidgets.QLabel(self.widget_29)
        self.w1end_29.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_29.setObjectName("w1end_29")
        self.gridLayout_29.addWidget(self.w1end_29, 4, 5, 1, 1)
        self.w3end_29 = QtWidgets.QLabel(self.widget_29)
        self.w3end_29.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_29.setObjectName("w3end_29")
        self.gridLayout_29.addWidget(self.w3end_29, 6, 5, 1, 1)
        self.w2end_timeEdit_29 = QtWidgets.QTimeEdit(self.widget_29)
        self.w2end_timeEdit_29.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_29.setObjectName("w2end_timeEdit_29")
        self.gridLayout_29.addWidget(self.w2end_timeEdit_29, 5, 6, 1, 2)
        self.w3start_timeEdit_29 = QtWidgets.QTimeEdit(self.widget_29)
        self.w3start_timeEdit_29.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_29.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_29.setObjectName("w3start_timeEdit_29")
        self.gridLayout_29.addWidget(self.w3start_timeEdit_29, 6, 3, 1, 1)
        self.w3end_timeEdit_29 = QtWidgets.QTimeEdit(self.widget_29)
        self.w3end_timeEdit_29.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_29.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_29.setObjectName("w3end_timeEdit_29")
        self.gridLayout_29.addWidget(self.w3end_timeEdit_29, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_29)
        self.horizontallayout_30 = QtWidgets.QHBoxLayout()
        self.horizontallayout_30.setObjectName("horizontallayout_30")
        self.appliancename_label_30 = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        self.appliancename_label_30.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.appliancename_label_30.setFont(font)
        self.appliancename_label_30.setObjectName("appliancename_label_30")
        self.horizontallayout_30.addWidget(self.appliancename_label_30)
        self.appliancename_lineEdit_30 = QtWidgets.QLineEdit(self.scrollAreaWidgetContents)
        self.appliancename_lineEdit_30.setMinimumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_30.setMaximumSize(QtCore.QSize(361, 31))
        self.appliancename_lineEdit_30.setObjectName("appliancename_lineEdit_30")
        self.horizontallayout_30.addWidget(self.appliancename_lineEdit_30)
        self.Togglebutton_30 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        self.Togglebutton_30.setMinimumSize(QtCore.QSize(93, 31))
        self.Togglebutton_30.setMaximumSize(QtCore.QSize(93, 31))
        self.Togglebutton_30.setObjectName("Togglebutton_30")
        self.horizontallayout_30.addWidget(self.Togglebutton_30)
        self.verticalLayout.addLayout(self.horizontallayout_30)
        self.widget_30 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(225, 225, 225))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        self.widget_30.setPalette(palette)
        self.widget_30.setTabletTracking(False)
        self.widget_30.setAutoFillBackground(False)
        self.widget_30.setStyleSheet("background-color: rgb(225, 225, 225);\n"
"border-color: rgb(170, 170, 170);\n"
"font: 12pt \"Arial Narrow\";")
        self.widget_30.setObjectName("widget_30")
        self.gridLayout_30 = QtWidgets.QGridLayout(self.widget_30)
        self.gridLayout_30.setObjectName("gridLayout_30")
        spacerItem116 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_30.addItem(spacerItem116, 3, 5, 1, 3)
        spacerItem117 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_30.addItem(spacerItem117, 7, 5, 1, 3)
        spacerItem118 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_30.addItem(spacerItem118, 3, 0, 1, 4)
        self.line_60 = QtWidgets.QFrame(self.widget_30)
        self.line_60.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_60.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_60.setObjectName("line_60")
        self.gridLayout_30.addWidget(self.line_60, 0, 4, 3, 1)
        self.power_30 = QtWidgets.QLabel(self.widget_30)
        self.power_30.setMinimumSize(QtCore.QSize(0, 31))
        self.power_30.setObjectName("power_30")
        self.gridLayout_30.addWidget(self.power_30, 0, 5, 1, 1)
        self.number_30 = QtWidgets.QLabel(self.widget_30)
        self.number_30.setMinimumSize(QtCore.QSize(151, 31))
        self.number_30.setObjectName("number_30")
        self.gridLayout_30.addWidget(self.number_30, 0, 0, 1, 3)
        self.power_spinBox_30 = QtWidgets.QSpinBox(self.widget_30)
        self.power_spinBox_30.setMinimumSize(QtCore.QSize(131, 31))
        self.power_spinBox_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.power_spinBox_30.setMaximum(999999999)
        self.power_spinBox_30.setObjectName("power_spinBox_30")
        self.gridLayout_30.addWidget(self.power_spinBox_30, 0, 6, 1, 3)
        self.number_spinBox_30 = QtWidgets.QSpinBox(self.widget_30)
        self.number_spinBox_30.setMinimumSize(QtCore.QSize(91, 31))
        self.number_spinBox_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.number_spinBox_30.setMinimum(1)
        self.number_spinBox_30.setMaximum(999999999)
        self.number_spinBox_30.setProperty("value", 1)
        self.number_spinBox_30.setObjectName("number_spinBox_30")
        self.gridLayout_30.addWidget(self.number_spinBox_30, 0, 3, 1, 1)
        self.r_var_spinBox_30 = QtWidgets.QSpinBox(self.widget_30)
        self.r_var_spinBox_30.setMinimumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_30.setMaximumSize(QtCore.QSize(97, 31))
        self.r_var_spinBox_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.r_var_spinBox_30.setMaximum(100)
        self.r_var_spinBox_30.setObjectName("r_var_spinBox_30")
        self.gridLayout_30.addWidget(self.r_var_spinBox_30, 8, 3, 1, 1)
        self.line_61 = QtWidgets.QFrame(self.widget_30)
        self.line_61.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_61.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_61.setObjectName("line_61")
        self.gridLayout_30.addWidget(self.line_61, 8, 4, 3, 1)
        self.wd_we_comboBox_30 = QtWidgets.QComboBox(self.widget_30)
        self.wd_we_comboBox_30.setMinimumSize(QtCore.QSize(131, 31))
        self.wd_we_comboBox_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.wd_we_comboBox_30.setObjectName("wd_we_comboBox_30")
        self.wd_we_comboBox_30.addItem("")
        self.wd_we_comboBox_30.addItem("")
        self.wd_we_comboBox_30.addItem("")
        self.gridLayout_30.addWidget(self.wd_we_comboBox_30, 2, 6, 1, 3)
        self.num_windows_spinBox_30 = QtWidgets.QSpinBox(self.widget_30)
        self.num_windows_spinBox_30.setMinimumSize(QtCore.QSize(51, 31))
        self.num_windows_spinBox_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.num_windows_spinBox_30.setMinimum(1)
        self.num_windows_spinBox_30.setMaximum(3)
        self.num_windows_spinBox_30.setObjectName("num_windows_spinBox_30")
        self.gridLayout_30.addWidget(self.num_windows_spinBox_30, 1, 8, 1, 1)
        self.num_windows_30 = QtWidgets.QLabel(self.widget_30)
        self.num_windows_30.setMinimumSize(QtCore.QSize(181, 31))
        self.num_windows_30.setObjectName("num_windows_30")
        self.gridLayout_30.addWidget(self.num_windows_30, 1, 5, 1, 3)
        self.w1start_30 = QtWidgets.QLabel(self.widget_30)
        self.w1start_30.setMinimumSize(QtCore.QSize(131, 31))
        self.w1start_30.setObjectName("w1start_30")
        self.gridLayout_30.addWidget(self.w1start_30, 4, 0, 1, 1)
        self.function_time_spinBox_30 = QtWidgets.QSpinBox(self.widget_30)
        self.function_time_spinBox_30.setMinimumSize(QtCore.QSize(91, 31))
        self.function_time_spinBox_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.function_time_spinBox_30.setMaximum(1440)
        self.function_time_spinBox_30.setProperty("value", 0)
        self.function_time_spinBox_30.setObjectName("function_time_spinBox_30")
        self.gridLayout_30.addWidget(self.function_time_spinBox_30, 1, 3, 1, 1)
        self.label_96 = QtWidgets.QLabel(self.widget_30)
        self.label_96.setObjectName("label_96")
        self.gridLayout_30.addWidget(self.label_96, 6, 4, 1, 1)
        self.label_97 = QtWidgets.QLabel(self.widget_30)
        self.label_97.setObjectName("label_97")
        self.gridLayout_30.addWidget(self.label_97, 4, 4, 1, 1)
        self.wd_we_30 = QtWidgets.QLabel(self.widget_30)
        self.wd_we_30.setMinimumSize(QtCore.QSize(0, 31))
        self.wd_we_30.setObjectName("wd_we_30")
        self.gridLayout_30.addWidget(self.wd_we_30, 2, 5, 1, 1)
        self.function_time_30 = QtWidgets.QLabel(self.widget_30)
        self.function_time_30.setMinimumSize(QtCore.QSize(161, 31))
        self.function_time_30.setObjectName("function_time_30")
        self.gridLayout_30.addWidget(self.function_time_30, 1, 0, 1, 3)
        self.label_98 = QtWidgets.QLabel(self.widget_30)
        self.label_98.setObjectName("label_98")
        self.gridLayout_30.addWidget(self.label_98, 5, 4, 1, 1)
        self.r_var_30 = QtWidgets.QLabel(self.widget_30)
        self.r_var_30.setMinimumSize(QtCore.QSize(181, 31))
        self.r_var_30.setObjectName("r_var_30")
        self.gridLayout_30.addWidget(self.r_var_30, 8, 0, 1, 3)
        self.occationaluse_30 = QtWidgets.QLabel(self.widget_30)
        self.occationaluse_30.setMinimumSize(QtCore.QSize(151, 31))
        self.occationaluse_30.setObjectName("occationaluse_30")
        self.gridLayout_30.addWidget(self.occationaluse_30, 2, 0, 1, 1)
        spacerItem119 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_30.addItem(spacerItem119, 7, 0, 1, 4)
        self.occationaluse_spinBox_30 = QtWidgets.QSpinBox(self.widget_30)
        self.occationaluse_spinBox_30.setMinimumSize(QtCore.QSize(91, 31))
        self.occationaluse_spinBox_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.occationaluse_spinBox_30.setMinimum(1)
        self.occationaluse_spinBox_30.setMaximum(100)
        self.occationaluse_spinBox_30.setProperty("value", 100)
        self.occationaluse_spinBox_30.setObjectName("occationaluse_spinBox_30")
        self.gridLayout_30.addWidget(self.occationaluse_spinBox_30, 2, 3, 1, 1)
        self.func_cycle_spinBox_30 = QtWidgets.QSpinBox(self.widget_30)
        self.func_cycle_spinBox_30.setMinimumSize(QtCore.QSize(101, 31))
        self.func_cycle_spinBox_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.func_cycle_spinBox_30.setMaximum(1440)
        self.func_cycle_spinBox_30.setProperty("value", 1)
        self.func_cycle_spinBox_30.setObjectName("func_cycle_spinBox_30")
        self.gridLayout_30.addWidget(self.func_cycle_spinBox_30, 9, 7, 1, 2)
        self.fixed_30 = QtWidgets.QLabel(self.widget_30)
        self.fixed_30.setMinimumSize(QtCore.QSize(141, 31))
        self.fixed_30.setObjectName("fixed_30")
        self.gridLayout_30.addWidget(self.fixed_30, 10, 0, 1, 1)
        self.tfrv_30 = QtWidgets.QLabel(self.widget_30)
        self.tfrv_30.setMinimumSize(QtCore.QSize(0, 31))
        self.tfrv_30.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.tfrv_30.setObjectName("tfrv_30")
        self.gridLayout_30.addWidget(self.tfrv_30, 8, 5, 1, 2)
        self.flat_30 = QtWidgets.QLabel(self.widget_30)
        self.flat_30.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_30.setObjectName("flat_30")
        self.gridLayout_30.addWidget(self.flat_30, 10, 5, 1, 1)
        self.tfrv_spinBox_30 = QtWidgets.QSpinBox(self.widget_30)
        self.tfrv_spinBox_30.setMinimumSize(QtCore.QSize(51, 31))
        self.tfrv_spinBox_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.tfrv_spinBox_30.setMaximum(100)
        self.tfrv_spinBox_30.setObjectName("tfrv_spinBox_30")
        self.gridLayout_30.addWidget(self.tfrv_spinBox_30, 8, 8, 1, 1)
        self.flat_comboBox_30 = QtWidgets.QComboBox(self.widget_30)
        self.flat_comboBox_30.setMinimumSize(QtCore.QSize(101, 31))
        self.flat_comboBox_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.flat_comboBox_30.setObjectName("flat_comboBox_30")
        self.flat_comboBox_30.addItem("")
        self.flat_comboBox_30.addItem("")
        self.gridLayout_30.addWidget(self.flat_comboBox_30, 10, 7, 1, 2)
        self.thermal_v_spinBox_30 = QtWidgets.QSpinBox(self.widget_30)
        self.thermal_v_spinBox_30.setMinimumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_30.setMaximumSize(QtCore.QSize(97, 31))
        self.thermal_v_spinBox_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.thermal_v_spinBox_30.setMaximum(100)
        self.thermal_v_spinBox_30.setObjectName("thermal_v_spinBox_30")
        self.gridLayout_30.addWidget(self.thermal_v_spinBox_30, 9, 3, 1, 1)
        self.fixe_comboBox_30 = QtWidgets.QComboBox(self.widget_30)
        self.fixe_comboBox_30.setMaximumSize(QtCore.QSize(97, 31))
        self.fixe_comboBox_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.fixe_comboBox_30.setObjectName("fixe_comboBox_30")
        self.fixe_comboBox_30.addItem("")
        self.fixe_comboBox_30.addItem("")
        self.gridLayout_30.addWidget(self.fixe_comboBox_30, 10, 3, 1, 1)
        self.func_cycle_30 = QtWidgets.QLabel(self.widget_30)
        self.func_cycle_30.setMinimumSize(QtCore.QSize(0, 31))
        self.func_cycle_30.setObjectName("func_cycle_30")
        self.gridLayout_30.addWidget(self.func_cycle_30, 9, 5, 1, 1)
        self.thermal_v_30 = QtWidgets.QLabel(self.widget_30)
        self.thermal_v_30.setMinimumSize(QtCore.QSize(181, 31))
        self.thermal_v_30.setObjectName("thermal_v_30")
        self.gridLayout_30.addWidget(self.thermal_v_30, 9, 0, 1, 3)
        self.w1start_timeEdit_30 = QtWidgets.QTimeEdit(self.widget_30)
        self.w1start_timeEdit_30.setMinimumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_30.setMaximumSize(QtCore.QSize(101, 31))
        self.w1start_timeEdit_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1start_timeEdit_30.setObjectName("w1start_timeEdit_30")
        self.gridLayout_30.addWidget(self.w1start_timeEdit_30, 4, 3, 1, 1)
        self.w2end_30 = QtWidgets.QLabel(self.widget_30)
        self.w2end_30.setMinimumSize(QtCore.QSize(0, 31))
        self.w2end_30.setObjectName("w2end_30")
        self.gridLayout_30.addWidget(self.w2end_30, 5, 5, 1, 1)
        self.w2start_30 = QtWidgets.QLabel(self.widget_30)
        self.w2start_30.setMinimumSize(QtCore.QSize(141, 31))
        self.w2start_30.setObjectName("w2start_30")
        self.gridLayout_30.addWidget(self.w2start_30, 5, 0, 1, 2)
        self.w1end_timeEdit_30 = QtWidgets.QTimeEdit(self.widget_30)
        self.w1end_timeEdit_30.setMinimumSize(QtCore.QSize(101, 31))
        self.w1end_timeEdit_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w1end_timeEdit_30.setObjectName("w1end_timeEdit_30")
        self.gridLayout_30.addWidget(self.w1end_timeEdit_30, 4, 6, 1, 2)
        self.w2start_timeEdit_30 = QtWidgets.QTimeEdit(self.widget_30)
        self.w2start_timeEdit_30.setMinimumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_30.setMaximumSize(QtCore.QSize(101, 31))
        self.w2start_timeEdit_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2start_timeEdit_30.setObjectName("w2start_timeEdit_30")
        self.gridLayout_30.addWidget(self.w2start_timeEdit_30, 5, 3, 1, 1)
        self.w3start_30 = QtWidgets.QLabel(self.widget_30)
        self.w3start_30.setMinimumSize(QtCore.QSize(151, 31))
        self.w3start_30.setObjectName("w3start_30")
        self.gridLayout_30.addWidget(self.w3start_30, 6, 0, 1, 3)
        self.w1end_30 = QtWidgets.QLabel(self.widget_30)
        self.w1end_30.setMinimumSize(QtCore.QSize(0, 31))
        self.w1end_30.setObjectName("w1end_30")
        self.gridLayout_30.addWidget(self.w1end_30, 4, 5, 1, 1)
        self.w3end_30 = QtWidgets.QLabel(self.widget_30)
        self.w3end_30.setMinimumSize(QtCore.QSize(0, 31))
        self.w3end_30.setObjectName("w3end_30")
        self.gridLayout_30.addWidget(self.w3end_30, 6, 5, 1, 1)
        self.w2end_timeEdit_30 = QtWidgets.QTimeEdit(self.widget_30)
        self.w2end_timeEdit_30.setMinimumSize(QtCore.QSize(101, 31))
        self.w2end_timeEdit_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w2end_timeEdit_30.setObjectName("w2end_timeEdit_30")
        self.gridLayout_30.addWidget(self.w2end_timeEdit_30, 5, 6, 1, 2)
        self.w3start_timeEdit_30 = QtWidgets.QTimeEdit(self.widget_30)
        self.w3start_timeEdit_30.setMinimumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_30.setMaximumSize(QtCore.QSize(101, 31))
        self.w3start_timeEdit_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3start_timeEdit_30.setObjectName("w3start_timeEdit_30")
        self.gridLayout_30.addWidget(self.w3start_timeEdit_30, 6, 3, 1, 1)
        self.w3end_timeEdit_30 = QtWidgets.QTimeEdit(self.widget_30)
        self.w3end_timeEdit_30.setMinimumSize(QtCore.QSize(101, 31))
        self.w3end_timeEdit_30.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.w3end_timeEdit_30.setObjectName("w3end_timeEdit_30")
        self.gridLayout_30.addWidget(self.w3end_timeEdit_30, 6, 6, 1, 2)
        self.verticalLayout.addWidget(self.widget_30)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_4.addWidget(self.scrollArea)
        self.layoutWidget1 = QtWidgets.QWidget(self.splitter_4)
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.layoutWidget1)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.groupBox_1 = QtWidgets.QGroupBox(self.layoutWidget1)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.groupBox_1.setFont(font)
        self.groupBox_1.setStyleSheet("background-color: rgb(247, 247, 247);")
        self.groupBox_1.setObjectName("groupBox_1")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.groupBox_1)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout()
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.dateEdit_Label_1 = QtWidgets.QLabel(self.groupBox_1)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        self.dateEdit_Label_1.setFont(font)
        self.dateEdit_Label_1.setObjectName("dateEdit_Label_1")
        self.verticalLayout_7.addWidget(self.dateEdit_Label_1)
        self.ddmmyyyy_1 = QtWidgets.QLabel(self.groupBox_1)
        self.ddmmyyyy_1.setObjectName("ddmmyyyy_1")
        self.verticalLayout_7.addWidget(self.ddmmyyyy_1)
        self.horizontalLayout_6.addLayout(self.verticalLayout_7)
        self.start_dateEdit_1 = QtWidgets.QDateEdit(self.groupBox_1)
        self.start_dateEdit_1.setEnabled(True)
        self.start_dateEdit_1.setMinimumSize(QtCore.QSize(120, 41))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.start_dateEdit_1.setFont(font)
        self.start_dateEdit_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.start_dateEdit_1.setDate(QtCore.QDate(2023, 1, 1))
        self.start_dateEdit_1.setObjectName("start_dateEdit_1")
        self.horizontalLayout_6.addWidget(self.start_dateEdit_1)
        self.horizontalLayout_8.addLayout(self.horizontalLayout_6)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.ndays_label_1 = QtWidgets.QLabel(self.groupBox_1)
        self.ndays_label_1.setMinimumSize(QtCore.QSize(191, 0))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        self.ndays_label_1.setFont(font)
        self.ndays_label_1.setObjectName("ndays_label_1")
        self.verticalLayout_6.addWidget(self.ndays_label_1)
        self._1 = QtWidgets.QLabel(self.groupBox_1)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(9)
        self._1.setFont(font)
        self._1.setObjectName("_1")
        self.verticalLayout_6.addWidget(self._1)
        self.horizontalLayout_7.addLayout(self.verticalLayout_6)
        self.ndays_spinBox_1 = QtWidgets.QSpinBox(self.groupBox_1)
        self.ndays_spinBox_1.setEnabled(False)
        self.ndays_spinBox_1.setMinimumSize(QtCore.QSize(110, 41))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        self.ndays_spinBox_1.setFont(font)
        self.ndays_spinBox_1.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ndays_spinBox_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.ndays_spinBox_1.setMinimum(1)
        self.ndays_spinBox_1.setMaximum(366)
        self.ndays_spinBox_1.setObjectName("ndays_spinBox_1")
        self.horizontalLayout_7.addWidget(self.ndays_spinBox_1)
        self.horizontalLayout_8.addLayout(self.horizontalLayout_7)
        self.line_103 = QtWidgets.QFrame(self.groupBox_1)
        self.line_103.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_103.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_103.setObjectName("line_103")
        self.horizontalLayout_8.addWidget(self.line_103)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.set_title_label_1 = QtWidgets.QLabel(self.groupBox_1)
        self.set_title_label_1.setEnabled(True)
        self.set_title_label_1.setMinimumSize(QtCore.QSize(291, 0))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        self.set_title_label_1.setFont(font)
        self.set_title_label_1.setObjectName("set_title_label_1")
        self.verticalLayout_5.addWidget(self.set_title_label_1)
        self.set_title_lineEdit_1 = QtWidgets.QLineEdit(self.groupBox_1)
        self.set_title_lineEdit_1.setEnabled(False)
        self.set_title_lineEdit_1.setMinimumSize(QtCore.QSize(0, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        self.set_title_lineEdit_1.setFont(font)
        self.set_title_lineEdit_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.set_title_lineEdit_1.setObjectName("set_title_lineEdit_1")
        self.verticalLayout_5.addWidget(self.set_title_lineEdit_1)
        self.horizontalLayout_8.addLayout(self.verticalLayout_5)
        self.verticalLayout_9.addWidget(self.groupBox_1)
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        spacerItem120 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem120)
        self.simulate_pushButton_1 = QtWidgets.QPushButton(self.layoutWidget1)
        self.simulate_pushButton_1.setEnabled(False)
        self.simulate_pushButton_1.setMinimumSize(QtCore.QSize(181, 41))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        self.simulate_pushButton_1.setFont(font)
        self.simulate_pushButton_1.setObjectName("simulate_pushButton_1")
        self.horizontalLayout_10.addWidget(self.simulate_pushButton_1)
        spacerItem121 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_10.addItem(spacerItem121)
        self.verticalLayout_9.addLayout(self.horizontalLayout_10)
        self.Ramp_lite_graphicsview_1 = QtWidgets.QGraphicsView(self.layoutWidget1)
        self.Ramp_lite_graphicsview_1.setObjectName("Ramp_lite_graphicsview_1")
        self.verticalLayout_9.addWidget(self.Ramp_lite_graphicsview_1)
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.timestamp_label_1 = QtWidgets.QLabel(self.layoutWidget1)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.timestamp_label_1.setFont(font)
        self.timestamp_label_1.setObjectName("timestamp_label_1")
        self.horizontalLayout_3.addWidget(self.timestamp_label_1)
        self.Minute_radioButton_1 = QtWidgets.QRadioButton(self.layoutWidget1)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Minute_radioButton_1.setFont(font)
        self.Minute_radioButton_1.setChecked(True)
        self.Minute_radioButton_1.setObjectName("Minute_radioButton_1")
        self.horizontalLayout_3.addWidget(self.Minute_radioButton_1)
        self.FifteenMinute_radioButton_1 = QtWidgets.QRadioButton(self.layoutWidget1)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.FifteenMinute_radioButton_1.setFont(font)
        self.FifteenMinute_radioButton_1.setObjectName("FifteenMinute_radioButton_1")
        self.horizontalLayout_3.addWidget(self.FifteenMinute_radioButton_1)
        self.Hourly_radioButton_1 = QtWidgets.QRadioButton(self.layoutWidget1)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Hourly_radioButton_1.setFont(font)
        self.Hourly_radioButton_1.setObjectName("Hourly_radioButton_1")
        self.horizontalLayout_3.addWidget(self.Hourly_radioButton_1)
        self.Daily_radioButton_1 = QtWidgets.QRadioButton(self.layoutWidget1)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Daily_radioButton_1.setFont(font)
        self.Daily_radioButton_1.setObjectName("Daily_radioButton_1")
        self.horizontalLayout_3.addWidget(self.Daily_radioButton_1)
        self.Monthly_radioButton_1 = QtWidgets.QRadioButton(self.layoutWidget1)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Monthly_radioButton_1.setFont(font)
        self.Monthly_radioButton_1.setObjectName("Monthly_radioButton_1")
        self.horizontalLayout_3.addWidget(self.Monthly_radioButton_1)
        self.barchart_radioButton_1 = QtWidgets.QRadioButton(self.layoutWidget1)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        self.barchart_radioButton_1.setFont(font)
        self.barchart_radioButton_1.setObjectName("barchart_radioButton_1")
        self.horizontalLayout_3.addWidget(self.barchart_radioButton_1)
        self.generate_pushButton_1 = QtWidgets.QPushButton(self.layoutWidget1)
        self.generate_pushButton_1.setEnabled(False)
        self.generate_pushButton_1.setMinimumSize(QtCore.QSize(0, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.generate_pushButton_1.setFont(font)
        self.generate_pushButton_1.setCheckable(False)
        self.generate_pushButton_1.setObjectName("generate_pushButton_1")
        self.horizontalLayout_3.addWidget(self.generate_pushButton_1)
        self.horizontalLayout_9.addLayout(self.horizontalLayout_3)
        spacerItem122 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_9.addItem(spacerItem122)
        self.verticalLayout_8 = QtWidgets.QVBoxLayout()
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.save_image_pushButton = QtWidgets.QPushButton(self.layoutWidget1)
        self.save_image_pushButton.setEnabled(False)
        self.save_image_pushButton.setMinimumSize(QtCore.QSize(0, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.save_image_pushButton.setFont(font)
        self.save_image_pushButton.setObjectName("save_image_pushButton")
        self.verticalLayout_8.addWidget(self.save_image_pushButton)
        self.save_csv_pushButton = QtWidgets.QPushButton(self.layoutWidget1)
        self.save_csv_pushButton.setEnabled(False)
        self.save_csv_pushButton.setMinimumSize(QtCore.QSize(0, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.save_csv_pushButton.setFont(font)
        self.save_csv_pushButton.setObjectName("save_csv_pushButton")
        self.verticalLayout_8.addWidget(self.save_csv_pushButton)
        self.horizontalLayout_9.addLayout(self.verticalLayout_8)
        self.verticalLayout_9.addLayout(self.horizontalLayout_9)
        self.gridLayout_31.addWidget(self.splitter_4, 1, 0, 1, 1)
        self.ramp_lite_intro_label = QtWidgets.QLabel(self.Ramp_Lite_tab)
        self.ramp_lite_intro_label.setMaximumSize(QtCore.QSize(701, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri Light")
        font.setPointSize(11)
        self.ramp_lite_intro_label.setFont(font)
        self.ramp_lite_intro_label.setObjectName("ramp_lite_intro_label")
        self.gridLayout_31.addWidget(self.ramp_lite_intro_label, 0, 0, 1, 1)
        self.tabWidget.addTab(self.Ramp_Lite_tab, "")
        self.Ramp_Advance_tab = QtWidgets.QWidget()
        self.Ramp_Advance_tab.setObjectName("Ramp_Advance_tab")
        self.gridLayout_32 = QtWidgets.QGridLayout(self.Ramp_Advance_tab)
        self.gridLayout_32.setObjectName("gridLayout_32")
        self.splitter_3 = QtWidgets.QSplitter(self.Ramp_Advance_tab)
        self.splitter_3.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_3.setObjectName("splitter_3")
        self.splitter_2 = QtWidgets.QSplitter(self.splitter_3)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter_2.sizePolicy().hasHeightForWidth())
        self.splitter_2.setSizePolicy(sizePolicy)
        self.splitter_2.setOrientation(QtCore.Qt.Vertical)
        self.splitter_2.setObjectName("splitter_2")
        self.create_data_radioButton_1 = QtWidgets.QRadioButton(self.splitter_2)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.create_data_radioButton_1.setFont(font)
        self.create_data_radioButton_1.setObjectName("create_data_radioButton_1")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.splitter_2)
        self.tabWidget_2.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.tabWidget_2.setFont(font)
        self.tabWidget_2.setStyleSheet("background-color: rgb(232, 232, 232);")
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.CreateUser = QtWidgets.QWidget()
        self.CreateUser.setObjectName("CreateUser")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.CreateUser)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.create_user_instruction_label_1 = QtWidgets.QLabel(self.CreateUser)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.create_user_instruction_label_1.setFont(font)
        self.create_user_instruction_label_1.setStyleSheet("background-color: rgb(254, 255, 225);")
        self.create_user_instruction_label_1.setObjectName("create_user_instruction_label_1")
        self.verticalLayout_3.addWidget(self.create_user_instruction_label_1)
        self.create_user_tableWidget_1 = QtWidgets.QTableWidget(self.CreateUser)
        self.create_user_tableWidget_1.setEnabled(False)
        self.create_user_tableWidget_1.setMinimumSize(QtCore.QSize(310, 526))
        self.create_user_tableWidget_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.create_user_tableWidget_1.setDragEnabled(False)
        self.create_user_tableWidget_1.setCornerButtonEnabled(False)
        self.create_user_tableWidget_1.setObjectName("create_user_tableWidget_1")
        self.create_user_tableWidget_1.setColumnCount(0)
        self.create_user_tableWidget_1.setRowCount(0)
        self.verticalLayout_3.addWidget(self.create_user_tableWidget_1)
        self.create_user_horizontalLayout_1 = QtWidgets.QHBoxLayout()
        self.create_user_horizontalLayout_1.setObjectName("create_user_horizontalLayout_1")
        self.add_user_pushButton_1 = QtWidgets.QPushButton(self.CreateUser)
        self.add_user_pushButton_1.setEnabled(False)
        self.add_user_pushButton_1.setMinimumSize(QtCore.QSize(91, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.add_user_pushButton_1.setFont(font)
        self.add_user_pushButton_1.setStyleSheet("background-color: rgb(253, 255, 242);")
        self.add_user_pushButton_1.setObjectName("add_user_pushButton_1")
        self.create_user_horizontalLayout_1.addWidget(self.add_user_pushButton_1)
        self.save_set_pushButton_1 = QtWidgets.QPushButton(self.CreateUser)
        self.save_set_pushButton_1.setEnabled(False)
        self.save_set_pushButton_1.setMinimumSize(QtCore.QSize(161, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.save_set_pushButton_1.setFont(font)
        self.save_set_pushButton_1.setStyleSheet("background-color: rgb(255, 255, 239);")
        self.save_set_pushButton_1.setObjectName("save_set_pushButton_1")
        self.create_user_horizontalLayout_1.addWidget(self.save_set_pushButton_1)
        self.verticalLayout_3.addLayout(self.create_user_horizontalLayout_1)
        self.create_user_horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.create_user_horizontalLayout_2.setObjectName("create_user_horizontalLayout_2")
        self.remove_user_pushButton_1 = QtWidgets.QPushButton(self.CreateUser)
        self.remove_user_pushButton_1.setEnabled(False)
        self.remove_user_pushButton_1.setMinimumSize(QtCore.QSize(91, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        self.remove_user_pushButton_1.setFont(font)
        self.remove_user_pushButton_1.setObjectName("remove_user_pushButton_1")
        self.create_user_horizontalLayout_2.addWidget(self.remove_user_pushButton_1)
        self.verticalLayout_3.addLayout(self.create_user_horizontalLayout_2)
        self.tabWidget_2.addTab(self.CreateUser, "")
        self.parameters = QtWidgets.QWidget()
        self.parameters.setObjectName("parameters")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.parameters)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.parameters_instruction_lablel_1 = QtWidgets.QLabel(self.parameters)
        font = QtGui.QFont()
        font.setPointSize(9)
        self.parameters_instruction_lablel_1.setFont(font)
        self.parameters_instruction_lablel_1.setStyleSheet("background-color: rgb(254, 255, 242);")
        self.parameters_instruction_lablel_1.setObjectName("parameters_instruction_lablel_1")
        self.verticalLayout_2.addWidget(self.parameters_instruction_lablel_1)
        self.parameters_instruction_horrizLayout_1 = QtWidgets.QHBoxLayout()
        self.parameters_instruction_horrizLayout_1.setObjectName("parameters_instruction_horrizLayout_1")
        self.label_6 = QtWidgets.QLabel(self.parameters)
        self.label_6.setObjectName("label_6")
        self.parameters_instruction_horrizLayout_1.addWidget(self.label_6)
        self.label_7 = QtWidgets.QLabel(self.parameters)
        self.label_7.setObjectName("label_7")
        self.parameters_instruction_horrizLayout_1.addWidget(self.label_7)
        self.label_8 = QtWidgets.QLabel(self.parameters)
        self.label_8.setObjectName("label_8")
        self.parameters_instruction_horrizLayout_1.addWidget(self.label_8)
        self.label_10 = QtWidgets.QLabel(self.parameters)
        self.label_10.setObjectName("label_10")
        self.parameters_instruction_horrizLayout_1.addWidget(self.label_10)
        self.verticalLayout_2.addLayout(self.parameters_instruction_horrizLayout_1)
        self.parameters_TableWidget_1 = QtWidgets.QTableWidget(self.parameters)
        self.parameters_TableWidget_1.setEnabled(False)
        self.parameters_TableWidget_1.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.parameters_TableWidget_1.setObjectName("parameters_TableWidget_1")
        self.parameters_TableWidget_1.setColumnCount(0)
        self.parameters_TableWidget_1.setRowCount(0)
        self.verticalLayout_2.addWidget(self.parameters_TableWidget_1)
        self.parameters_button_layout_1 = QtWidgets.QHBoxLayout()
        self.parameters_button_layout_1.setObjectName("parameters_button_layout_1")
        self.parameter_save_pushButton_1 = QtWidgets.QPushButton(self.parameters)
        self.parameter_save_pushButton_1.setEnabled(False)
        self.parameter_save_pushButton_1.setMinimumSize(QtCore.QSize(0, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.parameter_save_pushButton_1.setFont(font)
        self.parameter_save_pushButton_1.setObjectName("parameter_save_pushButton_1")
        self.parameters_button_layout_1.addWidget(self.parameter_save_pushButton_1)
        self.and_label_1 = QtWidgets.QLabel(self.parameters)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        self.and_label_1.setFont(font)
        self.and_label_1.setObjectName("and_label_1")
        self.parameters_button_layout_1.addWidget(self.and_label_1)
        self.Use_pushButton_1 = QtWidgets.QPushButton(self.parameters)
        self.Use_pushButton_1.setEnabled(False)
        self.Use_pushButton_1.setMinimumSize(QtCore.QSize(0, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(10)
        self.Use_pushButton_1.setFont(font)
        self.Use_pushButton_1.setObjectName("Use_pushButton_1")
        self.parameters_button_layout_1.addWidget(self.Use_pushButton_1)
        self.verticalLayout_2.addLayout(self.parameters_button_layout_1)
        self.parameters_TableWidget_1.raise_()
        self.parameters_instruction_lablel_1.raise_()
        self.tabWidget_2.addTab(self.parameters, "")
        self.layoutWidget2 = QtWidgets.QWidget(self.splitter_3)
        self.layoutWidget2.setObjectName("layoutWidget2")
        self.verticalLayout_14 = QtWidgets.QVBoxLayout(self.layoutWidget2)
        self.verticalLayout_14.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_14.setObjectName("verticalLayout_14")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.i_already_have_data_radioButton = QtWidgets.QRadioButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(14)
        self.i_already_have_data_radioButton.setFont(font)
        self.i_already_have_data_radioButton.setObjectName("i_already_have_data_radioButton")
        self.horizontalLayout.addWidget(self.i_already_have_data_radioButton)
        self.import_pushButton_1 = QtWidgets.QPushButton(self.layoutWidget2)
        self.import_pushButton_1.setEnabled(False)
        self.import_pushButton_1.setMinimumSize(QtCore.QSize(0, 31))
        font = QtGui.QFont()
        font.setFamily("Microsoft New Tai Lue")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.import_pushButton_1.setFont(font)
        self.import_pushButton_1.setObjectName("import_pushButton_1")
        self.horizontalLayout.addWidget(self.import_pushButton_1)
        spacerItem123 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem123)
        self.verticalLayout_14.addLayout(self.horizontalLayout)
        self.ramp_advance_groupbox_1 = QtWidgets.QGroupBox(self.layoutWidget2)
        self.ramp_advance_groupbox_1.setEnabled(True)
        self.ramp_advance_groupbox_1.setMinimumSize(QtCore.QSize(0, 142))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(11)
        self.ramp_advance_groupbox_1.setFont(font)
        self.ramp_advance_groupbox_1.setObjectName("ramp_advance_groupbox_1")
        self.label_131 = QtWidgets.QLabel(self.ramp_advance_groupbox_1)
        self.label_131.setGeometry(QtCore.QRect(917, 115, 16, 16))
        self.label_131.setText("")
        self.label_131.setObjectName("label_131")
        self.label_133 = QtWidgets.QLabel(self.ramp_advance_groupbox_1)
        self.label_133.setGeometry(QtCore.QRect(1220, 60, 42, 16))
        self.label_133.setText("")
        self.label_133.setObjectName("label_133")
        self.line_2 = QtWidgets.QFrame(self.ramp_advance_groupbox_1)
        self.line_2.setGeometry(QtCore.QRect(830, 40, 16, 87))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.layoutWidget3 = QtWidgets.QWidget(self.ramp_advance_groupbox_1)
        self.layoutWidget3.setGeometry(QtCore.QRect(510, 50, 311, 61))
        self.layoutWidget3.setObjectName("layoutWidget3")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.layoutWidget3)
        self.verticalLayout_12.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.selected_user_list_label_1 = QtWidgets.QLabel(self.layoutWidget3)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.selected_user_list_label_1.setFont(font)
        self.selected_user_list_label_1.setObjectName("selected_user_list_label_1")
        self.verticalLayout_12.addWidget(self.selected_user_list_label_1)
        self.selected_user_lineEdit_1 = QtWidgets.QLineEdit(self.layoutWidget3)
        self.selected_user_lineEdit_1.setEnabled(False)
        self.selected_user_lineEdit_1.setMinimumSize(QtCore.QSize(0, 31))
        self.selected_user_lineEdit_1.setObjectName("selected_user_lineEdit_1")
        self.verticalLayout_12.addWidget(self.selected_user_lineEdit_1)
        self.layoutWidget4 = QtWidgets.QWidget(self.ramp_advance_groupbox_1)
        self.layoutWidget4.setGeometry(QtCore.QRect(850, 30, 191, 101))
        self.layoutWidget4.setObjectName("layoutWidget4")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.layoutWidget4)
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.dateEdit_label_2 = QtWidgets.QLabel(self.layoutWidget4)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.dateEdit_label_2.setFont(font)
        self.dateEdit_label_2.setObjectName("dateEdit_label_2")
        self.verticalLayout_10.addWidget(self.dateEdit_label_2)
        self.start_dateEdit_2 = QtWidgets.QDateEdit(self.layoutWidget4)
        self.start_dateEdit_2.setEnabled(False)
        self.start_dateEdit_2.setMinimumSize(QtCore.QSize(0, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.start_dateEdit_2.setFont(font)
        self.start_dateEdit_2.setObjectName("start_dateEdit_2")
        self.verticalLayout_10.addWidget(self.start_dateEdit_2)
        self.ddmmyyyy_label_2 = QtWidgets.QLabel(self.layoutWidget4)
        font = QtGui.QFont()
        font.setPointSize(8)
        self.ddmmyyyy_label_2.setFont(font)
        self.ddmmyyyy_label_2.setObjectName("ddmmyyyy_label_2")
        self.verticalLayout_10.addWidget(self.ddmmyyyy_label_2)
        self.layoutWidget5 = QtWidgets.QWidget(self.ramp_advance_groupbox_1)
        self.layoutWidget5.setGeometry(QtCore.QRect(1050, 30, 181, 101))
        self.layoutWidget5.setObjectName("layoutWidget5")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.layoutWidget5)
        self.verticalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.ndays_label_2 = QtWidgets.QLabel(self.layoutWidget5)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.ndays_label_2.setFont(font)
        self.ndays_label_2.setObjectName("ndays_label_2")
        self.verticalLayout_11.addWidget(self.ndays_label_2)
        self.ndays_spinBox_2 = QtWidgets.QSpinBox(self.layoutWidget5)
        self.ndays_spinBox_2.setEnabled(False)
        self.ndays_spinBox_2.setMinimumSize(QtCore.QSize(0, 41))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.ndays_spinBox_2.setFont(font)
        self.ndays_spinBox_2.setMaximum(366)
        self.ndays_spinBox_2.setObjectName("ndays_spinBox_2")
        self.verticalLayout_11.addWidget(self.ndays_spinBox_2)
        self._2 = QtWidgets.QLabel(self.layoutWidget5)
        self._2.setMaximumSize(QtCore.QSize(141, 16777215))
        font = QtGui.QFont()
        font.setPointSize(9)
        self._2.setFont(font)
        self._2.setObjectName("_2")
        self.verticalLayout_11.addWidget(self._2)
        self.for_all_users_radioButton_1 = QtWidgets.QRadioButton(self.ramp_advance_groupbox_1)
        self.for_all_users_radioButton_1.setEnabled(False)
        self.for_all_users_radioButton_1.setGeometry(QtCore.QRect(20, 30, 141, 18))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.for_all_users_radioButton_1.setFont(font)
        self.for_all_users_radioButton_1.setObjectName("for_all_users_radioButton_1")
        self.selected_users_radioButton_1 = QtWidgets.QRadioButton(self.ramp_advance_groupbox_1)
        self.selected_users_radioButton_1.setEnabled(False)
        self.selected_users_radioButton_1.setGeometry(QtCore.QRect(20, 90, 151, 18))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.selected_users_radioButton_1.setFont(font)
        self.selected_users_radioButton_1.setObjectName("selected_users_radioButton_1")
        self.select_user_comboBox_1 = QtWidgets.QComboBox(self.ramp_advance_groupbox_1)
        self.select_user_comboBox_1.setEnabled(False)
        self.select_user_comboBox_1.setGeometry(QtCore.QRect(160, 80, 251, 31))
        self.select_user_comboBox_1.setMinimumSize(QtCore.QSize(0, 31))
        self.select_user_comboBox_1.setObjectName("select_user_comboBox_1")
        self.add_to_list_pushButton_1 = QtWidgets.QPushButton(self.ramp_advance_groupbox_1)
        self.add_to_list_pushButton_1.setEnabled(False)
        self.add_to_list_pushButton_1.setGeometry(QtCore.QRect(420, 80, 80, 31))
        self.add_to_list_pushButton_1.setMinimumSize(QtCore.QSize(0, 31))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.add_to_list_pushButton_1.setFont(font)
        self.add_to_list_pushButton_1.setObjectName("add_to_list_pushButton_1")
        self.verticalLayout_14.addWidget(self.ramp_advance_groupbox_1)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.set_title_label_2 = QtWidgets.QLabel(self.layoutWidget2)
        self.set_title_label_2.setMinimumSize(QtCore.QSize(0, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.set_title_label_2.setFont(font)
        self.set_title_label_2.setObjectName("set_title_label_2")
        self.horizontalLayout_2.addWidget(self.set_title_label_2)
        self.set_title_lineEdit_2 = QtWidgets.QLineEdit(self.layoutWidget2)
        self.set_title_lineEdit_2.setEnabled(False)
        self.set_title_lineEdit_2.setMinimumSize(QtCore.QSize(0, 31))
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        self.set_title_lineEdit_2.setFont(font)
        self.set_title_lineEdit_2.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.set_title_lineEdit_2.setObjectName("set_title_lineEdit_2")
        self.horizontalLayout_2.addWidget(self.set_title_lineEdit_2)
        spacerItem124 = QtWidgets.QSpacerItem(118, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem124)
        self.set_title_label_3 = QtWidgets.QLabel(self.layoutWidget2)
        self.set_title_label_3.setMinimumSize(QtCore.QSize(0, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.set_title_label_3.setFont(font)
        self.set_title_label_3.setObjectName("set_title_label_3")
        self.horizontalLayout_2.addWidget(self.set_title_label_3)
        self.set_title_lineEdit_3 = QtWidgets.QLineEdit(self.layoutWidget2)
        self.set_title_lineEdit_3.setEnabled(False)
        font = QtGui.QFont()
        font.setFamily("Calibri")
        font.setPointSize(12)
        self.set_title_lineEdit_3.setFont(font)
        self.set_title_lineEdit_3.setObjectName("set_title_lineEdit_3")
        self.horizontalLayout_2.addWidget(self.set_title_lineEdit_3)
        spacerItem125 = QtWidgets.QSpacerItem(148, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem125)
        self.simulate_pushButton_2 = QtWidgets.QPushButton(self.layoutWidget2)
        self.simulate_pushButton_2.setEnabled(False)
        self.simulate_pushButton_2.setMinimumSize(QtCore.QSize(150, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.simulate_pushButton_2.setFont(font)
        self.simulate_pushButton_2.setStyleSheet("background-color: rgb(157, 157, 157);")
        self.simulate_pushButton_2.setDefault(False)
        self.simulate_pushButton_2.setFlat(False)
        self.simulate_pushButton_2.setObjectName("simulate_pushButton_2")
        self.horizontalLayout_2.addWidget(self.simulate_pushButton_2)
        self.verticalLayout_14.addLayout(self.horizontalLayout_2)
        self.Ramp_advance_graphicsview_1 = QtWidgets.QGraphicsView(self.layoutWidget2)
        self.Ramp_advance_graphicsview_1.setEnabled(False)
        self.Ramp_advance_graphicsview_1.setObjectName("Ramp_advance_graphicsview_1")
        self.verticalLayout_14.addWidget(self.Ramp_advance_graphicsview_1)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.timestamp_label_2 = QtWidgets.QLabel(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.timestamp_label_2.setFont(font)
        self.timestamp_label_2.setObjectName("timestamp_label_2")
        self.horizontalLayout_4.addWidget(self.timestamp_label_2)
        self.Minute_radioButton_2 = QtWidgets.QRadioButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Minute_radioButton_2.setFont(font)
        self.Minute_radioButton_2.setChecked(True)
        self.Minute_radioButton_2.setObjectName("Minute_radioButton_2")
        self.horizontalLayout_4.addWidget(self.Minute_radioButton_2)
        self.FifteenMinute_radioButton_2 = QtWidgets.QRadioButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.FifteenMinute_radioButton_2.setFont(font)
        self.FifteenMinute_radioButton_2.setObjectName("FifteenMinute_radioButton_2")
        self.horizontalLayout_4.addWidget(self.FifteenMinute_radioButton_2)
        self.Hourly_radioButton_2 = QtWidgets.QRadioButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Hourly_radioButton_2.setFont(font)
        self.Hourly_radioButton_2.setObjectName("Hourly_radioButton_2")
        self.horizontalLayout_4.addWidget(self.Hourly_radioButton_2)
        self.Daily_radioButton_2 = QtWidgets.QRadioButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Daily_radioButton_2.setFont(font)
        self.Daily_radioButton_2.setObjectName("Daily_radioButton_2")
        self.horizontalLayout_4.addWidget(self.Daily_radioButton_2)
        self.Monthly_radioButton_2 = QtWidgets.QRadioButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.Monthly_radioButton_2.setFont(font)
        self.Monthly_radioButton_2.setObjectName("Monthly_radioButton_2")
        self.horizontalLayout_4.addWidget(self.Monthly_radioButton_2)
        self.barchart_radioButton_2 = QtWidgets.QRadioButton(self.layoutWidget2)
        font = QtGui.QFont()
        font.setFamily("MS Shell Dlg 2")
        font.setPointSize(10)
        self.barchart_radioButton_2.setFont(font)
        self.barchart_radioButton_2.setObjectName("barchart_radioButton_2")
        self.horizontalLayout_4.addWidget(self.barchart_radioButton_2)
        self.generate_pushButton_2 = QtWidgets.QPushButton(self.layoutWidget2)
        self.generate_pushButton_2.setEnabled(False)
        self.generate_pushButton_2.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.generate_pushButton_2.setFont(font)
        self.generate_pushButton_2.setObjectName("generate_pushButton_2")
        self.horizontalLayout_4.addWidget(self.generate_pushButton_2)
        spacerItem126 = QtWidgets.QSpacerItem(248, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem126)
        self.save_image_pushButton_1 = QtWidgets.QPushButton(self.layoutWidget2)
        self.save_image_pushButton_1.setEnabled(False)
        self.save_image_pushButton_1.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.save_image_pushButton_1.setFont(font)
        self.save_image_pushButton_1.setObjectName("save_image_pushButton_1")
        self.horizontalLayout_4.addWidget(self.save_image_pushButton_1)
        self.save_image_pushButton_2 = QtWidgets.QPushButton(self.layoutWidget2)
        self.save_image_pushButton_2.setEnabled(False)
        self.save_image_pushButton_2.setMinimumSize(QtCore.QSize(0, 35))
        self.save_image_pushButton_2.setMaximumSize(QtCore.QSize(35, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.save_image_pushButton_2.setFont(font)
        self.save_image_pushButton_2.setObjectName("save_image_pushButton_2")
        self.horizontalLayout_4.addWidget(self.save_image_pushButton_2)
        spacerItem127 = QtWidgets.QSpacerItem(178, 17, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem127)
        self.save_csv_pushButton_1 = QtWidgets.QPushButton(self.layoutWidget2)
        self.save_csv_pushButton_1.setEnabled(False)
        self.save_csv_pushButton_1.setMinimumSize(QtCore.QSize(0, 35))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.save_csv_pushButton_1.setFont(font)
        self.save_csv_pushButton_1.setObjectName("save_csv_pushButton_1")
        self.horizontalLayout_4.addWidget(self.save_csv_pushButton_1)
        self.save_csv_pushButton_2 = QtWidgets.QPushButton(self.layoutWidget2)
        self.save_csv_pushButton_2.setEnabled(False)
        self.save_csv_pushButton_2.setMinimumSize(QtCore.QSize(0, 35))
        self.save_csv_pushButton_2.setMaximumSize(QtCore.QSize(35, 16777215))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.save_csv_pushButton_2.setFont(font)
        self.save_csv_pushButton_2.setObjectName("save_csv_pushButton_2")
        self.horizontalLayout_4.addWidget(self.save_csv_pushButton_2)
        self.verticalLayout_14.addLayout(self.horizontalLayout_4)
        self.gridLayout_32.addWidget(self.splitter_3, 0, 0, 1, 1)
        self.tabWidget.addTab(self.Ramp_Advance_tab, "")
        self.Tree_view_tab = QtWidgets.QWidget()
        self.Tree_view_tab.setObjectName("Tree_view_tab")
        self.gridLayout_35 = QtWidgets.QGridLayout(self.Tree_view_tab)
        self.gridLayout_35.setObjectName("gridLayout_35")
        self.treeView_1 = QtWidgets.QTreeView(self.Tree_view_tab)
        self.treeView_1.setEnabled(True)
        self.treeView_1.setObjectName("treeView_1")
        self.gridLayout_35.addWidget(self.treeView_1, 0, 0, 1, 1)
        self.tabWidget.addTab(self.Tree_view_tab, "")
        self.Help_tab = QtWidgets.QWidget()
        self.Help_tab.setObjectName("Help_tab")
        self.gridLayout_33 = QtWidgets.QGridLayout(self.Help_tab)
        self.gridLayout_33.setObjectName("gridLayout_33")
        self.horizontalLayout_14 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_14.setObjectName("horizontalLayout_14")
        self.label = QtWidgets.QLabel(self.Help_tab)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setOpenExternalLinks(True)
        self.label.setObjectName("label")
        self.horizontalLayout_14.addWidget(self.label)
        spacerItem128 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem128)
        self.label_2 = QtWidgets.QLabel(self.Help_tab)
        self.label_2.setMaximumSize(QtCore.QSize(16777215, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setOpenExternalLinks(True)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_14.addWidget(self.label_2)
        spacerItem129 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem129)
        self.label_9 = QtWidgets.QLabel(self.Help_tab)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_9.setFont(font)
        self.label_9.setOpenExternalLinks(True)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_14.addWidget(self.label_9)
        spacerItem130 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem130)
        spacerItem131 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem131)
        spacerItem132 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem132)
        spacerItem133 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem133)
        spacerItem134 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem134)
        spacerItem135 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem135)
        spacerItem136 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem136)
        spacerItem137 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem137)
        spacerItem138 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem138)
        spacerItem139 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem139)
        spacerItem140 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem140)
        spacerItem141 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem141)
        spacerItem142 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem142)
        spacerItem143 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem143)
        spacerItem144 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem144)
        spacerItem145 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem145)
        spacerItem146 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_14.addItem(spacerItem146)
        self.gridLayout_33.addLayout(self.horizontalLayout_14, 0, 0, 1, 1)
        self.horizontalLayout_15 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_15.setObjectName("horizontalLayout_15")
        self.label_11 = QtWidgets.QLabel(self.Help_tab)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_11.setFont(font)
        self.label_11.setOpenExternalLinks(True)
        self.label_11.setObjectName("label_11")
        self.horizontalLayout_15.addWidget(self.label_11)
        spacerItem147 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem147)
        self.label_99 = QtWidgets.QLabel(self.Help_tab)
        self.label_99.setMaximumSize(QtCore.QSize(16777215, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_99.setFont(font)
        self.label_99.setOpenExternalLinks(True)
        self.label_99.setObjectName("label_99")
        self.horizontalLayout_15.addWidget(self.label_99)
        spacerItem148 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem148)
        self.label_100 = QtWidgets.QLabel(self.Help_tab)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_100.setFont(font)
        self.label_100.setOpenExternalLinks(True)
        self.label_100.setObjectName("label_100")
        self.horizontalLayout_15.addWidget(self.label_100)
        spacerItem149 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem149)
        self.label_101 = QtWidgets.QLabel(self.Help_tab)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_101.setFont(font)
        self.label_101.setOpenExternalLinks(True)
        self.label_101.setObjectName("label_101")
        self.horizontalLayout_15.addWidget(self.label_101)
        spacerItem150 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem150)
        spacerItem151 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem151)
        spacerItem152 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem152)
        spacerItem153 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem153)
        spacerItem154 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem154)
        spacerItem155 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem155)
        spacerItem156 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem156)
        spacerItem157 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem157)
        spacerItem158 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem158)
        spacerItem159 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_15.addItem(spacerItem159)
        self.gridLayout_33.addLayout(self.horizontalLayout_15, 1, 0, 1, 1)
        self.label_104 = QtWidgets.QLabel(self.Help_tab)
        self.label_104.setMaximumSize(QtCore.QSize(16777215, 21))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_104.setFont(font)
        self.label_104.setOpenExternalLinks(True)
        self.label_104.setObjectName("label_104")
        self.gridLayout_33.addWidget(self.label_104, 2, 0, 1, 1)
        self.horizontalLayout_13 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_13.setObjectName("horizontalLayout_13")
        self.verticalLayout_16 = QtWidgets.QVBoxLayout()
        self.verticalLayout_16.setObjectName("verticalLayout_16")
        self.label_102 = QtWidgets.QLabel(self.Help_tab)
        font = QtGui.QFont()
        font.setPointSize(22)
        font.setBold(True)
        font.setWeight(75)
        self.label_102.setFont(font)
        self.label_102.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.label_102.setObjectName("label_102")
        self.verticalLayout_16.addWidget(self.label_102)
        self.help_textEdit_ramp_lite = QtWidgets.QTextEdit(self.Help_tab)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.help_textEdit_ramp_lite.setFont(font)
        self.help_textEdit_ramp_lite.setAutoFillBackground(False)
        self.help_textEdit_ramp_lite.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"background-color: rgb(227, 227, 227);\n"
"border-color: rgb(0, 0, 0);")
        self.help_textEdit_ramp_lite.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.help_textEdit_ramp_lite.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.help_textEdit_ramp_lite.setReadOnly(True)
        self.help_textEdit_ramp_lite.setObjectName("help_textEdit_ramp_lite")
        self.verticalLayout_16.addWidget(self.help_textEdit_ramp_lite)
        self.horizontalLayout_13.addLayout(self.verticalLayout_16)
        spacerItem160 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.horizontalLayout_13.addItem(spacerItem160)
        spacerItem161 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.horizontalLayout_13.addItem(spacerItem161)
        spacerItem162 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.horizontalLayout_13.addItem(spacerItem162)
        self.verticalLayout_15 = QtWidgets.QVBoxLayout()
        self.verticalLayout_15.setObjectName("verticalLayout_15")
        self.label_103 = QtWidgets.QLabel(self.Help_tab)
        font = QtGui.QFont()
        font.setPointSize(22)
        font.setBold(True)
        font.setWeight(75)
        self.label_103.setFont(font)
        self.label_103.setStyleSheet("background-color: rgb(207, 207, 207);")
        self.label_103.setObjectName("label_103")
        self.verticalLayout_15.addWidget(self.label_103)
        self.help_textEdit_ramp_advance = QtWidgets.QTextEdit(self.Help_tab)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.help_textEdit_ramp_advance.setFont(font)
        self.help_textEdit_ramp_advance.setAutoFillBackground(False)
        self.help_textEdit_ramp_advance.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"background-color: rgb(235, 235, 235);")
        self.help_textEdit_ramp_advance.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.help_textEdit_ramp_advance.setReadOnly(True)
        self.help_textEdit_ramp_advance.setObjectName("help_textEdit_ramp_advance")
        self.verticalLayout_15.addWidget(self.help_textEdit_ramp_advance)
        self.horizontalLayout_13.addLayout(self.verticalLayout_15)
        self.gridLayout_33.addLayout(self.horizontalLayout_13, 3, 0, 1, 1)
        self.tabWidget.addTab(self.Help_tab, "")
        self.console_1 = QtWidgets.QTextEdit(self.splitter)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.console_1.setFont(font)
        self.console_1.setAutoFillBackground(True)
        self.console_1.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.console_1.setLineWrapMode(QtWidgets.QTextEdit.WidgetWidth)
        self.console_1.setReadOnly(True)
        self.console_1.setObjectName("console_1")
        self.gridLayout_34.addWidget(self.splitter, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1830, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        self.wd_we_comboBox_1.setCurrentIndex(2)
        self.wd_we_comboBox_2.setCurrentIndex(2)
        self.wd_we_comboBox_3.setCurrentIndex(2)
        self.wd_we_comboBox_4.setCurrentIndex(2)
        self.wd_we_comboBox_5.setCurrentIndex(2)
        self.wd_we_comboBox_6.setCurrentIndex(2)
        self.wd_we_comboBox_7.setCurrentIndex(2)
        self.wd_we_comboBox_8.setCurrentIndex(2)
        self.wd_we_comboBox_9.setCurrentIndex(2)
        self.wd_we_comboBox_10.setCurrentIndex(2)
        self.wd_we_comboBox_11.setCurrentIndex(2)
        self.wd_we_comboBox_12.setCurrentIndex(2)
        self.wd_we_comboBox_13.setCurrentIndex(2)
        self.wd_we_comboBox_14.setCurrentIndex(2)
        self.wd_we_comboBox_15.setCurrentIndex(2)
        self.wd_we_comboBox_16.setCurrentIndex(2)
        self.wd_we_comboBox_17.setCurrentIndex(2)
        self.wd_we_comboBox_18.setCurrentIndex(2)
        self.wd_we_comboBox_19.setCurrentIndex(2)
        self.wd_we_comboBox_20.setCurrentIndex(2)
        self.wd_we_comboBox_21.setCurrentIndex(2)
        self.wd_we_comboBox_22.setCurrentIndex(2)
        self.wd_we_comboBox_23.setCurrentIndex(2)
        self.wd_we_comboBox_24.setCurrentIndex(2)
        self.wd_we_comboBox_25.setCurrentIndex(2)
        self.wd_we_comboBox_26.setCurrentIndex(2)
        self.wd_we_comboBox_27.setCurrentIndex(2)
        self.wd_we_comboBox_28.setCurrentIndex(2)
        self.wd_we_comboBox_29.setCurrentIndex(2)
        self.wd_we_comboBox_30.setCurrentIndex(2)
        self.tabWidget_2.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.tabWidget, self.user_name_lineEdit_1)

        MainWindow.setTabOrder(self.appliancename_lineEdit_1, self.Togglebutton_1)
        MainWindow.setTabOrder(self.Togglebutton_1, self.number_spinBox_1)
        MainWindow.setTabOrder(self.number_spinBox_1, self.power_spinBox_1)
        MainWindow.setTabOrder(self.power_spinBox_1, self.function_time_spinBox_1)
        MainWindow.setTabOrder(self.function_time_spinBox_1, self.num_windows_spinBox_1)
        MainWindow.setTabOrder(self.num_windows_spinBox_1, self.occationaluse_spinBox_1)
        MainWindow.setTabOrder(self.occationaluse_spinBox_1, self.wd_we_comboBox_1)
        MainWindow.setTabOrder(self.wd_we_comboBox_1, self.w1start_timeEdit_1)
        MainWindow.setTabOrder(self.w1start_timeEdit_1, self.w1end_timeEdit_1)
        MainWindow.setTabOrder(self.w1end_timeEdit_1, self.w2start_timeEdit_1)
        MainWindow.setTabOrder(self.w2start_timeEdit_1, self.w2end_timeEdit_1)
        MainWindow.setTabOrder(self.w2end_timeEdit_1, self.w3start_timeEdit_1)
        MainWindow.setTabOrder(self.w3start_timeEdit_1, self.w3end_timeEdit_1)
        MainWindow.setTabOrder(self.w3end_timeEdit_1, self.r_var_spinBox_1)
        MainWindow.setTabOrder(self.r_var_spinBox_1, self.tfrv_spinBox_1)
        MainWindow.setTabOrder(self.tfrv_spinBox_1, self.thermal_v_spinBox_1)
        MainWindow.setTabOrder(self.thermal_v_spinBox_1, self.func_cycle_spinBox_1)
        MainWindow.setTabOrder(self.func_cycle_spinBox_1, self.fixe_comboBox_1)
        MainWindow.setTabOrder(self.fixe_comboBox_1, self.flat_comboBox_1)
        MainWindow.setTabOrder(self.flat_comboBox_1, self.appliancename_lineEdit_2)
        MainWindow.setTabOrder(self.appliancename_lineEdit_2, self.Togglebutton_2)
        MainWindow.setTabOrder(self.Togglebutton_2, self.number_spinBox_2)
        MainWindow.setTabOrder(self.number_spinBox_2, self.power_spinBox_2)
        MainWindow.setTabOrder(self.power_spinBox_2, self.function_time_spinBox_2)
        MainWindow.setTabOrder(self.function_time_spinBox_2, self.num_windows_spinBox_2)
        MainWindow.setTabOrder(self.num_windows_spinBox_2, self.occationaluse_spinBox_2)
        MainWindow.setTabOrder(self.occationaluse_spinBox_2, self.wd_we_comboBox_2)
        MainWindow.setTabOrder(self.wd_we_comboBox_2, self.w1start_timeEdit_2)
        MainWindow.setTabOrder(self.w1start_timeEdit_2, self.w1end_timeEdit_2)
        MainWindow.setTabOrder(self.w1end_timeEdit_2, self.w2start_timeEdit_2)
        MainWindow.setTabOrder(self.w2start_timeEdit_2, self.w2end_timeEdit_2)
        MainWindow.setTabOrder(self.w2end_timeEdit_2, self.w3start_timeEdit_2)
        MainWindow.setTabOrder(self.w3start_timeEdit_2, self.w3end_timeEdit_2)
        MainWindow.setTabOrder(self.w3end_timeEdit_2, self.r_var_spinBox_2)
        MainWindow.setTabOrder(self.r_var_spinBox_2, self.func_cycle_spinBox_2)
        MainWindow.setTabOrder(self.func_cycle_spinBox_2, self.tfrv_spinBox_2)
        MainWindow.setTabOrder(self.tfrv_spinBox_2, self.flat_comboBox_2)
        MainWindow.setTabOrder(self.flat_comboBox_2, self.thermal_v_spinBox_2)
        MainWindow.setTabOrder(self.thermal_v_spinBox_2, self.fixe_comboBox_2)
        MainWindow.setTabOrder(self.fixe_comboBox_2, self.appliancename_lineEdit_3)
        MainWindow.setTabOrder(self.appliancename_lineEdit_3, self.Togglebutton_3)
        MainWindow.setTabOrder(self.Togglebutton_3, self.number_spinBox_3)
        MainWindow.setTabOrder(self.number_spinBox_3, self.power_spinBox_3)
        MainWindow.setTabOrder(self.power_spinBox_3, self.function_time_spinBox_3)
        MainWindow.setTabOrder(self.function_time_spinBox_3, self.num_windows_spinBox_3)
        MainWindow.setTabOrder(self.num_windows_spinBox_3, self.occationaluse_spinBox_3)
        MainWindow.setTabOrder(self.occationaluse_spinBox_3, self.wd_we_comboBox_3)
        MainWindow.setTabOrder(self.wd_we_comboBox_3, self.w1start_timeEdit_3)
        MainWindow.setTabOrder(self.w1start_timeEdit_3, self.w1end_timeEdit_3)
        MainWindow.setTabOrder(self.w1end_timeEdit_3, self.w2start_timeEdit_3)
        MainWindow.setTabOrder(self.w2start_timeEdit_3, self.w2end_timeEdit_3)
        MainWindow.setTabOrder(self.w2end_timeEdit_3, self.w3start_timeEdit_3)
        MainWindow.setTabOrder(self.w3start_timeEdit_3, self.w3end_timeEdit_3)
        MainWindow.setTabOrder(self.w3end_timeEdit_3, self.r_var_spinBox_3)
        MainWindow.setTabOrder(self.r_var_spinBox_3, self.tfrv_spinBox_3)
        MainWindow.setTabOrder(self.tfrv_spinBox_3, self.thermal_v_spinBox_3)
        MainWindow.setTabOrder(self.thermal_v_spinBox_3, self.func_cycle_spinBox_3)
        MainWindow.setTabOrder(self.func_cycle_spinBox_3, self.fixe_comboBox_3)
        MainWindow.setTabOrder(self.fixe_comboBox_3, self.flat_comboBox_3)
        MainWindow.setTabOrder(self.flat_comboBox_3, self.appliancename_lineEdit_4)
        MainWindow.setTabOrder(self.appliancename_lineEdit_4, self.Togglebutton_4)
        MainWindow.setTabOrder(self.Togglebutton_4, self.power_spinBox_4)
        MainWindow.setTabOrder(self.power_spinBox_4, self.number_spinBox_4)
        MainWindow.setTabOrder(self.number_spinBox_4, self.r_var_spinBox_4)
        MainWindow.setTabOrder(self.r_var_spinBox_4, self.wd_we_comboBox_4)
        MainWindow.setTabOrder(self.wd_we_comboBox_4, self.num_windows_spinBox_4)
        MainWindow.setTabOrder(self.num_windows_spinBox_4, self.function_time_spinBox_4)
        MainWindow.setTabOrder(self.function_time_spinBox_4, self.occationaluse_spinBox_4)
        MainWindow.setTabOrder(self.occationaluse_spinBox_4, self.func_cycle_spinBox_4)
        MainWindow.setTabOrder(self.func_cycle_spinBox_4, self.tfrv_spinBox_4)
        MainWindow.setTabOrder(self.tfrv_spinBox_4, self.flat_comboBox_4)
        MainWindow.setTabOrder(self.flat_comboBox_4, self.thermal_v_spinBox_4)
        MainWindow.setTabOrder(self.thermal_v_spinBox_4, self.fixe_comboBox_4)
        MainWindow.setTabOrder(self.fixe_comboBox_4, self.w1start_timeEdit_4)
        MainWindow.setTabOrder(self.w1start_timeEdit_4, self.w1end_timeEdit_4)
        MainWindow.setTabOrder(self.w1end_timeEdit_4, self.w2start_timeEdit_4)
        MainWindow.setTabOrder(self.w2start_timeEdit_4, self.w2end_timeEdit_4)
        MainWindow.setTabOrder(self.w2end_timeEdit_4, self.w3start_timeEdit_4)
        MainWindow.setTabOrder(self.w3start_timeEdit_4, self.w3end_timeEdit_4)
        MainWindow.setTabOrder(self.w3end_timeEdit_4, self.appliancename_lineEdit_5)
        MainWindow.setTabOrder(self.appliancename_lineEdit_5, self.Togglebutton_5)
        MainWindow.setTabOrder(self.Togglebutton_5, self.power_spinBox_5)
        MainWindow.setTabOrder(self.power_spinBox_5, self.number_spinBox_5)
        MainWindow.setTabOrder(self.number_spinBox_5, self.r_var_spinBox_5)
        MainWindow.setTabOrder(self.r_var_spinBox_5, self.wd_we_comboBox_5)
        MainWindow.setTabOrder(self.wd_we_comboBox_5, self.num_windows_spinBox_5)
        MainWindow.setTabOrder(self.num_windows_spinBox_5, self.function_time_spinBox_5)
        MainWindow.setTabOrder(self.function_time_spinBox_5, self.occationaluse_spinBox_5)
        MainWindow.setTabOrder(self.occationaluse_spinBox_5, self.func_cycle_spinBox_5)
        MainWindow.setTabOrder(self.func_cycle_spinBox_5, self.tfrv_spinBox_5)
        MainWindow.setTabOrder(self.tfrv_spinBox_5, self.flat_comboBox_5)
        MainWindow.setTabOrder(self.flat_comboBox_5, self.thermal_v_spinBox_5)
        MainWindow.setTabOrder(self.thermal_v_spinBox_5, self.fixe_comboBox_5)
        MainWindow.setTabOrder(self.fixe_comboBox_5, self.w1start_timeEdit_5)
        MainWindow.setTabOrder(self.w1start_timeEdit_5, self.w1end_timeEdit_5)
        MainWindow.setTabOrder(self.w1end_timeEdit_5, self.w2start_timeEdit_5)
        MainWindow.setTabOrder(self.w2start_timeEdit_5, self.w2end_timeEdit_5)
        MainWindow.setTabOrder(self.w2end_timeEdit_5, self.w3start_timeEdit_5)
        MainWindow.setTabOrder(self.w3start_timeEdit_5, self.w3end_timeEdit_5)
        MainWindow.setTabOrder(self.w3end_timeEdit_5, self.appliancename_lineEdit_6)
        MainWindow.setTabOrder(self.appliancename_lineEdit_6, self.Togglebutton_6)
        MainWindow.setTabOrder(self.Togglebutton_6, self.power_spinBox_6)
        MainWindow.setTabOrder(self.power_spinBox_6, self.number_spinBox_6)
        MainWindow.setTabOrder(self.number_spinBox_6, self.r_var_spinBox_6)
        MainWindow.setTabOrder(self.r_var_spinBox_6, self.wd_we_comboBox_6)
        MainWindow.setTabOrder(self.wd_we_comboBox_6, self.num_windows_spinBox_6)
        MainWindow.setTabOrder(self.num_windows_spinBox_6, self.function_time_spinBox_6)
        MainWindow.setTabOrder(self.function_time_spinBox_6, self.occationaluse_spinBox_6)
        MainWindow.setTabOrder(self.occationaluse_spinBox_6, self.func_cycle_spinBox_6)
        MainWindow.setTabOrder(self.func_cycle_spinBox_6, self.tfrv_spinBox_6)
        MainWindow.setTabOrder(self.tfrv_spinBox_6, self.flat_comboBox_6)
        MainWindow.setTabOrder(self.flat_comboBox_6, self.thermal_v_spinBox_6)
        MainWindow.setTabOrder(self.thermal_v_spinBox_6, self.fixe_comboBox_6)
        MainWindow.setTabOrder(self.fixe_comboBox_6, self.w1start_timeEdit_6)
        MainWindow.setTabOrder(self.w1start_timeEdit_6, self.w1end_timeEdit_6)
        MainWindow.setTabOrder(self.w1end_timeEdit_6, self.w2start_timeEdit_6)
        MainWindow.setTabOrder(self.w2start_timeEdit_6, self.w2end_timeEdit_6)
        MainWindow.setTabOrder(self.w2end_timeEdit_6, self.w3start_timeEdit_6)
        MainWindow.setTabOrder(self.w3start_timeEdit_6, self.w3end_timeEdit_6)
        MainWindow.setTabOrder(self.w3end_timeEdit_6, self.appliancename_lineEdit_7)
        MainWindow.setTabOrder(self.appliancename_lineEdit_7, self.Togglebutton_7)
        MainWindow.setTabOrder(self.Togglebutton_7, self.power_spinBox_7)
        MainWindow.setTabOrder(self.power_spinBox_7, self.number_spinBox_7)
        MainWindow.setTabOrder(self.number_spinBox_7, self.r_var_spinBox_7)
        MainWindow.setTabOrder(self.r_var_spinBox_7, self.wd_we_comboBox_7)
        MainWindow.setTabOrder(self.wd_we_comboBox_7, self.num_windows_spinBox_7)
        MainWindow.setTabOrder(self.num_windows_spinBox_7, self.function_time_spinBox_7)
        MainWindow.setTabOrder(self.function_time_spinBox_7, self.occationaluse_spinBox_7)
        MainWindow.setTabOrder(self.occationaluse_spinBox_7, self.func_cycle_spinBox_7)
        MainWindow.setTabOrder(self.func_cycle_spinBox_7, self.tfrv_spinBox_7)
        MainWindow.setTabOrder(self.tfrv_spinBox_7, self.flat_comboBox_7)
        MainWindow.setTabOrder(self.flat_comboBox_7, self.thermal_v_spinBox_7)
        MainWindow.setTabOrder(self.thermal_v_spinBox_7, self.fixe_comboBox_7)
        MainWindow.setTabOrder(self.fixe_comboBox_7, self.w1start_timeEdit_7)
        MainWindow.setTabOrder(self.w1start_timeEdit_7, self.w1end_timeEdit_7)
        MainWindow.setTabOrder(self.w1end_timeEdit_7, self.w2start_timeEdit_7)
        MainWindow.setTabOrder(self.w2start_timeEdit_7, self.w2end_timeEdit_7)
        MainWindow.setTabOrder(self.w2end_timeEdit_7, self.w3start_timeEdit_7)
        MainWindow.setTabOrder(self.w3start_timeEdit_7, self.w3end_timeEdit_7)
        MainWindow.setTabOrder(self.w3end_timeEdit_7, self.appliancename_lineEdit_8)
        MainWindow.setTabOrder(self.appliancename_lineEdit_8, self.Togglebutton_8)
        MainWindow.setTabOrder(self.Togglebutton_8, self.power_spinBox_8)
        MainWindow.setTabOrder(self.power_spinBox_8, self.number_spinBox_8)
        MainWindow.setTabOrder(self.number_spinBox_8, self.r_var_spinBox_8)
        MainWindow.setTabOrder(self.r_var_spinBox_8, self.wd_we_comboBox_8)
        MainWindow.setTabOrder(self.wd_we_comboBox_8, self.num_windows_spinBox_8)
        MainWindow.setTabOrder(self.num_windows_spinBox_8, self.function_time_spinBox_8)
        MainWindow.setTabOrder(self.function_time_spinBox_8, self.occationaluse_spinBox_8)
        MainWindow.setTabOrder(self.occationaluse_spinBox_8, self.func_cycle_spinBox_8)
        MainWindow.setTabOrder(self.func_cycle_spinBox_8, self.tfrv_spinBox_8)
        MainWindow.setTabOrder(self.tfrv_spinBox_8, self.flat_comboBox_8)
        MainWindow.setTabOrder(self.flat_comboBox_8, self.thermal_v_spinBox_8)
        MainWindow.setTabOrder(self.thermal_v_spinBox_8, self.fixe_comboBox_8)
        MainWindow.setTabOrder(self.fixe_comboBox_8, self.w1start_timeEdit_8)
        MainWindow.setTabOrder(self.w1start_timeEdit_8, self.w1end_timeEdit_8)
        MainWindow.setTabOrder(self.w1end_timeEdit_8, self.w2start_timeEdit_8)
        MainWindow.setTabOrder(self.w2start_timeEdit_8, self.w2end_timeEdit_8)
        MainWindow.setTabOrder(self.w2end_timeEdit_8, self.w3start_timeEdit_8)
        MainWindow.setTabOrder(self.w3start_timeEdit_8, self.w3end_timeEdit_8)
        MainWindow.setTabOrder(self.w3end_timeEdit_8, self.appliancename_lineEdit_9)
        MainWindow.setTabOrder(self.appliancename_lineEdit_9, self.Togglebutton_9)
        MainWindow.setTabOrder(self.Togglebutton_9, self.power_spinBox_9)
        MainWindow.setTabOrder(self.power_spinBox_9, self.number_spinBox_9)
        MainWindow.setTabOrder(self.number_spinBox_9, self.r_var_spinBox_9)
        MainWindow.setTabOrder(self.r_var_spinBox_9, self.wd_we_comboBox_9)
        MainWindow.setTabOrder(self.wd_we_comboBox_9, self.num_windows_spinBox_9)
        MainWindow.setTabOrder(self.num_windows_spinBox_9, self.function_time_spinBox_9)
        MainWindow.setTabOrder(self.function_time_spinBox_9, self.occationaluse_spinBox_9)
        MainWindow.setTabOrder(self.occationaluse_spinBox_9, self.func_cycle_spinBox_9)
        MainWindow.setTabOrder(self.func_cycle_spinBox_9, self.tfrv_spinBox_9)
        MainWindow.setTabOrder(self.tfrv_spinBox_9, self.flat_comboBox_9)
        MainWindow.setTabOrder(self.flat_comboBox_9, self.thermal_v_spinBox_9)
        MainWindow.setTabOrder(self.thermal_v_spinBox_9, self.fixe_comboBox_9)
        MainWindow.setTabOrder(self.fixe_comboBox_9, self.w1start_timeEdit_9)
        MainWindow.setTabOrder(self.w1start_timeEdit_9, self.w1end_timeEdit_9)
        MainWindow.setTabOrder(self.w1end_timeEdit_9, self.w2start_timeEdit_9)
        MainWindow.setTabOrder(self.w2start_timeEdit_9, self.w2end_timeEdit_9)
        MainWindow.setTabOrder(self.w2end_timeEdit_9, self.w3start_timeEdit_9)
        MainWindow.setTabOrder(self.w3start_timeEdit_9, self.w3end_timeEdit_9)
        MainWindow.setTabOrder(self.w3end_timeEdit_9, self.appliancename_lineEdit_10)
        MainWindow.setTabOrder(self.appliancename_lineEdit_10, self.Togglebutton_10)
        MainWindow.setTabOrder(self.Togglebutton_10, self.power_spinBox_10)
        MainWindow.setTabOrder(self.power_spinBox_10, self.number_spinBox_10)
        MainWindow.setTabOrder(self.number_spinBox_10, self.r_var_spinBox_10)
        MainWindow.setTabOrder(self.r_var_spinBox_10, self.wd_we_comboBox_10)
        MainWindow.setTabOrder(self.wd_we_comboBox_10, self.num_windows_spinBox_10)
        MainWindow.setTabOrder(self.num_windows_spinBox_10, self.function_time_spinBox_10)
        MainWindow.setTabOrder(self.function_time_spinBox_10, self.occationaluse_spinBox_10)
        MainWindow.setTabOrder(self.occationaluse_spinBox_10, self.func_cycle_spinBox_10)
        MainWindow.setTabOrder(self.func_cycle_spinBox_10, self.tfrv_spinBox_10)
        MainWindow.setTabOrder(self.tfrv_spinBox_10, self.flat_comboBox_10)
        MainWindow.setTabOrder(self.flat_comboBox_10, self.thermal_v_spinBox_10)
        MainWindow.setTabOrder(self.thermal_v_spinBox_10, self.fixe_comboBox_10)
        MainWindow.setTabOrder(self.fixe_comboBox_10, self.w1start_timeEdit_10)
        MainWindow.setTabOrder(self.w1start_timeEdit_10, self.w1end_timeEdit_10)
        MainWindow.setTabOrder(self.w1end_timeEdit_10, self.w2start_timeEdit_10)
        MainWindow.setTabOrder(self.w2start_timeEdit_10, self.w2end_timeEdit_10)
        MainWindow.setTabOrder(self.w2end_timeEdit_10, self.w3start_timeEdit_10)
        MainWindow.setTabOrder(self.w3start_timeEdit_10, self.w3end_timeEdit_10)
        MainWindow.setTabOrder(self.w3end_timeEdit_10, self.appliancename_lineEdit_11)
        MainWindow.setTabOrder(self.appliancename_lineEdit_11, self.Togglebutton_11)
        MainWindow.setTabOrder(self.Togglebutton_11, self.power_spinBox_11)
        MainWindow.setTabOrder(self.power_spinBox_11, self.number_spinBox_11)
        MainWindow.setTabOrder(self.number_spinBox_11, self.r_var_spinBox_11)
        MainWindow.setTabOrder(self.r_var_spinBox_11, self.wd_we_comboBox_11)
        MainWindow.setTabOrder(self.wd_we_comboBox_11, self.num_windows_spinBox_11)
        MainWindow.setTabOrder(self.num_windows_spinBox_11, self.function_time_spinBox_11)
        MainWindow.setTabOrder(self.function_time_spinBox_11, self.occationaluse_spinBox_11)
        MainWindow.setTabOrder(self.occationaluse_spinBox_11, self.func_cycle_spinBox_11)
        MainWindow.setTabOrder(self.func_cycle_spinBox_11, self.tfrv_spinBox_11)
        MainWindow.setTabOrder(self.tfrv_spinBox_11, self.flat_comboBox_11)
        MainWindow.setTabOrder(self.flat_comboBox_11, self.thermal_v_spinBox_11)
        MainWindow.setTabOrder(self.thermal_v_spinBox_11, self.fixe_comboBox_11)
        MainWindow.setTabOrder(self.fixe_comboBox_11, self.w1start_timeEdit_11)
        MainWindow.setTabOrder(self.w1start_timeEdit_11, self.w1end_timeEdit_11)
        MainWindow.setTabOrder(self.w1end_timeEdit_11, self.w2start_timeEdit_11)
        MainWindow.setTabOrder(self.w2start_timeEdit_11, self.w2end_timeEdit_11)
        MainWindow.setTabOrder(self.w2end_timeEdit_11, self.w3start_timeEdit_11)
        MainWindow.setTabOrder(self.w3start_timeEdit_11, self.w3end_timeEdit_11)
        MainWindow.setTabOrder(self.w3end_timeEdit_11, self.appliancename_lineEdit_12)
        MainWindow.setTabOrder(self.appliancename_lineEdit_12, self.Togglebutton_12)
        MainWindow.setTabOrder(self.Togglebutton_12, self.power_spinBox_12)
        MainWindow.setTabOrder(self.power_spinBox_12, self.number_spinBox_12)
        MainWindow.setTabOrder(self.number_spinBox_12, self.r_var_spinBox_12)
        MainWindow.setTabOrder(self.r_var_spinBox_12, self.wd_we_comboBox_12)
        MainWindow.setTabOrder(self.wd_we_comboBox_12, self.num_windows_spinBox_12)
        MainWindow.setTabOrder(self.num_windows_spinBox_12, self.function_time_spinBox_12)
        MainWindow.setTabOrder(self.function_time_spinBox_12, self.occationaluse_spinBox_12)
        MainWindow.setTabOrder(self.occationaluse_spinBox_12, self.func_cycle_spinBox_12)
        MainWindow.setTabOrder(self.func_cycle_spinBox_12, self.tfrv_spinBox_12)
        MainWindow.setTabOrder(self.tfrv_spinBox_12, self.flat_comboBox_12)
        MainWindow.setTabOrder(self.flat_comboBox_12, self.thermal_v_spinBox_12)
        MainWindow.setTabOrder(self.thermal_v_spinBox_12, self.fixe_comboBox_12)
        MainWindow.setTabOrder(self.fixe_comboBox_12, self.w1start_timeEdit_12)
        MainWindow.setTabOrder(self.w1start_timeEdit_12, self.w1end_timeEdit_12)
        MainWindow.setTabOrder(self.w1end_timeEdit_12, self.w2start_timeEdit_12)
        MainWindow.setTabOrder(self.w2start_timeEdit_12, self.w2end_timeEdit_12)
        MainWindow.setTabOrder(self.w2end_timeEdit_12, self.w3start_timeEdit_12)
        MainWindow.setTabOrder(self.w3start_timeEdit_12, self.w3end_timeEdit_12)
        MainWindow.setTabOrder(self.w3end_timeEdit_12, self.appliancename_lineEdit_13)
        MainWindow.setTabOrder(self.appliancename_lineEdit_13, self.Togglebutton_13)
        MainWindow.setTabOrder(self.Togglebutton_13, self.power_spinBox_13)
        MainWindow.setTabOrder(self.power_spinBox_13, self.number_spinBox_13)
        MainWindow.setTabOrder(self.number_spinBox_13, self.r_var_spinBox_13)
        MainWindow.setTabOrder(self.r_var_spinBox_13, self.wd_we_comboBox_13)
        MainWindow.setTabOrder(self.wd_we_comboBox_13, self.num_windows_spinBox_13)
        MainWindow.setTabOrder(self.num_windows_spinBox_13, self.function_time_spinBox_13)
        MainWindow.setTabOrder(self.function_time_spinBox_13, self.occationaluse_spinBox_13)
        MainWindow.setTabOrder(self.occationaluse_spinBox_13, self.func_cycle_spinBox_13)
        MainWindow.setTabOrder(self.func_cycle_spinBox_13, self.tfrv_spinBox_13)
        MainWindow.setTabOrder(self.tfrv_spinBox_13, self.flat_comboBox_13)
        MainWindow.setTabOrder(self.flat_comboBox_13, self.thermal_v_spinBox_13)
        MainWindow.setTabOrder(self.thermal_v_spinBox_13, self.fixe_comboBox_13)
        MainWindow.setTabOrder(self.fixe_comboBox_13, self.w1start_timeEdit_13)
        MainWindow.setTabOrder(self.w1start_timeEdit_13, self.w1end_timeEdit_13)
        MainWindow.setTabOrder(self.w1end_timeEdit_13, self.w2start_timeEdit_13)
        MainWindow.setTabOrder(self.w2start_timeEdit_13, self.w2end_timeEdit_13)
        MainWindow.setTabOrder(self.w2end_timeEdit_13, self.w3start_timeEdit_13)
        MainWindow.setTabOrder(self.w3start_timeEdit_13, self.w3end_timeEdit_13)
        MainWindow.setTabOrder(self.w3end_timeEdit_13, self.appliancename_lineEdit_14)
        MainWindow.setTabOrder(self.appliancename_lineEdit_14, self.Togglebutton_14)
        MainWindow.setTabOrder(self.Togglebutton_14, self.power_spinBox_14)
        MainWindow.setTabOrder(self.power_spinBox_14, self.number_spinBox_14)
        MainWindow.setTabOrder(self.number_spinBox_14, self.r_var_spinBox_14)
        MainWindow.setTabOrder(self.r_var_spinBox_14, self.wd_we_comboBox_14)
        MainWindow.setTabOrder(self.wd_we_comboBox_14, self.num_windows_spinBox_14)
        MainWindow.setTabOrder(self.num_windows_spinBox_14, self.function_time_spinBox_14)
        MainWindow.setTabOrder(self.function_time_spinBox_14, self.occationaluse_spinBox_14)
        MainWindow.setTabOrder(self.occationaluse_spinBox_14, self.func_cycle_spinBox_14)
        MainWindow.setTabOrder(self.func_cycle_spinBox_14, self.tfrv_spinBox_14)
        MainWindow.setTabOrder(self.tfrv_spinBox_14, self.flat_comboBox_14)
        MainWindow.setTabOrder(self.flat_comboBox_14, self.thermal_v_spinBox_14)
        MainWindow.setTabOrder(self.thermal_v_spinBox_14, self.fixe_comboBox_14)
        MainWindow.setTabOrder(self.fixe_comboBox_14, self.w1start_timeEdit_14)
        MainWindow.setTabOrder(self.w1start_timeEdit_14, self.w1end_timeEdit_14)
        MainWindow.setTabOrder(self.w1end_timeEdit_14, self.w2start_timeEdit_14)
        MainWindow.setTabOrder(self.w2start_timeEdit_14, self.w2end_timeEdit_14)
        MainWindow.setTabOrder(self.w2end_timeEdit_14, self.w3start_timeEdit_14)
        MainWindow.setTabOrder(self.w3start_timeEdit_14, self.w3end_timeEdit_14)
        MainWindow.setTabOrder(self.w3end_timeEdit_14, self.appliancename_lineEdit_15)
        MainWindow.setTabOrder(self.appliancename_lineEdit_15, self.Togglebutton_15)
        MainWindow.setTabOrder(self.Togglebutton_15, self.power_spinBox_15)
        MainWindow.setTabOrder(self.power_spinBox_15, self.number_spinBox_15)
        MainWindow.setTabOrder(self.number_spinBox_15, self.r_var_spinBox_15)
        MainWindow.setTabOrder(self.r_var_spinBox_15, self.wd_we_comboBox_15)
        MainWindow.setTabOrder(self.wd_we_comboBox_15, self.num_windows_spinBox_15)
        MainWindow.setTabOrder(self.num_windows_spinBox_15, self.function_time_spinBox_15)
        MainWindow.setTabOrder(self.function_time_spinBox_15, self.occationaluse_spinBox_15)
        MainWindow.setTabOrder(self.occationaluse_spinBox_15, self.func_cycle_spinBox_15)
        MainWindow.setTabOrder(self.func_cycle_spinBox_15, self.tfrv_spinBox_15)
        MainWindow.setTabOrder(self.tfrv_spinBox_15, self.flat_comboBox_15)
        MainWindow.setTabOrder(self.flat_comboBox_15, self.thermal_v_spinBox_15)
        MainWindow.setTabOrder(self.thermal_v_spinBox_15, self.fixe_comboBox_15)
        MainWindow.setTabOrder(self.fixe_comboBox_15, self.w1start_timeEdit_15)
        MainWindow.setTabOrder(self.w1start_timeEdit_15, self.w1end_timeEdit_15)
        MainWindow.setTabOrder(self.w1end_timeEdit_15, self.w2start_timeEdit_15)
        MainWindow.setTabOrder(self.w2start_timeEdit_15, self.w2end_timeEdit_15)
        MainWindow.setTabOrder(self.w2end_timeEdit_15, self.w3start_timeEdit_15)
        MainWindow.setTabOrder(self.w3start_timeEdit_15, self.w3end_timeEdit_15)
        MainWindow.setTabOrder(self.w3end_timeEdit_15, self.appliancename_lineEdit_16)
        MainWindow.setTabOrder(self.appliancename_lineEdit_16, self.Togglebutton_16)
        MainWindow.setTabOrder(self.Togglebutton_16, self.power_spinBox_16)
        MainWindow.setTabOrder(self.power_spinBox_16, self.number_spinBox_16)
        MainWindow.setTabOrder(self.number_spinBox_16, self.r_var_spinBox_16)
        MainWindow.setTabOrder(self.r_var_spinBox_16, self.wd_we_comboBox_16)
        MainWindow.setTabOrder(self.wd_we_comboBox_16, self.num_windows_spinBox_16)
        MainWindow.setTabOrder(self.num_windows_spinBox_16, self.function_time_spinBox_16)
        MainWindow.setTabOrder(self.function_time_spinBox_16, self.occationaluse_spinBox_16)
        MainWindow.setTabOrder(self.occationaluse_spinBox_16, self.func_cycle_spinBox_16)
        MainWindow.setTabOrder(self.func_cycle_spinBox_16, self.tfrv_spinBox_16)
        MainWindow.setTabOrder(self.tfrv_spinBox_16, self.flat_comboBox_16)
        MainWindow.setTabOrder(self.flat_comboBox_16, self.thermal_v_spinBox_16)
        MainWindow.setTabOrder(self.thermal_v_spinBox_16, self.fixe_comboBox_16)
        MainWindow.setTabOrder(self.fixe_comboBox_16, self.w1start_timeEdit_16)
        MainWindow.setTabOrder(self.w1start_timeEdit_16, self.w1end_timeEdit_16)
        MainWindow.setTabOrder(self.w1end_timeEdit_16, self.w2start_timeEdit_16)
        MainWindow.setTabOrder(self.w2start_timeEdit_16, self.w2end_timeEdit_16)
        MainWindow.setTabOrder(self.w2end_timeEdit_16, self.w3start_timeEdit_16)
        MainWindow.setTabOrder(self.w3start_timeEdit_16, self.w3end_timeEdit_16)
        MainWindow.setTabOrder(self.w3end_timeEdit_16, self.appliancename_lineEdit_17)
        MainWindow.setTabOrder(self.appliancename_lineEdit_17, self.Togglebutton_17)
        MainWindow.setTabOrder(self.Togglebutton_17, self.power_spinBox_17)
        MainWindow.setTabOrder(self.power_spinBox_17, self.number_spinBox_17)
        MainWindow.setTabOrder(self.number_spinBox_17, self.r_var_spinBox_17)
        MainWindow.setTabOrder(self.r_var_spinBox_17, self.wd_we_comboBox_17)
        MainWindow.setTabOrder(self.wd_we_comboBox_17, self.num_windows_spinBox_17)
        MainWindow.setTabOrder(self.num_windows_spinBox_17, self.function_time_spinBox_17)
        MainWindow.setTabOrder(self.function_time_spinBox_17, self.occationaluse_spinBox_17)
        MainWindow.setTabOrder(self.occationaluse_spinBox_17, self.func_cycle_spinBox_17)
        MainWindow.setTabOrder(self.func_cycle_spinBox_17, self.tfrv_spinBox_17)
        MainWindow.setTabOrder(self.tfrv_spinBox_17, self.flat_comboBox_17)
        MainWindow.setTabOrder(self.flat_comboBox_17, self.thermal_v_spinBox_17)
        MainWindow.setTabOrder(self.thermal_v_spinBox_17, self.fixe_comboBox_17)
        MainWindow.setTabOrder(self.fixe_comboBox_17, self.w1start_timeEdit_17)
        MainWindow.setTabOrder(self.w1start_timeEdit_17, self.w1end_timeEdit_17)
        MainWindow.setTabOrder(self.w1end_timeEdit_17, self.w2start_timeEdit_17)
        MainWindow.setTabOrder(self.w2start_timeEdit_17, self.w2end_timeEdit_17)
        MainWindow.setTabOrder(self.w2end_timeEdit_17, self.w3start_timeEdit_17)
        MainWindow.setTabOrder(self.w3start_timeEdit_17, self.w3end_timeEdit_17)
        MainWindow.setTabOrder(self.w3end_timeEdit_17, self.appliancename_lineEdit_18)
        MainWindow.setTabOrder(self.appliancename_lineEdit_18, self.Togglebutton_18)
        MainWindow.setTabOrder(self.Togglebutton_18, self.power_spinBox_18)
        MainWindow.setTabOrder(self.power_spinBox_18, self.number_spinBox_18)
        MainWindow.setTabOrder(self.number_spinBox_18, self.r_var_spinBox_18)
        MainWindow.setTabOrder(self.r_var_spinBox_18, self.wd_we_comboBox_18)
        MainWindow.setTabOrder(self.wd_we_comboBox_18, self.num_windows_spinBox_18)
        MainWindow.setTabOrder(self.num_windows_spinBox_18, self.function_time_spinBox_18)
        MainWindow.setTabOrder(self.function_time_spinBox_18, self.occationaluse_spinBox_18)
        MainWindow.setTabOrder(self.occationaluse_spinBox_18, self.func_cycle_spinBox_18)
        MainWindow.setTabOrder(self.func_cycle_spinBox_18, self.tfrv_spinBox_18)
        MainWindow.setTabOrder(self.tfrv_spinBox_18, self.flat_comboBox_18)
        MainWindow.setTabOrder(self.flat_comboBox_18, self.thermal_v_spinBox_18)
        MainWindow.setTabOrder(self.thermal_v_spinBox_18, self.fixe_comboBox_18)
        MainWindow.setTabOrder(self.fixe_comboBox_18, self.w1start_timeEdit_18)
        MainWindow.setTabOrder(self.w1start_timeEdit_18, self.w1end_timeEdit_18)
        MainWindow.setTabOrder(self.w1end_timeEdit_18, self.w2start_timeEdit_18)
        MainWindow.setTabOrder(self.w2start_timeEdit_18, self.w2end_timeEdit_18)
        MainWindow.setTabOrder(self.w2end_timeEdit_18, self.w3start_timeEdit_18)
        MainWindow.setTabOrder(self.w3start_timeEdit_18, self.w3end_timeEdit_18)
        MainWindow.setTabOrder(self.w3end_timeEdit_18, self.appliancename_lineEdit_19)
        MainWindow.setTabOrder(self.appliancename_lineEdit_19, self.Togglebutton_19)
        MainWindow.setTabOrder(self.Togglebutton_19, self.power_spinBox_19)
        MainWindow.setTabOrder(self.power_spinBox_19, self.number_spinBox_19)
        MainWindow.setTabOrder(self.number_spinBox_19, self.r_var_spinBox_19)
        MainWindow.setTabOrder(self.r_var_spinBox_19, self.wd_we_comboBox_19)
        MainWindow.setTabOrder(self.wd_we_comboBox_19, self.num_windows_spinBox_19)
        MainWindow.setTabOrder(self.num_windows_spinBox_19, self.function_time_spinBox_19)
        MainWindow.setTabOrder(self.function_time_spinBox_19, self.occationaluse_spinBox_19)
        MainWindow.setTabOrder(self.occationaluse_spinBox_19, self.func_cycle_spinBox_19)
        MainWindow.setTabOrder(self.func_cycle_spinBox_19, self.tfrv_spinBox_19)
        MainWindow.setTabOrder(self.tfrv_spinBox_19, self.flat_comboBox_19)
        MainWindow.setTabOrder(self.flat_comboBox_19, self.thermal_v_spinBox_19)
        MainWindow.setTabOrder(self.thermal_v_spinBox_19, self.fixe_comboBox_19)
        MainWindow.setTabOrder(self.fixe_comboBox_19, self.w1start_timeEdit_19)
        MainWindow.setTabOrder(self.w1start_timeEdit_19, self.w1end_timeEdit_19)
        MainWindow.setTabOrder(self.w1end_timeEdit_19, self.w2start_timeEdit_19)
        MainWindow.setTabOrder(self.w2start_timeEdit_19, self.w2end_timeEdit_19)
        MainWindow.setTabOrder(self.w2end_timeEdit_19, self.w3start_timeEdit_19)
        MainWindow.setTabOrder(self.w3start_timeEdit_19, self.w3end_timeEdit_19)
        MainWindow.setTabOrder(self.w3end_timeEdit_19, self.appliancename_lineEdit_20)
        MainWindow.setTabOrder(self.appliancename_lineEdit_20, self.Togglebutton_20)
        MainWindow.setTabOrder(self.Togglebutton_20, self.power_spinBox_20)
        MainWindow.setTabOrder(self.power_spinBox_20, self.number_spinBox_20)
        MainWindow.setTabOrder(self.number_spinBox_20, self.r_var_spinBox_20)
        MainWindow.setTabOrder(self.r_var_spinBox_20, self.wd_we_comboBox_20)
        MainWindow.setTabOrder(self.wd_we_comboBox_20, self.num_windows_spinBox_20)
        MainWindow.setTabOrder(self.num_windows_spinBox_20, self.function_time_spinBox_20)
        MainWindow.setTabOrder(self.function_time_spinBox_20, self.occationaluse_spinBox_20)
        MainWindow.setTabOrder(self.occationaluse_spinBox_20, self.func_cycle_spinBox_20)
        MainWindow.setTabOrder(self.func_cycle_spinBox_20, self.tfrv_spinBox_20)
        MainWindow.setTabOrder(self.tfrv_spinBox_20, self.flat_comboBox_20)
        MainWindow.setTabOrder(self.flat_comboBox_20, self.thermal_v_spinBox_20)
        MainWindow.setTabOrder(self.thermal_v_spinBox_20, self.fixe_comboBox_20)
        MainWindow.setTabOrder(self.fixe_comboBox_20, self.w1start_timeEdit_20)
        MainWindow.setTabOrder(self.w1start_timeEdit_20, self.w1end_timeEdit_20)
        MainWindow.setTabOrder(self.w1end_timeEdit_20, self.w2start_timeEdit_20)
        MainWindow.setTabOrder(self.w2start_timeEdit_20, self.w2end_timeEdit_20)
        MainWindow.setTabOrder(self.w2end_timeEdit_20, self.w3start_timeEdit_20)
        MainWindow.setTabOrder(self.w3start_timeEdit_20, self.w3end_timeEdit_20)
        MainWindow.setTabOrder(self.w3end_timeEdit_20, self.appliancename_lineEdit_21)
        MainWindow.setTabOrder(self.appliancename_lineEdit_21, self.Togglebutton_21)
        MainWindow.setTabOrder(self.Togglebutton_21, self.power_spinBox_21)
        MainWindow.setTabOrder(self.power_spinBox_21, self.number_spinBox_21)
        MainWindow.setTabOrder(self.number_spinBox_21, self.r_var_spinBox_21)
        MainWindow.setTabOrder(self.r_var_spinBox_21, self.wd_we_comboBox_21)
        MainWindow.setTabOrder(self.wd_we_comboBox_21, self.num_windows_spinBox_21)
        MainWindow.setTabOrder(self.num_windows_spinBox_21, self.function_time_spinBox_21)
        MainWindow.setTabOrder(self.function_time_spinBox_21, self.occationaluse_spinBox_21)
        MainWindow.setTabOrder(self.occationaluse_spinBox_21, self.func_cycle_spinBox_21)
        MainWindow.setTabOrder(self.func_cycle_spinBox_21, self.tfrv_spinBox_21)
        MainWindow.setTabOrder(self.tfrv_spinBox_21, self.flat_comboBox_21)
        MainWindow.setTabOrder(self.flat_comboBox_21, self.thermal_v_spinBox_21)
        MainWindow.setTabOrder(self.thermal_v_spinBox_21, self.fixe_comboBox_21)
        MainWindow.setTabOrder(self.fixe_comboBox_21, self.w1start_timeEdit_21)
        MainWindow.setTabOrder(self.w1start_timeEdit_21, self.w1end_timeEdit_21)
        MainWindow.setTabOrder(self.w1end_timeEdit_21, self.w2start_timeEdit_21)
        MainWindow.setTabOrder(self.w2start_timeEdit_21, self.w2end_timeEdit_21)
        MainWindow.setTabOrder(self.w2end_timeEdit_21, self.w3start_timeEdit_21)
        MainWindow.setTabOrder(self.w3start_timeEdit_21, self.w3end_timeEdit_21)
        MainWindow.setTabOrder(self.w3end_timeEdit_21, self.appliancename_lineEdit_22)
        MainWindow.setTabOrder(self.appliancename_lineEdit_22, self.Togglebutton_22)
        MainWindow.setTabOrder(self.Togglebutton_22, self.power_spinBox_22)
        MainWindow.setTabOrder(self.power_spinBox_22, self.number_spinBox_22)
        MainWindow.setTabOrder(self.number_spinBox_22, self.r_var_spinBox_22)
        MainWindow.setTabOrder(self.r_var_spinBox_22, self.wd_we_comboBox_22)
        MainWindow.setTabOrder(self.wd_we_comboBox_22, self.num_windows_spinBox_22)
        MainWindow.setTabOrder(self.num_windows_spinBox_22, self.function_time_spinBox_22)
        MainWindow.setTabOrder(self.function_time_spinBox_22, self.occationaluse_spinBox_22)
        MainWindow.setTabOrder(self.occationaluse_spinBox_22, self.func_cycle_spinBox_22)
        MainWindow.setTabOrder(self.func_cycle_spinBox_22, self.tfrv_spinBox_22)
        MainWindow.setTabOrder(self.tfrv_spinBox_22, self.flat_comboBox_22)
        MainWindow.setTabOrder(self.flat_comboBox_22, self.thermal_v_spinBox_22)
        MainWindow.setTabOrder(self.thermal_v_spinBox_22, self.fixe_comboBox_22)
        MainWindow.setTabOrder(self.fixe_comboBox_22, self.w1start_timeEdit_22)
        MainWindow.setTabOrder(self.w1start_timeEdit_22, self.w1end_timeEdit_22)
        MainWindow.setTabOrder(self.w1end_timeEdit_22, self.w2start_timeEdit_22)
        MainWindow.setTabOrder(self.w2start_timeEdit_22, self.w2end_timeEdit_22)
        MainWindow.setTabOrder(self.w2end_timeEdit_22, self.w3start_timeEdit_22)
        MainWindow.setTabOrder(self.w3start_timeEdit_22, self.w3end_timeEdit_22)
        MainWindow.setTabOrder(self.w3end_timeEdit_22, self.appliancename_lineEdit_23)
        MainWindow.setTabOrder(self.appliancename_lineEdit_23, self.Togglebutton_23)
        MainWindow.setTabOrder(self.Togglebutton_23, self.power_spinBox_23)
        MainWindow.setTabOrder(self.power_spinBox_23, self.number_spinBox_23)
        MainWindow.setTabOrder(self.number_spinBox_23, self.r_var_spinBox_23)
        MainWindow.setTabOrder(self.r_var_spinBox_23, self.wd_we_comboBox_23)
        MainWindow.setTabOrder(self.wd_we_comboBox_23, self.num_windows_spinBox_23)
        MainWindow.setTabOrder(self.num_windows_spinBox_23, self.function_time_spinBox_23)
        MainWindow.setTabOrder(self.function_time_spinBox_23, self.occationaluse_spinBox_23)
        MainWindow.setTabOrder(self.occationaluse_spinBox_23, self.func_cycle_spinBox_23)
        MainWindow.setTabOrder(self.func_cycle_spinBox_23, self.tfrv_spinBox_23)
        MainWindow.setTabOrder(self.tfrv_spinBox_23, self.flat_comboBox_23)
        MainWindow.setTabOrder(self.flat_comboBox_23, self.thermal_v_spinBox_23)
        MainWindow.setTabOrder(self.thermal_v_spinBox_23, self.fixe_comboBox_23)
        MainWindow.setTabOrder(self.fixe_comboBox_23, self.w1start_timeEdit_23)
        MainWindow.setTabOrder(self.w1start_timeEdit_23, self.w1end_timeEdit_23)
        MainWindow.setTabOrder(self.w1end_timeEdit_23, self.w2start_timeEdit_23)
        MainWindow.setTabOrder(self.w2start_timeEdit_23, self.w2end_timeEdit_23)
        MainWindow.setTabOrder(self.w2end_timeEdit_23, self.w3start_timeEdit_23)
        MainWindow.setTabOrder(self.w3start_timeEdit_23, self.w3end_timeEdit_23)
        MainWindow.setTabOrder(self.w3end_timeEdit_23, self.appliancename_lineEdit_24)
        MainWindow.setTabOrder(self.appliancename_lineEdit_24, self.Togglebutton_24)
        MainWindow.setTabOrder(self.Togglebutton_24, self.power_spinBox_24)
        MainWindow.setTabOrder(self.power_spinBox_24, self.number_spinBox_24)
        MainWindow.setTabOrder(self.number_spinBox_24, self.r_var_spinBox_24)
        MainWindow.setTabOrder(self.r_var_spinBox_24, self.wd_we_comboBox_24)
        MainWindow.setTabOrder(self.wd_we_comboBox_24, self.num_windows_spinBox_24)
        MainWindow.setTabOrder(self.num_windows_spinBox_24, self.function_time_spinBox_24)
        MainWindow.setTabOrder(self.function_time_spinBox_24, self.occationaluse_spinBox_24)
        MainWindow.setTabOrder(self.occationaluse_spinBox_24, self.func_cycle_spinBox_24)
        MainWindow.setTabOrder(self.func_cycle_spinBox_24, self.tfrv_spinBox_24)
        MainWindow.setTabOrder(self.tfrv_spinBox_24, self.flat_comboBox_24)
        MainWindow.setTabOrder(self.flat_comboBox_24, self.thermal_v_spinBox_24)
        MainWindow.setTabOrder(self.thermal_v_spinBox_24, self.fixe_comboBox_24)
        MainWindow.setTabOrder(self.fixe_comboBox_24, self.w1start_timeEdit_24)
        MainWindow.setTabOrder(self.w1start_timeEdit_24, self.w1end_timeEdit_24)
        MainWindow.setTabOrder(self.w1end_timeEdit_24, self.w2start_timeEdit_24)
        MainWindow.setTabOrder(self.w2start_timeEdit_24, self.w2end_timeEdit_24)
        MainWindow.setTabOrder(self.w2end_timeEdit_24, self.w3start_timeEdit_24)
        MainWindow.setTabOrder(self.w3start_timeEdit_24, self.w3end_timeEdit_24)
        MainWindow.setTabOrder(self.w3end_timeEdit_24, self.appliancename_lineEdit_25)
        MainWindow.setTabOrder(self.appliancename_lineEdit_25, self.Togglebutton_25)
        MainWindow.setTabOrder(self.Togglebutton_25, self.power_spinBox_25)
        MainWindow.setTabOrder(self.power_spinBox_25, self.number_spinBox_25)
        MainWindow.setTabOrder(self.number_spinBox_25, self.r_var_spinBox_25)
        MainWindow.setTabOrder(self.r_var_spinBox_25, self.wd_we_comboBox_25)
        MainWindow.setTabOrder(self.wd_we_comboBox_25, self.num_windows_spinBox_25)
        MainWindow.setTabOrder(self.num_windows_spinBox_25, self.function_time_spinBox_25)
        MainWindow.setTabOrder(self.function_time_spinBox_25, self.occationaluse_spinBox_25)
        MainWindow.setTabOrder(self.occationaluse_spinBox_25, self.func_cycle_spinBox_25)
        MainWindow.setTabOrder(self.func_cycle_spinBox_25, self.tfrv_spinBox_25)
        MainWindow.setTabOrder(self.tfrv_spinBox_25, self.flat_comboBox_25)
        MainWindow.setTabOrder(self.flat_comboBox_25, self.thermal_v_spinBox_25)
        MainWindow.setTabOrder(self.thermal_v_spinBox_25, self.fixe_comboBox_25)
        MainWindow.setTabOrder(self.fixe_comboBox_25, self.w1start_timeEdit_25)
        MainWindow.setTabOrder(self.w1start_timeEdit_25, self.w1end_timeEdit_25)
        MainWindow.setTabOrder(self.w1end_timeEdit_25, self.w2start_timeEdit_25)
        MainWindow.setTabOrder(self.w2start_timeEdit_25, self.w2end_timeEdit_25)
        MainWindow.setTabOrder(self.w2end_timeEdit_25, self.w3start_timeEdit_25)
        MainWindow.setTabOrder(self.w3start_timeEdit_25, self.w3end_timeEdit_25)
        MainWindow.setTabOrder(self.w3end_timeEdit_25, self.appliancename_lineEdit_26)
        MainWindow.setTabOrder(self.appliancename_lineEdit_26, self.Togglebutton_26)
        MainWindow.setTabOrder(self.Togglebutton_26, self.power_spinBox_26)
        MainWindow.setTabOrder(self.power_spinBox_26, self.number_spinBox_26)
        MainWindow.setTabOrder(self.number_spinBox_26, self.r_var_spinBox_26)
        MainWindow.setTabOrder(self.r_var_spinBox_26, self.wd_we_comboBox_26)
        MainWindow.setTabOrder(self.wd_we_comboBox_26, self.num_windows_spinBox_26)
        MainWindow.setTabOrder(self.num_windows_spinBox_26, self.function_time_spinBox_26)
        MainWindow.setTabOrder(self.function_time_spinBox_26, self.occationaluse_spinBox_26)
        MainWindow.setTabOrder(self.occationaluse_spinBox_26, self.func_cycle_spinBox_26)
        MainWindow.setTabOrder(self.func_cycle_spinBox_26, self.tfrv_spinBox_26)
        MainWindow.setTabOrder(self.tfrv_spinBox_26, self.flat_comboBox_26)
        MainWindow.setTabOrder(self.flat_comboBox_26, self.thermal_v_spinBox_26)
        MainWindow.setTabOrder(self.thermal_v_spinBox_26, self.fixe_comboBox_26)
        MainWindow.setTabOrder(self.fixe_comboBox_26, self.w1start_timeEdit_26)
        MainWindow.setTabOrder(self.w1start_timeEdit_26, self.w1end_timeEdit_26)
        MainWindow.setTabOrder(self.w1end_timeEdit_26, self.w2start_timeEdit_26)
        MainWindow.setTabOrder(self.w2start_timeEdit_26, self.w2end_timeEdit_26)
        MainWindow.setTabOrder(self.w2end_timeEdit_26, self.w3start_timeEdit_26)
        MainWindow.setTabOrder(self.w3start_timeEdit_26, self.w3end_timeEdit_26)
        MainWindow.setTabOrder(self.w3end_timeEdit_26, self.appliancename_lineEdit_27)
        MainWindow.setTabOrder(self.appliancename_lineEdit_27, self.Togglebutton_27)
        MainWindow.setTabOrder(self.Togglebutton_27, self.power_spinBox_27)
        MainWindow.setTabOrder(self.power_spinBox_27, self.number_spinBox_27)
        MainWindow.setTabOrder(self.number_spinBox_27, self.r_var_spinBox_27)
        MainWindow.setTabOrder(self.r_var_spinBox_27, self.wd_we_comboBox_27)
        MainWindow.setTabOrder(self.wd_we_comboBox_27, self.num_windows_spinBox_27)
        MainWindow.setTabOrder(self.num_windows_spinBox_27, self.function_time_spinBox_27)
        MainWindow.setTabOrder(self.function_time_spinBox_27, self.occationaluse_spinBox_27)
        MainWindow.setTabOrder(self.occationaluse_spinBox_27, self.func_cycle_spinBox_27)
        MainWindow.setTabOrder(self.func_cycle_spinBox_27, self.tfrv_spinBox_27)
        MainWindow.setTabOrder(self.tfrv_spinBox_27, self.flat_comboBox_27)
        MainWindow.setTabOrder(self.flat_comboBox_27, self.thermal_v_spinBox_27)
        MainWindow.setTabOrder(self.thermal_v_spinBox_27, self.fixe_comboBox_27)
        MainWindow.setTabOrder(self.fixe_comboBox_27, self.w1start_timeEdit_27)
        MainWindow.setTabOrder(self.w1start_timeEdit_27, self.w1end_timeEdit_27)
        MainWindow.setTabOrder(self.w1end_timeEdit_27, self.w2start_timeEdit_27)
        MainWindow.setTabOrder(self.w2start_timeEdit_27, self.w2end_timeEdit_27)
        MainWindow.setTabOrder(self.w2end_timeEdit_27, self.w3start_timeEdit_27)
        MainWindow.setTabOrder(self.w3start_timeEdit_27, self.w3end_timeEdit_27)
        MainWindow.setTabOrder(self.w3end_timeEdit_27, self.appliancename_lineEdit_28)
        MainWindow.setTabOrder(self.appliancename_lineEdit_28, self.Togglebutton_28)
        MainWindow.setTabOrder(self.Togglebutton_28, self.power_spinBox_28)
        MainWindow.setTabOrder(self.power_spinBox_28, self.number_spinBox_28)
        MainWindow.setTabOrder(self.number_spinBox_28, self.r_var_spinBox_28)
        MainWindow.setTabOrder(self.r_var_spinBox_28, self.wd_we_comboBox_28)
        MainWindow.setTabOrder(self.wd_we_comboBox_28, self.num_windows_spinBox_28)
        MainWindow.setTabOrder(self.num_windows_spinBox_28, self.function_time_spinBox_28)
        MainWindow.setTabOrder(self.function_time_spinBox_28, self.occationaluse_spinBox_28)
        MainWindow.setTabOrder(self.occationaluse_spinBox_28, self.func_cycle_spinBox_28)
        MainWindow.setTabOrder(self.func_cycle_spinBox_28, self.tfrv_spinBox_28)
        MainWindow.setTabOrder(self.tfrv_spinBox_28, self.flat_comboBox_28)
        MainWindow.setTabOrder(self.flat_comboBox_28, self.thermal_v_spinBox_28)
        MainWindow.setTabOrder(self.thermal_v_spinBox_28, self.fixe_comboBox_28)
        MainWindow.setTabOrder(self.fixe_comboBox_28, self.w1start_timeEdit_28)
        MainWindow.setTabOrder(self.w1start_timeEdit_28, self.w1end_timeEdit_28)
        MainWindow.setTabOrder(self.w1end_timeEdit_28, self.w2start_timeEdit_28)
        MainWindow.setTabOrder(self.w2start_timeEdit_28, self.w2end_timeEdit_28)
        MainWindow.setTabOrder(self.w2end_timeEdit_28, self.w3start_timeEdit_28)
        MainWindow.setTabOrder(self.w3start_timeEdit_28, self.w3end_timeEdit_28)
        MainWindow.setTabOrder(self.w3end_timeEdit_28, self.appliancename_lineEdit_29)
        MainWindow.setTabOrder(self.appliancename_lineEdit_29, self.Togglebutton_29)
        MainWindow.setTabOrder(self.Togglebutton_29, self.power_spinBox_29)
        MainWindow.setTabOrder(self.power_spinBox_29, self.number_spinBox_29)
        MainWindow.setTabOrder(self.number_spinBox_29, self.r_var_spinBox_29)
        MainWindow.setTabOrder(self.r_var_spinBox_29, self.wd_we_comboBox_29)
        MainWindow.setTabOrder(self.wd_we_comboBox_29, self.num_windows_spinBox_29)
        MainWindow.setTabOrder(self.num_windows_spinBox_29, self.function_time_spinBox_29)
        MainWindow.setTabOrder(self.function_time_spinBox_29, self.occationaluse_spinBox_29)
        MainWindow.setTabOrder(self.occationaluse_spinBox_29, self.func_cycle_spinBox_29)
        MainWindow.setTabOrder(self.func_cycle_spinBox_29, self.tfrv_spinBox_29)
        MainWindow.setTabOrder(self.tfrv_spinBox_29, self.flat_comboBox_29)
        MainWindow.setTabOrder(self.flat_comboBox_29, self.thermal_v_spinBox_29)
        MainWindow.setTabOrder(self.thermal_v_spinBox_29, self.fixe_comboBox_29)
        MainWindow.setTabOrder(self.fixe_comboBox_29, self.w1start_timeEdit_29)
        MainWindow.setTabOrder(self.w1start_timeEdit_29, self.w1end_timeEdit_29)
        MainWindow.setTabOrder(self.w1end_timeEdit_29, self.w2start_timeEdit_29)
        MainWindow.setTabOrder(self.w2start_timeEdit_29, self.w2end_timeEdit_29)
        MainWindow.setTabOrder(self.w2end_timeEdit_29, self.w3start_timeEdit_29)
        MainWindow.setTabOrder(self.w3start_timeEdit_29, self.w3end_timeEdit_29)
        MainWindow.setTabOrder(self.w3end_timeEdit_29, self.appliancename_lineEdit_30)
        MainWindow.setTabOrder(self.appliancename_lineEdit_30, self.Togglebutton_30)
        MainWindow.setTabOrder(self.Togglebutton_30, self.power_spinBox_30)
        MainWindow.setTabOrder(self.power_spinBox_30, self.number_spinBox_30)
        MainWindow.setTabOrder(self.number_spinBox_30, self.r_var_spinBox_30)
        MainWindow.setTabOrder(self.r_var_spinBox_30, self.wd_we_comboBox_30)
        MainWindow.setTabOrder(self.wd_we_comboBox_30, self.num_windows_spinBox_30)
        MainWindow.setTabOrder(self.num_windows_spinBox_30, self.function_time_spinBox_30)
        MainWindow.setTabOrder(self.function_time_spinBox_30, self.occationaluse_spinBox_30)
        MainWindow.setTabOrder(self.occationaluse_spinBox_30, self.func_cycle_spinBox_30)
        MainWindow.setTabOrder(self.func_cycle_spinBox_30, self.tfrv_spinBox_30)
        MainWindow.setTabOrder(self.tfrv_spinBox_30, self.flat_comboBox_30)
        MainWindow.setTabOrder(self.flat_comboBox_30, self.thermal_v_spinBox_30)
        MainWindow.setTabOrder(self.thermal_v_spinBox_30, self.fixe_comboBox_30)
        MainWindow.setTabOrder(self.fixe_comboBox_30, self.w1start_timeEdit_30)
        MainWindow.setTabOrder(self.w1start_timeEdit_30, self.w1end_timeEdit_30)
        MainWindow.setTabOrder(self.w1end_timeEdit_30, self.w2start_timeEdit_30)
        MainWindow.setTabOrder(self.w2start_timeEdit_30, self.w2end_timeEdit_30)
        MainWindow.setTabOrder(self.w2end_timeEdit_30, self.w3start_timeEdit_30)
        MainWindow.setTabOrder(self.w3start_timeEdit_30, self.w3end_timeEdit_30)
        MainWindow.setTabOrder(self.w3end_timeEdit_30, self.start_dateEdit_1)
        MainWindow.setTabOrder(self.start_dateEdit_1, self.ndays_spinBox_1)
        MainWindow.setTabOrder(self.ndays_spinBox_1, self.set_title_lineEdit_1)
        MainWindow.setTabOrder(self.set_title_lineEdit_1, self.simulate_pushButton_1)
        MainWindow.setTabOrder(self.simulate_pushButton_1, self.Ramp_lite_graphicsview_1)
        MainWindow.setTabOrder(self.Ramp_lite_graphicsview_1, self.Minute_radioButton_1)
        MainWindow.setTabOrder(self.Minute_radioButton_1, self.FifteenMinute_radioButton_1)
        MainWindow.setTabOrder(self.FifteenMinute_radioButton_1, self.Hourly_radioButton_1)
        MainWindow.setTabOrder(self.Hourly_radioButton_1, self.Daily_radioButton_1)
        MainWindow.setTabOrder(self.Daily_radioButton_1, self.Monthly_radioButton_1)
        MainWindow.setTabOrder(self.Monthly_radioButton_1, self.barchart_radioButton_1)
        MainWindow.setTabOrder(self.barchart_radioButton_1, self.generate_pushButton_1)
        MainWindow.setTabOrder(self.generate_pushButton_1, self.save_image_pushButton)
        MainWindow.setTabOrder(self.save_image_pushButton, self.save_csv_pushButton)
        MainWindow.setTabOrder(self.save_csv_pushButton, self.create_data_radioButton_1)
        MainWindow.setTabOrder(self.create_data_radioButton_1, self.tabWidget_2)
        MainWindow.setTabOrder(self.tabWidget_2, self.create_user_tableWidget_1)
        MainWindow.setTabOrder(self.create_user_tableWidget_1, self.add_user_pushButton_1)
        MainWindow.setTabOrder(self.add_user_pushButton_1, self.save_set_pushButton_1)
        MainWindow.setTabOrder(self.save_set_pushButton_1, self.remove_user_pushButton_1)
        MainWindow.setTabOrder(self.remove_user_pushButton_1, self.parameters_TableWidget_1)
        MainWindow.setTabOrder(self.parameters_TableWidget_1, self.parameter_save_pushButton_1)
        MainWindow.setTabOrder(self.parameter_save_pushButton_1, self.Use_pushButton_1)
        MainWindow.setTabOrder(self.Use_pushButton_1, self.i_already_have_data_radioButton)
        MainWindow.setTabOrder(self.i_already_have_data_radioButton, self.import_pushButton_1)
        MainWindow.setTabOrder(self.import_pushButton_1, self.for_all_users_radioButton_1)
        MainWindow.setTabOrder(self.for_all_users_radioButton_1, self.selected_users_radioButton_1)
        MainWindow.setTabOrder(self.selected_users_radioButton_1, self.select_user_comboBox_1)
        MainWindow.setTabOrder(self.select_user_comboBox_1, self.add_to_list_pushButton_1)
        MainWindow.setTabOrder(self.add_to_list_pushButton_1, self.selected_user_lineEdit_1)
        MainWindow.setTabOrder(self.selected_user_lineEdit_1, self.start_dateEdit_2)
        MainWindow.setTabOrder(self.start_dateEdit_2, self.ndays_spinBox_2)
        MainWindow.setTabOrder(self.ndays_spinBox_2, self.set_title_lineEdit_2)
        MainWindow.setTabOrder(self.set_title_lineEdit_2, self.set_title_lineEdit_3)
        MainWindow.setTabOrder(self.set_title_lineEdit_3, self.simulate_pushButton_2)
        MainWindow.setTabOrder(self.simulate_pushButton_2, self.Ramp_advance_graphicsview_1)
        MainWindow.setTabOrder(self.Ramp_advance_graphicsview_1, self.Minute_radioButton_2)
        MainWindow.setTabOrder(self.Minute_radioButton_2, self.FifteenMinute_radioButton_2)
        MainWindow.setTabOrder(self.FifteenMinute_radioButton_2, self.Hourly_radioButton_2)
        MainWindow.setTabOrder(self.Hourly_radioButton_2, self.Daily_radioButton_2)
        MainWindow.setTabOrder(self.Daily_radioButton_2, self.Monthly_radioButton_2)
        MainWindow.setTabOrder(self.Monthly_radioButton_2, self.barchart_radioButton_2)
        MainWindow.setTabOrder(self.barchart_radioButton_2, self.generate_pushButton_2)
        MainWindow.setTabOrder(self.generate_pushButton_2, self.save_image_pushButton_1)
        MainWindow.setTabOrder(self.save_image_pushButton_1, self.save_image_pushButton_2)
        MainWindow.setTabOrder(self.save_image_pushButton_2, self.save_csv_pushButton_1)
        MainWindow.setTabOrder(self.save_csv_pushButton_1, self.save_csv_pushButton_2)
        MainWindow.setTabOrder(self.save_csv_pushButton_2, self.treeView_1)
        MainWindow.setTabOrder(self.treeView_1, self.help_textEdit_ramp_lite)
        MainWindow.setTabOrder(self.help_textEdit_ramp_lite, self.help_textEdit_ramp_advance)
        MainWindow.setTabOrder(self.help_textEdit_ramp_advance, self.console_1)
        MainWindow.setTabOrder(self.console_1, self.scrollArea)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "RAMP"))
        self.user_name_label_1.setText(_translate("MainWindow", "User Name / Category / Group :"))
        self.user_name_lineEdit_1.setToolTip(_translate("MainWindow", "User to which the appliance is bounded"))

        self.label_106.setText(_translate("MainWindow", "Need help on parameters ?  See Help section !"))
        self.appliancename_label_1.setText(_translate("MainWindow", "1. Appliance name :"))
        self.Togglebutton_1.setText(_translate("MainWindow", "<"))
        self.power_1.setText(_translate("MainWindow", "Power (w)"))
        self.number_1.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_1.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_1.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_1.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_1.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_1.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_1.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_1.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_1.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_1.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_1.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_1.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_5.setText(_translate("MainWindow", "--"))
        self.label_3.setText(_translate("MainWindow", "--"))
        self.wd_we_1.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_1.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_4.setText(_translate("MainWindow", "--"))
        self.r_var_1.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_1.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_1.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_1.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_1.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_1.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_1.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_1.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_1.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_1.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_1.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_1.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_1.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_1.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_1.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_1.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_1.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_1.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_1.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_1.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_1.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_1.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_1.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_1.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_1.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_1.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_1.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_1.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_2.setText(_translate("MainWindow", "2. Appliance name :"))
        self.Togglebutton_2.setText(_translate("MainWindow", "<"))
        self.power_2.setText(_translate("MainWindow", "Power (w)"))
        self.number_2.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_2.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_2.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_2.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_2.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_2.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_2.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_2.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_2.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_2.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_2.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_2.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_12.setText(_translate("MainWindow", "--"))
        self.label_13.setText(_translate("MainWindow", "--"))
        self.wd_we_2.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_2.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_14.setText(_translate("MainWindow", "--"))
        self.r_var_2.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_2.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_2.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_2.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_2.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_2.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_2.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_2.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_2.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_2.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_2.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_2.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_2.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_2.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_2.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_2.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_2.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_2.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_2.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_2.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_2.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_2.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_2.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_2.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_2.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_2.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_2.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_2.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_3.setText(_translate("MainWindow", "3. Appliance name :"))
        self.Togglebutton_3.setText(_translate("MainWindow", "<"))
        self.power_3.setText(_translate("MainWindow", "Power (w)"))
        self.number_3.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_3.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_3.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_3.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_3.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_3.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_3.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_3.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_3.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_3.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_3.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_3.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_15.setText(_translate("MainWindow", "--"))
        self.label_16.setText(_translate("MainWindow", "--"))
        self.wd_we_3.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_3.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_17.setText(_translate("MainWindow", "--"))
        self.r_var_3.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_3.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_3.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_3.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_3.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_3.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_3.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_3.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_3.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_3.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_3.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_3.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_3.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_3.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_3.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_3.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_3.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_3.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_3.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_3.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_3.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_3.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_3.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_3.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_3.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_3.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_3.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_3.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_4.setText(_translate("MainWindow", "4. Appliance name :"))
        self.Togglebutton_4.setText(_translate("MainWindow", "<"))
        self.power_4.setText(_translate("MainWindow", "Power (w)"))
        self.number_4.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_4.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_4.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_4.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_4.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_4.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_4.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_4.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_4.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_4.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_4.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_4.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_18.setText(_translate("MainWindow", "--"))
        self.label_19.setText(_translate("MainWindow", "--"))
        self.wd_we_4.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_4.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_20.setText(_translate("MainWindow", "--"))
        self.r_var_4.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_4.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_4.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_4.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_4.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_4.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_4.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_4.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_4.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_4.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_4.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_4.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_4.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_4.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_4.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_4.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_4.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_4.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_4.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_4.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_4.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_4.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_4.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_4.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_4.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_4.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_4.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_4.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_5.setText(_translate("MainWindow", "5. Appliance name :"))
        self.Togglebutton_5.setText(_translate("MainWindow", "<"))
        self.power_5.setText(_translate("MainWindow", "Power (w)"))
        self.number_5.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_5.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_5.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_5.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_5.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_5.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_5.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_5.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_5.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_5.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_5.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_5.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_21.setText(_translate("MainWindow", "--"))
        self.label_22.setText(_translate("MainWindow", "--"))
        self.wd_we_5.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_5.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_23.setText(_translate("MainWindow", "--"))
        self.r_var_5.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_5.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_5.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_5.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_5.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_5.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_5.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_5.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_5.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_5.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_5.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_5.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_5.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_5.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_5.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_5.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_5.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_5.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_5.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_5.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_5.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_5.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_5.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_5.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_5.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_5.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_5.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_5.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_6.setText(_translate("MainWindow", "6. Appliance name :"))
        self.Togglebutton_6.setText(_translate("MainWindow", "<"))
        self.power_6.setText(_translate("MainWindow", "Power (w)"))
        self.number_6.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_6.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_6.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_6.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_6.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_6.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_6.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_6.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_6.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_6.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_6.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_6.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_24.setText(_translate("MainWindow", "--"))
        self.label_25.setText(_translate("MainWindow", "--"))
        self.wd_we_6.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_6.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_26.setText(_translate("MainWindow", "--"))
        self.r_var_6.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_6.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_6.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_6.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_6.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_6.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_6.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_6.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_6.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_6.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_6.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_6.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_6.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_6.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_6.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_6.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_6.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_6.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_6.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_6.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_6.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_6.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_6.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_6.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_6.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_6.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_6.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_6.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_7.setText(_translate("MainWindow", "7. Appliance name :"))
        self.Togglebutton_7.setText(_translate("MainWindow", "<"))
        self.power_7.setText(_translate("MainWindow", "Power (w)"))
        self.number_7.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_7.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_7.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_7.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_7.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_7.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_7.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_7.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_7.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_7.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_7.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_7.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_27.setText(_translate("MainWindow", "--"))
        self.label_28.setText(_translate("MainWindow", "--"))
        self.wd_we_7.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_7.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_29.setText(_translate("MainWindow", "--"))
        self.r_var_7.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_7.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_7.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_7.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_7.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_7.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_7.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_7.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_7.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_7.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_7.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_7.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_7.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_7.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_7.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_7.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_7.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_7.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_7.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_7.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_7.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_7.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_7.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_7.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_7.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_7.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_7.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_7.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_8.setText(_translate("MainWindow", "8. Appliance name :"))
        self.Togglebutton_8.setText(_translate("MainWindow", "<"))
        self.power_8.setText(_translate("MainWindow", "Power (w)"))
        self.number_8.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_8.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_8.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_8.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_8.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_8.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_8.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_8.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_8.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_8.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_8.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_8.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_30.setText(_translate("MainWindow", "--"))
        self.label_31.setText(_translate("MainWindow", "--"))
        self.wd_we_8.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_8.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_32.setText(_translate("MainWindow", "--"))
        self.r_var_8.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_8.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_8.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_8.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_8.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_8.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_8.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_8.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_8.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_8.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_8.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_8.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_8.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_8.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_8.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_8.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_8.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_8.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_8.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_8.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_8.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_8.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_8.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_8.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_8.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_8.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_8.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_8.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_9.setText(_translate("MainWindow", "9. Appliance name :"))
        self.Togglebutton_9.setText(_translate("MainWindow", "<"))
        self.power_9.setText(_translate("MainWindow", "Power (w)"))
        self.number_9.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_9.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_9.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_9.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_9.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_9.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_9.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_9.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_9.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_9.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_9.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_9.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_33.setText(_translate("MainWindow", "--"))
        self.label_34.setText(_translate("MainWindow", "--"))
        self.wd_we_9.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_9.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_35.setText(_translate("MainWindow", "--"))
        self.r_var_9.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_9.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_9.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_9.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_9.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_9.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_9.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_9.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_9.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_9.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_9.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_9.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_9.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_9.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_9.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_9.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_9.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_9.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_9.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_9.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_9.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_9.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_9.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_9.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_9.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_9.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_9.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_9.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_10.setText(_translate("MainWindow", "10. Appliance name :"))
        self.Togglebutton_10.setText(_translate("MainWindow", "<"))
        self.power_10.setText(_translate("MainWindow", "Power (w)"))
        self.number_10.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_10.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_10.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_10.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_10.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_10.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_10.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_10.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_10.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_10.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_10.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_10.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_36.setText(_translate("MainWindow", "--"))
        self.label_37.setText(_translate("MainWindow", "--"))
        self.wd_we_10.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_10.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_38.setText(_translate("MainWindow", "--"))
        self.r_var_10.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_10.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_10.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_10.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_10.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_10.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_10.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_10.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_10.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_10.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_10.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_10.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_10.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_10.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_10.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_10.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_10.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_10.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_10.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_10.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_10.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_10.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_10.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_10.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_10.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_10.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_10.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_10.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_11.setText(_translate("MainWindow", "11. Appliance name :"))
        self.Togglebutton_11.setText(_translate("MainWindow", "<"))
        self.power_11.setText(_translate("MainWindow", "Power (w)"))
        self.number_11.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_11.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_11.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_11.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_11.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_11.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_11.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_11.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_11.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_11.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_11.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_11.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_39.setText(_translate("MainWindow", "--"))
        self.label_40.setText(_translate("MainWindow", "--"))
        self.wd_we_11.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_11.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_41.setText(_translate("MainWindow", "--"))
        self.r_var_11.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_11.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_11.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_11.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_11.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_11.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_11.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_11.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_11.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_11.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_11.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_11.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_11.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_11.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_11.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_11.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_11.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_11.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_11.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_11.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_11.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_11.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_11.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_11.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_11.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_11.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_11.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_11.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_12.setText(_translate("MainWindow", "12. Appliance name :"))
        self.Togglebutton_12.setText(_translate("MainWindow", "<"))
        self.power_12.setText(_translate("MainWindow", "Power (w)"))
        self.number_12.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_12.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_12.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_12.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_12.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_12.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_12.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_12.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_12.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_12.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_12.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_12.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_42.setText(_translate("MainWindow", "--"))
        self.label_43.setText(_translate("MainWindow", "--"))
        self.wd_we_12.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_12.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_44.setText(_translate("MainWindow", "--"))
        self.r_var_12.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_12.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_12.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_12.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_12.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_12.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_12.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_12.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_12.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_12.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_12.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_12.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_12.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_12.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_12.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_12.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_12.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_12.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_12.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_12.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_12.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_12.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_12.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_12.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_12.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_12.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_12.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_12.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_13.setText(_translate("MainWindow", "13. Appliance name :"))
        self.Togglebutton_13.setText(_translate("MainWindow", "<"))
        self.power_13.setText(_translate("MainWindow", "Power (w)"))
        self.number_13.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_13.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_13.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_13.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_13.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_13.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_13.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_13.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_13.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_13.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_13.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_13.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_45.setText(_translate("MainWindow", "--"))
        self.label_46.setText(_translate("MainWindow", "--"))
        self.wd_we_13.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_13.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_47.setText(_translate("MainWindow", "--"))
        self.r_var_13.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_13.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_13.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_13.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_13.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_13.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_13.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_13.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_13.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_13.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_13.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_13.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_13.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_13.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_13.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_13.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_13.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_13.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_13.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_13.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_13.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_13.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_13.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_13.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_13.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_13.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_13.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_13.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_14.setText(_translate("MainWindow", "14. Appliance name :"))
        self.Togglebutton_14.setText(_translate("MainWindow", "<"))
        self.power_14.setText(_translate("MainWindow", "Power (w)"))
        self.number_14.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_14.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_14.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_14.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_14.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_14.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_14.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_14.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_14.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_14.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_14.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_14.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_48.setText(_translate("MainWindow", "--"))
        self.label_49.setText(_translate("MainWindow", "--"))
        self.wd_we_14.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_14.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_50.setText(_translate("MainWindow", "--"))
        self.r_var_14.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_14.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_14.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_14.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_14.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_14.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_14.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_14.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_14.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_14.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_14.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_14.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_14.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_14.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_14.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_14.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_14.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_14.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_14.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_14.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_14.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_14.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_14.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_14.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_14.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_14.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_14.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_14.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_15.setText(_translate("MainWindow", "15. Appliance name :"))
        self.Togglebutton_15.setText(_translate("MainWindow", "<"))
        self.power_15.setText(_translate("MainWindow", "Power (w)"))
        self.number_15.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_15.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_15.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_15.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_15.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_15.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_15.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_15.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_15.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_15.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_15.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_15.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_51.setText(_translate("MainWindow", "--"))
        self.label_52.setText(_translate("MainWindow", "--"))
        self.wd_we_15.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_15.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_53.setText(_translate("MainWindow", "--"))
        self.r_var_15.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_15.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_15.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_15.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_15.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_15.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_15.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_15.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_15.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_15.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_15.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_15.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_15.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_15.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_15.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_15.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_15.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_15.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_15.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_15.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_15.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_15.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_15.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_15.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_15.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_15.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_15.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_15.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_16.setText(_translate("MainWindow", "16. Appliance name :"))
        self.Togglebutton_16.setText(_translate("MainWindow", "<"))
        self.power_16.setText(_translate("MainWindow", "Power (w)"))
        self.number_16.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_16.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_16.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_16.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_16.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_16.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_16.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_16.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_16.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_16.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_16.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_16.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_54.setText(_translate("MainWindow", "--"))
        self.label_55.setText(_translate("MainWindow", "--"))
        self.wd_we_16.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_16.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_56.setText(_translate("MainWindow", "--"))
        self.r_var_16.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_16.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_16.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_16.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_16.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_16.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_16.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_16.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_16.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_16.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_16.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_16.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_16.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_16.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_16.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_16.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_16.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_16.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_16.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_16.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_16.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_16.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_16.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_16.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_16.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_16.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_16.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_16.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_17.setText(_translate("MainWindow", "17. Appliance name :"))
        self.Togglebutton_17.setText(_translate("MainWindow", "<"))
        self.power_17.setText(_translate("MainWindow", "Power (w)"))
        self.number_17.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_17.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_17.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_17.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_17.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_17.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_17.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_17.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_17.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_17.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_17.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_17.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_57.setText(_translate("MainWindow", "--"))
        self.label_58.setText(_translate("MainWindow", "--"))
        self.wd_we_17.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_17.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_59.setText(_translate("MainWindow", "--"))
        self.r_var_17.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_17.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_17.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_17.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_17.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_17.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_17.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_17.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_17.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_17.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_17.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_17.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_17.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_17.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_17.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_17.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_17.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_17.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_17.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_17.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_17.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_17.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_17.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_17.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_17.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_17.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_17.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_17.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_18.setText(_translate("MainWindow", "18. Appliance name :"))
        self.Togglebutton_18.setText(_translate("MainWindow", "<"))
        self.power_18.setText(_translate("MainWindow", "Power (w)"))
        self.number_18.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_18.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_18.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_18.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_18.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_18.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_18.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_18.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_18.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_18.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_18.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_18.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_60.setText(_translate("MainWindow", "--"))
        self.label_61.setText(_translate("MainWindow", "--"))
        self.wd_we_18.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_18.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_62.setText(_translate("MainWindow", "--"))
        self.r_var_18.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_18.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_18.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_18.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_18.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_18.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_18.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_18.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_18.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_18.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_18.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_18.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_18.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_18.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_18.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_18.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_18.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_18.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_18.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_18.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_18.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_18.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_18.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_18.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_18.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_18.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_18.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_18.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_19.setText(_translate("MainWindow", "19. Appliance name :"))
        self.Togglebutton_19.setText(_translate("MainWindow", "<"))
        self.power_19.setText(_translate("MainWindow", "Power (w)"))
        self.number_19.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_19.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_19.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_19.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_19.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_19.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_19.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_19.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_19.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_19.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_19.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_19.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_63.setText(_translate("MainWindow", "--"))
        self.label_64.setText(_translate("MainWindow", "--"))
        self.wd_we_19.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_19.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_65.setText(_translate("MainWindow", "--"))
        self.r_var_19.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_19.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_19.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_19.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_19.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_19.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_19.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_19.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_19.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_19.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_19.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_19.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_19.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_19.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_19.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_19.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_19.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_19.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_19.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_19.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_19.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_19.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_19.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_19.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_19.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_19.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_19.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_19.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_20.setText(_translate("MainWindow", "20. Appliance name :"))
        self.Togglebutton_20.setText(_translate("MainWindow", "<"))
        self.power_20.setText(_translate("MainWindow", "Power (w)"))
        self.number_20.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_20.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_20.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_20.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_20.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_20.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_20.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_20.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_20.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_20.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_20.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_20.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_66.setText(_translate("MainWindow", "--"))
        self.label_67.setText(_translate("MainWindow", "--"))
        self.wd_we_20.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_20.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_68.setText(_translate("MainWindow", "--"))
        self.r_var_20.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_20.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_20.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_20.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_20.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_20.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_20.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_20.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_20.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_20.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_20.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_20.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_20.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_20.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_20.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_20.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_20.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_20.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_20.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_20.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_20.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_20.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_20.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_20.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_20.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_20.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_20.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_20.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_21.setText(_translate("MainWindow", "21. Appliance name :"))
        self.Togglebutton_21.setText(_translate("MainWindow", "<"))
        self.power_21.setText(_translate("MainWindow", "Power (w)"))
        self.number_21.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_21.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_21.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_21.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_21.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_21.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_21.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_21.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_21.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_21.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_21.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_21.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_69.setText(_translate("MainWindow", "--"))
        self.label_70.setText(_translate("MainWindow", "--"))
        self.wd_we_21.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_21.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_71.setText(_translate("MainWindow", "--"))
        self.r_var_21.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_21.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_21.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_21.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_21.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_21.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_21.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_21.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_21.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_21.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_21.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_21.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_21.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_21.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_21.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_21.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_21.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_21.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_21.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_21.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_21.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_21.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_21.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_21.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_21.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_21.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_21.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_21.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_22.setText(_translate("MainWindow", "22. Appliance name :"))
        self.Togglebutton_22.setText(_translate("MainWindow", "<"))
        self.power_22.setText(_translate("MainWindow", "Power (w)"))
        self.number_22.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_22.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_22.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_22.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_22.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_22.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_22.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_22.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_22.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_22.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_22.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_22.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_72.setText(_translate("MainWindow", "--"))
        self.label_73.setText(_translate("MainWindow", "--"))
        self.wd_we_22.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_22.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_74.setText(_translate("MainWindow", "--"))
        self.r_var_22.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_22.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_22.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_22.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_22.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_22.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_22.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_22.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_22.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_22.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_22.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_22.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_22.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_22.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_22.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_22.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_22.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_22.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_22.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_22.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_22.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_22.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_22.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_22.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_22.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_22.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_22.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_22.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_23.setText(_translate("MainWindow", "23. Appliance name :"))
        self.Togglebutton_23.setText(_translate("MainWindow", "<"))
        self.power_23.setText(_translate("MainWindow", "Power (w)"))
        self.number_23.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_23.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_23.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_23.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_23.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_23.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_23.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_23.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_23.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_23.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_23.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_23.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_75.setText(_translate("MainWindow", "--"))
        self.label_76.setText(_translate("MainWindow", "--"))
        self.wd_we_23.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_23.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_77.setText(_translate("MainWindow", "--"))
        self.r_var_23.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_23.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_23.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_23.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_23.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_23.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_23.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_23.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_23.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_23.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_23.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_23.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_23.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_23.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_23.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_23.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_23.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_23.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_23.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_23.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_23.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_23.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_23.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_23.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_23.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_23.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_23.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_23.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_24.setText(_translate("MainWindow", "24. Appliance name :"))
        self.Togglebutton_24.setText(_translate("MainWindow", "<"))
        self.power_24.setText(_translate("MainWindow", "Power (w)"))
        self.number_24.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_24.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_24.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_24.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_24.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_24.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_24.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_24.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_24.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_24.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_24.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_24.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_78.setText(_translate("MainWindow", "--"))
        self.label_79.setText(_translate("MainWindow", "--"))
        self.wd_we_24.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_24.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_80.setText(_translate("MainWindow", "--"))
        self.r_var_24.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_24.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_24.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_24.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_24.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_24.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_24.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_24.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_24.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_24.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_24.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_24.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_24.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_24.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_24.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_24.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_24.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_24.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_24.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_24.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_24.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_24.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_24.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_24.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_24.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_24.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_24.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_24.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_25.setText(_translate("MainWindow", "25. Appliance name :"))
        self.Togglebutton_25.setText(_translate("MainWindow", "<"))
        self.power_25.setText(_translate("MainWindow", "Power (w)"))
        self.number_25.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_25.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_25.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_25.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_25.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_25.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_25.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_25.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_25.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_25.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_25.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_25.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_81.setText(_translate("MainWindow", "--"))
        self.label_82.setText(_translate("MainWindow", "--"))
        self.wd_we_25.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_25.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_83.setText(_translate("MainWindow", "--"))
        self.r_var_25.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_25.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_25.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_25.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_25.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_25.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_25.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_25.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_25.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_25.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_25.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_25.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_25.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_25.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_25.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_25.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_25.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_25.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_25.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_25.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_25.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_25.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_25.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_25.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_25.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_25.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_25.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_25.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_26.setText(_translate("MainWindow", "26. Appliance name :"))
        self.Togglebutton_26.setText(_translate("MainWindow", "<"))
        self.power_26.setText(_translate("MainWindow", "Power (w)"))
        self.number_26.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_26.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_26.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_26.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_26.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_26.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_26.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_26.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_26.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_26.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_26.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_26.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_84.setText(_translate("MainWindow", "--"))
        self.label_85.setText(_translate("MainWindow", "--"))
        self.wd_we_26.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_26.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_86.setText(_translate("MainWindow", "--"))
        self.r_var_26.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_26.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_26.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_26.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_26.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_26.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_26.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_26.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_26.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_26.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_26.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_26.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_26.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_26.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_26.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_26.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_26.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_26.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_26.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_26.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_26.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_26.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_26.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_26.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_26.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_26.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_26.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_26.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_27.setText(_translate("MainWindow", "27. Appliance name :"))
        self.Togglebutton_27.setText(_translate("MainWindow", "<"))
        self.power_27.setText(_translate("MainWindow", "Power (w)"))
        self.number_27.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_27.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_27.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_27.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_27.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_27.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_27.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_27.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_27.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_27.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_27.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_27.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_87.setText(_translate("MainWindow", "--"))
        self.label_88.setText(_translate("MainWindow", "--"))
        self.wd_we_27.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_27.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_89.setText(_translate("MainWindow", "--"))
        self.r_var_27.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_27.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_27.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_27.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_27.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_27.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_27.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_27.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_27.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_27.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_27.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_27.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_27.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_27.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_27.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_27.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_27.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_27.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_27.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_27.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_27.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_27.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_27.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_27.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_27.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_27.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_27.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_27.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_28.setText(_translate("MainWindow", "28. Appliance name :"))
        self.Togglebutton_28.setText(_translate("MainWindow", "<"))
        self.power_28.setText(_translate("MainWindow", "Power (w)"))
        self.number_28.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_28.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_28.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_28.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_28.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_28.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_28.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_28.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_28.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_28.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_28.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_28.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_90.setText(_translate("MainWindow", "--"))
        self.label_91.setText(_translate("MainWindow", "--"))
        self.wd_we_28.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_28.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_92.setText(_translate("MainWindow", "--"))
        self.r_var_28.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_28.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_28.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_28.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_28.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_28.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_28.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_28.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_28.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_28.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_28.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_28.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_28.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_28.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_28.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_28.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_28.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_28.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_28.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_28.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_28.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_28.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_28.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_28.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_28.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_28.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_28.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_28.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_29.setText(_translate("MainWindow", "29. Appliance name :"))
        self.Togglebutton_29.setText(_translate("MainWindow", "<"))
        self.power_29.setText(_translate("MainWindow", "Power (w)"))
        self.number_29.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_29.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_29.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_29.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_29.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_29.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_29.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_29.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_29.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_29.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_29.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_29.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_93.setText(_translate("MainWindow", "--"))
        self.label_94.setText(_translate("MainWindow", "--"))
        self.wd_we_29.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_29.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_95.setText(_translate("MainWindow", "--"))
        self.r_var_29.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_29.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_29.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_29.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_29.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_29.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_29.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_29.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_29.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_29.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_29.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_29.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_29.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_29.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_29.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_29.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_29.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_29.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_29.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_29.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_29.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_29.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_29.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_29.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_29.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_29.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_29.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_29.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.appliancename_label_30.setText(_translate("MainWindow", "30. Appliance name :"))
        self.Togglebutton_30.setText(_translate("MainWindow", "<"))
        self.power_30.setText(_translate("MainWindow", "Power (w)"))
        self.number_30.setText(_translate("MainWindow", "Number of Appliance"))
        self.power_spinBox_30.setToolTip(_translate("MainWindow", "Power rating of this appliance"))
        self.number_spinBox_30.setToolTip(_translate("MainWindow", "Number of Appliances of this kind, More than one user ? Multiply it with number of user and enter."))
        self.r_var_spinBox_30.setToolTip(_translate("MainWindow", "variability of the start and ending time of windows in percent, the same for all windows, by default 0"))
        self.wd_we_comboBox_30.setToolTip(_translate("MainWindow", " Specify whether the appliance is used only on weekdays , weekend or the whole week , by defaultWhole Week.2"))
        self.wd_we_comboBox_30.setItemText(0, _translate("MainWindow", "Only on Week ends"))
        self.wd_we_comboBox_30.setItemText(1, _translate("MainWindow", "Only on Week Days"))
        self.wd_we_comboBox_30.setItemText(2, _translate("MainWindow", "Whole Week"))
        self.num_windows_spinBox_30.setToolTip(_translate("MainWindow", "How many times a day this appliance is turned on ? if once then 1 window, You can add maximum 3 windows. Below you can provide Start and end time of window."))
        self.num_windows_30.setText(_translate("MainWindow", "Utilization Windows"))
        self.w1start_30.setText(_translate("MainWindow", "Window1 Start time"))
        self.function_time_spinBox_30.setToolTip(_translate("MainWindow", "Total time (minutes) the appliance is on during the day (not dependant on windows). Acceptable values are in range 0 to 1440,"))
        self.label_96.setText(_translate("MainWindow", "--"))
        self.label_97.setText(_translate("MainWindow", "--"))
        self.wd_we_30.setText(_translate("MainWindow", "Usage pattern"))
        self.function_time_30.setText(_translate("MainWindow", "Total Usage per day (Minutes)"))
        self.label_98.setText(_translate("MainWindow", "--"))
        self.r_var_30.setText(_translate("MainWindow", "% Variability in Windows"))
        self.occationaluse_30.setText(_translate("MainWindow", "Occational Use %"))
        self.occationaluse_spinBox_30.setToolTip(_translate("MainWindow", "Defines how often the appliance is used, e.g. every second day will be 50%, by default 100"))
        self.func_cycle_spinBox_30.setToolTip(_translate("MainWindow", "minimum time(minutes) the appliance is kept on after switch-on event, by default 1"))
        self.fixed_30.setText(_translate("MainWindow", "Fixed ?"))
        self.tfrv_30.setText(_translate("MainWindow", "% of Usage time with r.var."))
        self.flat_30.setText(_translate("MainWindow", "Flat ?"))
        self.tfrv_spinBox_30.setToolTip(_translate("MainWindow", "Percentage of total time of use that is subject to random variability. For time (not for windows), randomizes the total time the appliance is on, by default 0"))
        self.flat_comboBox_30.setToolTip(_translate("MainWindow", "Allows to model appliances that are not subject to any kind of random variability, such as public lighting, by default “no”"))
        self.flat_comboBox_30.setItemText(0, _translate("MainWindow", "no"))
        self.flat_comboBox_30.setItemText(1, _translate("MainWindow", "yes"))
        self.thermal_v_spinBox_30.setToolTip(_translate("MainWindow", "Range of change of the power of the appliance (e.g. shower not taken at same temparature) or for the power of duty cycles (e.g. for a cooker, AC, heater if external temperature is different…), by default 0"))
        self.fixe_comboBox_30.setToolTip(_translate("MainWindow", "if ‘yes’, all the ‘n’ appliances of this kind are always switched-on together, by default “no”"))
        self.fixe_comboBox_30.setItemText(0, _translate("MainWindow", "no"))
        self.fixe_comboBox_30.setItemText(1, _translate("MainWindow", "yes"))
        self.func_cycle_30.setText(_translate("MainWindow", "Minium use minutes"))
        self.thermal_v_30.setText(_translate("MainWindow", "% of Thermal variability"))
        self.w1start_timeEdit_30.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 1"))
        self.w2end_30.setText(_translate("MainWindow", "Window2 End time"))
        self.w2start_30.setText(_translate("MainWindow", "Window2 Start time"))
        self.w1end_timeEdit_30.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 1"))
        self.w2start_timeEdit_30.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 2"))
        self.w3start_30.setText(_translate("MainWindow", "Window3 Start time"))
        self.w1end_30.setText(_translate("MainWindow", "Window1 End time"))
        self.w3end_30.setText(_translate("MainWindow", "Window3 End time"))
        self.w2end_timeEdit_30.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 2"))
        self.w3start_timeEdit_30.setToolTip(_translate("MainWindow", "Select Start time in HH:MM for window 3"))
        self.w3end_timeEdit_30.setToolTip(_translate("MainWindow", "Select End time in HH:MM for window 3"))
        self.groupBox_1.setTitle(_translate("MainWindow", "Simulation Configuration"))
        self.dateEdit_Label_1.setText(_translate("MainWindow", "Select Start Date"))
        self.ddmmyyyy_1.setText(_translate("MainWindow", "(DD-MM-YYYY)"))
        self.ndays_label_1.setText(_translate("MainWindow", "For How many Days ?"))
        self._1.setText(_translate("MainWindow", "(365 for one year, 366 for Leap Year)"))
        self.set_title_label_1.setText(_translate("MainWindow", "Set Desired Title for graph :"))
        self.simulate_pushButton_1.setText(_translate("MainWindow", "Simulate"))
        self.timestamp_label_1.setText(_translate("MainWindow", "Select Timestamp :"))
        self.Minute_radioButton_1.setText(_translate("MainWindow", "1 Minute"))
        self.FifteenMinute_radioButton_1.setText(_translate("MainWindow", "15 Minute"))
        self.Hourly_radioButton_1.setText(_translate("MainWindow", "Hourly"))
        self.Daily_radioButton_1.setText(_translate("MainWindow", "Daily"))
        self.Monthly_radioButton_1.setText(_translate("MainWindow", "Monthly"))
        self.barchart_radioButton_1.setText(_translate("MainWindow", "Bar Chart (Monthly)"))
        self.generate_pushButton_1.setText(_translate("MainWindow", "Generate"))
        self.save_image_pushButton.setText(_translate("MainWindow", "Save as image"))
        self.save_csv_pushButton.setText(_translate("MainWindow", "Save as .CSV"))
        self.ramp_lite_intro_label.setText(_translate("MainWindow", "RAMP Lite is for quick simulation. Single user with limited 30 Appliances. For more Users and Appliances use RAMP Advance,See Help page !"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Ramp_Lite_tab), _translate("MainWindow", "Ramp Lite"))
        self.create_data_radioButton_1.setText(_translate("MainWindow", "Create User and Appliance database"))
        self.create_user_instruction_label_1.setText(_translate("MainWindow", "Add more Appliance with Comma Seperated"))
        self.create_user_tableWidget_1.setSortingEnabled(False)
        self.add_user_pushButton_1.setText(_translate("MainWindow", "Add User"))
        self.save_set_pushButton_1.setText(_translate("MainWindow", "Save and Set Parameters"))
        self.remove_user_pushButton_1.setText(_translate("MainWindow", "Remove User"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.CreateUser), _translate("MainWindow", "Create User and Appliance"))
        self.parameters_instruction_lablel_1.setText(_translate("MainWindow", "Need Help in Parameters ? See Help section or"))
        self.label_6.setText(_translate("MainWindow", "<html><head/><body><p>Or Click  : <a href=\"https://rampdemand.readthedocs.io/en/latest/api_document/ramp.User.__init__.html#ramp.User.__init__\"><span style=\" text-decoration: underline; color:#0000ff;\">User</span></a></p></body></html>"))
        self.label_7.setText(_translate("MainWindow", "<html><head/><body><p><a href=\"https://rampdemand.readthedocs.io/en/latest/api_document/ramp.Appliance.__init__.html#ramp.Appliance.__init__\"><span style=\" text-decoration: underline; color:#0000ff;\">Appliance</span></a></p></body></html>"))
        self.label_8.setText(_translate("MainWindow", "<html><head/><body><p><a href=\"https://rampdemand.readthedocs.io/en/latest/api_document/ramp.Appliance.windows.html#ramp.Appliance.windows\"><span style=\" text-decoration: underline; color:#0000ff;\">Windows</span></a></p></body></html>"))
        self.label_10.setText(_translate("MainWindow", "<html><head/><body><p><a href=\"https://rampdemand.readthedocs.io/en/latest/api_document/ramp.Appliance.specific_cycle_1.html#ramp.Appliance.specific_cycle_1\"><span style=\" text-decoration: underline; color:#0000ff;\">Cycle</span></a></p></body></html>"))
        self.parameter_save_pushButton_1.setText(_translate("MainWindow", "Save"))
        self.and_label_1.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\">And</p></body></html>"))
        self.Use_pushButton_1.setText(_translate("MainWindow", "Use for Simulation"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.parameters), _translate("MainWindow", "Set Parameters      "))
        self.i_already_have_data_radioButton.setToolTip(_translate("MainWindow", "If you already have standard .xlsx file in which User and Appliance data is stored them you can directly Upload it here. To know about the standard .xlsx file please visit Help section."))
        self.i_already_have_data_radioButton.setText(_translate("MainWindow", "I Already have .xlsx file with Database :"))
        self.import_pushButton_1.setText(_translate("MainWindow", "Import .xlsx file"))
        self.ramp_advance_groupbox_1.setTitle(_translate("MainWindow", "Simulation Configuration:"))
        self.selected_user_list_label_1.setText(_translate("MainWindow", "Selected User List :"))
        self.selected_user_lineEdit_1.setToolTip(_translate("MainWindow", "If you type comma sepereted User name Manually here, make sure it matches with origial name."))
        self.dateEdit_label_2.setText(_translate("MainWindow", "Select Start date :"))
        self.ddmmyyyy_label_2.setText(_translate("MainWindow", "DD-MM-YYYY"))
        self.ndays_label_2.setText(_translate("MainWindow", "Number of days :"))
        self._2.setText(_translate("MainWindow", "366 for Leap Years."))
        self.for_all_users_radioButton_1.setToolTip(_translate("MainWindow", "If you want to simulate for All user listed in Table or .xlsx file"))
        self.for_all_users_radioButton_1.setText(_translate("MainWindow", "For All Users"))
        self.selected_users_radioButton_1.setToolTip(_translate("MainWindow", "Out of all created Users, if you want to simulate only for some selected users."))
        self.selected_users_radioButton_1.setText(_translate("MainWindow", "Selected Users :"))
        self.add_to_list_pushButton_1.setText(_translate("MainWindow", "+ Add to List"))
        self.set_title_label_2.setText(_translate("MainWindow", "Set Plot title for individual Users :"))
        self.set_title_lineEdit_2.setText(_translate("MainWindow", "Energy Consumption - (Individual Users)"))
        self.set_title_label_3.setText(_translate("MainWindow", "Set Plot title for sum of all Users :"))
        self.set_title_lineEdit_3.setText(_translate("MainWindow", "Energy Consumption - (All Users)"))
        self.simulate_pushButton_2.setText(_translate("MainWindow", "Simulate"))
        self.timestamp_label_2.setText(_translate("MainWindow", "Select Timestamp :"))
        self.Minute_radioButton_2.setText(_translate("MainWindow", "1 Minute"))
        self.FifteenMinute_radioButton_2.setText(_translate("MainWindow", "15 Minute"))
        self.Hourly_radioButton_2.setText(_translate("MainWindow", "Hourly"))
        self.Daily_radioButton_2.setText(_translate("MainWindow", "Daily"))
        self.Monthly_radioButton_2.setText(_translate("MainWindow", "Monthly"))
        self.barchart_radioButton_2.setText(_translate("MainWindow", "Bar Chart (Monthly)"))
        self.generate_pushButton_2.setText(_translate("MainWindow", "Generate"))
        self.save_image_pushButton_1.setToolTip(_translate("MainWindow", "Will Save left image"))
        self.save_image_pushButton_1.setText(_translate("MainWindow", "Save Image 1"))
        self.save_image_pushButton_2.setToolTip(_translate("MainWindow", "Will Save image on the right side"))
        self.save_image_pushButton_2.setText(_translate("MainWindow", "2"))
        self.save_csv_pushButton_1.setToolTip(_translate("MainWindow", "Will save Timeseries data for individual Users in one file."))
        self.save_csv_pushButton_1.setText(_translate("MainWindow", "Save .CSV 1"))
        self.save_csv_pushButton_2.setToolTip(_translate("MainWindow", "Will Save Timeseries of sum of all Users."))
        self.save_csv_pushButton_2.setText(_translate("MainWindow", "2"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Ramp_Advance_tab), _translate("MainWindow", "RAMP Advance"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Tree_view_tab), _translate("MainWindow", "Tree View"))
        self.label.setText(_translate("MainWindow", "<html><head/><body><p><a href=\"https://rampdemand.org/about/\"><span style=\" text-decoration: underline; color:#000000;\">Official Website of</span></a><a href=\"https://rampdemand.org/about/\"><span style=\" text-decoration: underline; color:#0000ff;\"> RAMP</span></a></p></body></html>"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p><a href=\"https://rampdemand.readthedocs.io/\"><span style=\" color:#000000;\">RAMP</span></a><a href=\"https://rampdemand.readthedocs.io/\"><span style=\" color:#0000ff;\"> Documentation</span></a></p></body></html>"))
        self.label_9.setText(_translate("MainWindow", "<html><head/><body><p><a href=\"https://rampdemand.readthedocs.io/en/latest/api_references.html\"><span style=\" text-decoration: underline; color:#0000ff;\">API References</span></a></p></body></html>"))
        self.label_11.setText(_translate("MainWindow", "<html><head/><body><p><a href=\"https://rampdemand.readthedocs.io/en/latest/api_document/ramp.User.__init__.html#ramp.User.__init__\"><span style=\" text-decoration: underline; color:#0000ff;\">User Parameters</span></a></p></body></html>"))
        self.label_99.setText(_translate("MainWindow", "<html><head/><body><p><a href=\"https://rampdemand.readthedocs.io/en/latest/api_document/ramp.Appliance.__init__.html#ramp.Appliance.__init__\"><span style=\" text-decoration: underline; color:#0000ff;\">Appliance Parameters</span></a></p></body></html>"))
        self.label_100.setText(_translate("MainWindow", "<html><head/><body><p><a href=\"https://rampdemand.readthedocs.io/en/latest/api_document/ramp.Appliance.windows.html#ramp.Appliance.windows\"><span style=\" text-decoration: underline; color:#0000ff;\">Appliance Window Parameters</span></a></p></body></html>"))
        self.label_101.setText(_translate("MainWindow", "<html><head/><body><p><a href=\"https://rampdemand.readthedocs.io/en/latest/api_document/ramp.Appliance.specific_cycle_1.html#ramp.Appliance.specific_cycle_1\"><span style=\" text-decoration: underline; color:#0000ff;\">Appliance Specific Cycle (Only for Appliance with multiple Duty cycle)</span></a></p></body></html>"))
        self.label_104.setText(_translate("MainWindow", "<html><head/><body><p><a href=\"https://drive.google.com/file/d/1CZ8g5DOgo2e4h3vLrdSVpGt-KVbYaEVt/view?usp=sharing\"><span style=\"font-weight:600; text-decoration: underline; color:#0000ff;\">Video Tutorial</span></a></p></body></html>"))
        self.label_102.setText(_translate("MainWindow", " RAMP Lite"))
        self.help_textEdit_ramp_lite.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">RAMP Lite can be used when you want to have quick simulation. You can simulate for One user and up to 30 Appliance for that user. ( Simulation for Appliance with multiple duty cycle is not possible with RAMP Lite)</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">For better understanding, I would suggest you to watch Tutorial Video (Link is above).</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; color:#aa0000;\">Steps to Generate Load Profiles:</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 1 - Define User</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 2 - Define Appliances and their parameters</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 3 - Setup for Simulation (Simulation configuration)</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 4 - Press Simulate</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 5 - You may regenrate same data for different Timestamps</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 6 - You may save plots as image and Load profiles as .CSV file.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; color:#aa0000;\">Tips:</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">1. You may hover your cursor on parameter data enry boxs to read info or instruction.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">2. Make sure that Appliance\'s total function time is not less than total window time, otherwise Application may Crash due to error.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">3. LEft and right part of RAMP Lite Tab are seperated by splitter, You can strech sections on left or right.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">4. While saving .CSV file please make sure correct timestamp is selected. CSV file will be saved based on timestamp selected, irrespective of plot generated or not.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; color:#aa0000;\">Note: </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">For sake of simplicity, Name of some appliance parameters are changed, If you do not understand the parameter by it\'s name then hover the cursor on that and read short info. Or you can go to documentaion of ramp and can read what each parameter does mean.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Here under you can find Parameters from RAMP Lite and their actual designation in RAMP documentation</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">00.  Appliance Name = <span style=\" font-weight:600;\">name</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">01.  Number of Appliances = <span style=\" font-weight:600;\">number</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">02.  Power = <span style=\" font-weight:600;\">power</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">03.  Total Usage Per day = <span style=\" font-weight:600;\">func_time</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">04.  Utilization Windows = <span style=\" font-weight:600;\">num_windows</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">05.  Occasional Use % = <span style=\" font-weight:600;\">occasional_use</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">06.  Usage Pattern = wd_we_type</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">07.  Window1 start time, Window1 end time = <span style=\" font-weight:600;\">window_1 </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">08.  % Variability in windows = <span style=\" font-weight:600;\">random_var_w</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">09.  % of usage time with r.var. = <span style=\" font-weight:600;\">time_fraction_random_variability</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">10.  % of thermal variability = <span style=\" font-weight:600;\">thermal_p_var</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">11.  Fixed ? = <span style=\" font-weight:600;\">fixed</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">12.  Flat ? = <span style=\" font-weight:600;\">flat</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.label_103.setText(_translate("MainWindow", " RAMP Advance"))
        self.help_textEdit_ramp_advance.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:12pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">RAMP Advance may be used when you have more than one User or more than 30 Appliances or appliance have multiple duty cycles. For better understanding, I would suggest you to watch Tutorial Video (Link is above).</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">RAMP Advance is the excel integrated method. </p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" color:#aa0000;\">You can Simulate by two methods.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">1) Create User and Appliance data in App itself</p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">2) You may use your existing .xlsx file which contains User and Appliance database in standard accepted format.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; color:#aa0000;\">1) Create User and Appliance Parameter</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 1 - Select option called \'<span style=\" text-decoration: underline;\">Create User an Applaince database\'</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; text-decoration: underline;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 2 - Under tab called \'Define User and Applaince\' tab you can define User in User column, and Applaince in Applaince column. You can add more appliance for any user by seperating it with comma. e.g Light, TV, Fridge in Appliance column</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 3 - You may Add more or Remove user by buttons in the bottom same table.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 4 - Once you are done with defining, Press \'Save and Set Paraeters\' button.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 5 - Switch to tab \'Set Parameters\'</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 6 - You will see your defined User and Apllaince in tabular form. each column represents a parameter. Edit them as per your requirement. For information regarding parameters please visit RAMP Documentation.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 7 - Once you are finish with defining paramters then press \'Save\'. When you press save, data are stored in UseCase and one .xlsx file is created in your currunt directory. If you open it, please close it before you do simulation again. You may copy, rename and save that file at your desire location. File will be replace by new data when you do simulation next time.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 8 - Press \' Use for Simulation\'</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 9 - You have two option to select \'For all users\' or \'For selected users\'. For selected users select them fron dropdown combo box and press add to list. You may add more than one User. If you opt \'For all User\' you will have simulation for all users.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 10 - Provide Data and number of days, Desired Title for plots and press Simulate.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 11 - You may generate plots for sifferent Timestamps by selecting Timestamp followed by pressing \'generate\' button.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 12 - You may save plots as image file.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Step 13 - You may save Load profiles as CSV file. Make sure you have correct Timestamp Selected.</p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:600; color:#aa0000;\">2) I already have .xlsx filewith database</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-weight:600; color:#aa0000;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" color:#000000;\">Step 1 - If you opt for this option then you may import your file by pressing button \'import .xlsx file\'</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; color:#000000;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" color:#000000;\">Step 2 - After importing, You may opt for \'All users\' or for \'Selected Users\'. For selected users follow similar method mentioned in above section.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; color:#000000;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" color:#000000;\">Step 3 - Provide Date and number of days, Desired title for your plots and press simulation.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; color:#000000;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" color:#000000;\">Step 4 - You may generate plots for different Timestamps by selecting them followed by pressing \'generate\' button.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; color:#000000;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" color:#000000;\">Step 5 - You may save plots as image file, </span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; color:#000000;\"><br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" color:#000000;\">Step 6 - You may save Load profiles as CSV file. Make sure you have correct timestamp selected.</span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; color:#000000;\"><br /></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Help_tab), _translate("MainWindow", "Help ? / Read Me"))
        self.console_1.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))


        self.use_case = None
        self.selected_users = []

        self.log_textedit = QTextEditLogger(self.console_1)
        sys.stdout = self.log_textedit
        sys.stderr = self.log_textedit     
        
        # Keep All applaince widget hidden initially
        for i in range(1, 31):
            getattr(self, f'widget_{i}').hide()

        
        
        # Set default 'Whole Week' for combo box for each Applainces (RAMP Lite)
        for i in range(1, 31):
            getattr(self, f'wd_we_comboBox_{i}').setCurrentIndex(2)
        
        

        
        # Set widgets disabled at initial stage (RAMP LIte)
        self.start_dateEdit_1.setEnabled(False)
        self.ndays_spinBox_1.setEnabled(False)
        self.set_title_lineEdit_1.setEnabled(False)
        self.simulate_pushButton_1.setEnabled(False)     
        self.scrollArea.setEnabled(False)
        self.console_1.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.console_1.setMinimumSize(200, 200) 
     
        # PushButtons connected to functions (RAMP Lite)
        #
        self.save_image_pushButton.clicked.connect(self.save_figure_lite)
        self.generate_pushButton_1.clicked.connect(self.generate_plots_lite)
        self.save_csv_pushButton.clicked.connect(self.save_as_csv_lite)
        self.simulate_pushButton_1.clicked.connect(self.ramplite_simulation) 
       
        # Create a Group of Timestamp Radio buttons
        radio_button_group = QtWidgets.QButtonGroup()
        radio_button_group.addButton(self.Minute_radioButton_1)
        radio_button_group.addButton(self.FifteenMinute_radioButton_1)
        radio_button_group.addButton(self.Hourly_radioButton_1)
        radio_button_group.addButton(self.Daily_radioButton_1)
        radio_button_group.addButton(self.Monthly_radioButton_1)
        radio_button_group.addButton(self.barchart_radioButton_1)
        

        # Enable radio buttons on simulate button press
        def enable_timestamp_Group_radio_buttons(enable=True):
            for button in radio_button_group.buttons():
                button.setEnabled(enable)

        # Disable the radio buttons initially
        enable_timestamp_Group_radio_buttons(False)
        # Connect simulate button press to enabling the radio buttons
        self.simulate_pushButton_1.clicked.connect(lambda: enable_timestamp_Group_radio_buttons(True))
        


        # Assuming you have appliancename_lineEdit_1 to appliancename_lineEdit_30
        self.appliancename_lineEdits = [getattr(self, f'appliancename_lineEdit_{i}') for i in range(1, 31)]
        # Connect signal to slot
        for lineEdit in self.appliancename_lineEdits:
            lineEdit.textChanged.connect(self.handle_appliancename_change)

        
        # Function to handle changes in user name
        def handle_username_change():
            if self.user_name_lineEdit_1.text():
                self.scrollArea.setEnabled(True)
            else:
                self.scrollArea.setEnabled(False)

        # Connect signal to slot
        self.user_name_lineEdit_1.textChanged.connect(handle_username_change)

        


        # Containers
        self.widgets = []
        self.toggle_buttons = []
        # Populate the lists with widgets and toggle buttons (RAMP Lite)
        for i in range(1, 31):
            widget = getattr(self, f'widget_{i}')
            toggle_button = getattr(self, f'Togglebutton_{i}')
            self.widgets.append(widget)
            self.toggle_buttons.append(toggle_button)

            widget.setEnabled(False)
            widget.hide()

            
            
            

        # Function to handle changes in appliance names
        def handle_appliance_name_change(widget_index):
            def inner():
                if getattr(self, f'appliancename_lineEdit_{widget_index}').text():
                    self.widgets[widget_index-1].setEnabled(True)
                else:
                    self.widgets[widget_index-1].setEnabled(False)
            return inner

        # Connect signals to slots
        for i in range(1, 31):
            appliancename_lineEdit = getattr(self, f'appliancename_lineEdit_{i}')
            appliancename_lineEdit.textChanged.connect(handle_appliance_name_change(i))



            
        # Enable buttons when simulate button pressed ( RAMP Lite) 
        def enable_buttons():
            self.save_image_pushButton.setEnabled(True)
            self.save_csv_pushButton.setEnabled(True)
            self.generate_pushButton_1.setEnabled(True)

        # Connect simulate button press to enabling the buttons
        self.simulate_pushButton_1.clicked.connect(enable_buttons)
        
        # Create a layout for Ramp_lite_graphicsview_1
        self.rampLiteLayout = QtWidgets.QVBoxLayout(self.Ramp_lite_graphicsview_1)
        
        # Create a figure for plotting with dimensions matching the layout
        self.figure1, ax = plt.subplots(figsize=(5, 1), nrows=1, ncols=1)

        
        # Create a canvas to display the figure
        self.canvas1 = FigureCanvas(self.figure1)
        
        # Set up layout for plots
        self.plotLayout_1 = QtWidgets.QHBoxLayout()
        
        # Add the canvas to the layout
        self.plotLayout_1.addWidget(self.canvas1)
        
        # Add the plotLayout_1 to the rampLiteLayout
        self.rampLiteLayout.addLayout(self.plotLayout_1)
        
        
 
        
        self.create_user_tableWidget_1.setColumnCount(2)
        self.create_user_tableWidget_1.setHorizontalHeaderLabels(['User', 'Appliance'])
        self.create_user_tableWidget_1.setRowCount(1)  # Start with 3 rows

        # Set the "Appliance" column to adjust its size automatically
        header = self.create_user_tableWidget_1.horizontalHeader()
        header.setSectionResizeMode(1, QHeaderView.ResizeToContents)
        header.setStyleSheet("QHeaderView::section { border: 1px solid black; background-color: lightgray }")
    

 

 

        
        
        
        # RAMP Advance GUI Objects/elements Condition functionality
        #
        #
        #
        self.select_user_comboBox_1.setEnabled(False)
        self.selected_user_lineEdit_1.setEnabled(False)
        self.add_to_list_pushButton_1.setEnabled(False)
        self.simulate_pushButton_2.clicked.connect(self.ramp_advance_simulation)
        self.generate_pushButton_2.clicked.connect(self.generate_plots_ramp_advance)
        self.save_image_pushButton_1.clicked.connect(self.save_image_1)
        self.save_image_pushButton_2.clicked.connect(self.save_image_2)
        self.save_csv_pushButton_1.clicked.connect(self.save_as_csv_advance_individual_user)
        self.save_csv_pushButton_2.clicked.connect(self.save_as_csv_advance_sum_of_users)
        self.add_to_list_pushButton_1.clicked.connect(self.addUserFromComboBox)
        self.add_user_pushButton_1.clicked.connect(self.create_user)
        self.remove_user_pushButton_1.clicked.connect(self.remove_user)   
        self.save_set_pushButton_1.clicked.connect(self.save_set_parameters)
        self.parameter_save_pushButton_1.clicked.connect(self.save_created_file)
        
        # Connect the itemChanged signal to a function
        self.parameters_TableWidget_1.itemChanged.connect(self.enableSaveButton)

        # Connect the clicked signal of parameter_save_pushButton_1
        self.parameter_save_pushButton_1.clicked.connect(self.enableUseExportButtons)       
        self.create_user_tableWidget_1.itemChanged.connect(self.enableSaveSetButton)
        
        
        # For importing with file dialog
        self.import_pushButton_1.clicked.connect(self.importFile)
        
        # For importing with the default file
        self.Use_pushButton_1.clicked.connect(lambda: self.importFile(use_default=True))
      
        

        self.tabWidget_2.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)    
        
        #RamP Advance radio button for plot generation
        # Create a Timestamp Radiobutton's Group 
        radio_button_group_2 = QtWidgets.QButtonGroup()
        radio_button_group_2.addButton(self.Minute_radioButton_2)
        radio_button_group_2.addButton(self.FifteenMinute_radioButton_2)
        radio_button_group_2.addButton(self.Hourly_radioButton_2)
        radio_button_group_2.addButton(self.Daily_radioButton_2)
        radio_button_group_2.addButton(self.Monthly_radioButton_2)
        radio_button_group_2.addButton(self.barchart_radioButton_2)
        
        
        
        # Radio toggle (Allows only one radio button to be selected at a time)
        def handle_radio_button_toggled():
            if self.create_data_radioButton_1.isChecked():
                self.i_already_have_data_radioButton.setChecked(False)
            elif self.i_already_have_data_radioButton.isChecked():
                self.create_data_radioButton_1.setChecked(False)

        self.create_data_radioButton_1.toggled.connect(handle_radio_button_toggled)
        self.i_already_have_data_radioButton.toggled.connect(handle_radio_button_toggled)
        
        
        radio_button_group_2 = QtWidgets.QButtonGroup(self.ramp_advance_groupbox_1)
        radio_button_group_2.addButton(self.for_all_users_radioButton_1)
        radio_button_group_2.addButton(self.selected_users_radioButton_1)
        
        
        # When ' I already have .xlsx file selected it will enable 'import file' button
        def handle_i_already_have_data_radio_button_clicked():
            if self.i_already_have_data_radioButton.isChecked():
                self.import_pushButton_1.setEnabled(True)
            else:
                self.import_pushButton_1.setEnabled(False)

        self.i_already_have_data_radioButton.clicked.connect(handle_i_already_have_data_radio_button_clicked)
        
        
        # When import button clicked it will enable two more radio button for selection
        def handle_import_button_clicked():
            self.for_all_users_radioButton_1.setEnabled(True)
            self.selected_users_radioButton_1.setEnabled(True)

        self.import_pushButton_1.clicked.connect(handle_import_button_clicked)
        
        
        # When ' For all users' radio button selected it will enable following objects otherwise disabled
        def handle_all_users_radio_button_checked():
            if self.for_all_users_radioButton_1.isChecked():
                self.start_dateEdit_2.setEnabled(True)
                self.ndays_spinBox_2.setEnabled(True)
                self.set_title_lineEdit_2.setEnabled(True)
                self.set_title_lineEdit_3.setEnabled(True)
                self.simulate_pushButton_2.setEnabled(True)
                self.Ramp_advance_graphicsview_1.setEnabled(True)
                self.select_user_comboBox_1.setEnabled(False)
                self.add_to_list_pushButton_1.setEnabled(False)
                self.selected_user_lineEdit_1.setEnabled(False)
                
            else:
                self.start_dateEdit_2.setEnabled(False)
                self.ndays_spinBox_2.setEnabled(False)
                self.set_title_lineEdit_2.setEnabled(False)
                self.set_title_lineEdit_3.setEnabled(False)
                self.simulate_pushButton_2.setEnabled(False)
                self.Ramp_advance_graphicsview_1.setEnabled(False)

        self.for_all_users_radioButton_1.clicked.connect(handle_all_users_radio_button_checked)
        self.selected_users_radioButton_1.clicked.connect(handle_all_users_radio_button_checked)
        
        
        
        def handle_i_already_have_data_radio_button_toggled(checked):
            if not checked:
                self.for_all_users_radioButton_1.setChecked(False)
                self.selected_users_radioButton_1.setChecked(False)    
                
            self.i_already_have_data_radioButton.toggled.connect(handle_i_already_have_data_radio_button_toggled)
        
        
        # When selected user radio button selected it will enable follwing widgets otherwise disabled
        def handle_selected_users_radio_button_clicked():
            if self.selected_users_radioButton_1.isChecked():
                self.select_user_comboBox_1.setEnabled(True)
                self.add_to_list_pushButton_1.setEnabled(True)
                self.selected_user_lineEdit_1.setEnabled(True)
                
            else:
                self.select_user_comboBox_1.setEnabled(False)
                self.add_to_list_pushButton_1.setEnabled(False)
                self.selected_user_lineEdit_1.setEnabled(False)

        self.selected_users_radioButton_1.clicked.connect(handle_selected_users_radio_button_clicked)
        

        # When user for selected user selected they wil Appear in lineedit and further widgets will be enabled
        def handle_selected_user_lineEdit_text_changed():
            if self.selected_user_lineEdit_1.text():
                self.start_dateEdit_2.setEnabled(True)
                self.ndays_spinBox_2.setEnabled(True)
                self.set_title_lineEdit_2.setEnabled(True)
                self.set_title_lineEdit_3.setEnabled(True)
                self.simulate_pushButton_2.setEnabled(True)
                self.Ramp_advance_graphicsview_1.setEnabled(True)
            else:
                self.start_dateEdit_2.setEnabled(False)
                self.ndays_spinBox_2.setEnabled(False)
                self.set_title_lineEdit_2.setEnabled(False)
                self.set_title_lineEdit_3.setEnabled(False)
                self.simulate_pushButton_2.setEnabled(False)
                self.Ramp_advance_graphicsview_1.setEnabled(False)

        self.selected_user_lineEdit_1.textChanged.connect(handle_selected_user_lineEdit_text_changed)
        
        
        # When Simulation button clicked enables Timestamps radio buttons
        def enable_timestamp_Group_2_radio_buttons(enable=True):
            for button in radio_button_group_2.buttons():
                button.setEnabled(enable)

        # Disable the radio buttons initially
        enable_timestamp_Group_2_radio_buttons(False)

        # Connect simulate button press to enabling the radio buttons
        self.simulate_pushButton_2.clicked.connect(lambda: enable_timestamp_Group_2_radio_buttons(True))
        
        
        
        
        # Enable buttons when Simulate button pressed (RAMP Advance)
        def enable_buttons_2():
            self.save_image_pushButton_1.setEnabled(True)
            self.save_image_pushButton_2.setEnabled(True)
            self.save_csv_pushButton_1.setEnabled(True)
            self.save_csv_pushButton_2.setEnabled(True)
            self.generate_pushButton_2.setEnabled(True)

        # Connect simulate button press to enabling the buttons
        self.simulate_pushButton_2.clicked.connect(enable_buttons_2)
        
        
        def handle_create_data_radio_button_clicked():
            if self.create_data_radioButton_1.isChecked():
                self.tabWidget_2.setEnabled(True)
                self.create_user_tableWidget_1.setEnabled(True)
                self.add_user_pushButton_1.setEnabled(True)
            else:
                self.tabWidget_2.setEnabled(False)
                self.create_user_tableWidget_1.setEnabled(False)
                self.add_user_pushButton_1.setEnabled(False)

        def handle_add_user_button_clicked():
            self.remove_user_pushButton_1.setEnabled(True)
            

        def handle_save_set_button_clicked():
            self.parameters_TableWidget_1.setEnabled(True)


        def handle_parameter_save_button_clicked():
            self.Use_pushButton_1.setEnabled(True)


        self.create_data_radioButton_1.clicked.connect(handle_create_data_radio_button_clicked)
        self.add_user_pushButton_1.clicked.connect(handle_add_user_button_clicked)
        self.save_set_pushButton_1.clicked.connect(handle_save_set_button_clicked)


        #2
        # RAMP Advance plot setup
        # Create a QVBoxLayout for Ramp_advance_graphicsview_1
        self.rampLayout = QtWidgets.QHBoxLayout(self.Ramp_advance_graphicsview_1)

        # figure for plotting (Figure 2)
        self.figure2, self.ax1 = plt.subplots(figsize=(1, 1), nrows=1, ncols=1)
        self.figure2.subplots_adjust(left=0.08, right=0.97, bottom=0.1, top=0.9)
        self.canvas2 = FigureCanvas(self.figure2)

        # figure for plotting (Figure 3)
        self.figure3, self.ax2 = plt.subplots(figsize=(1, 1), nrows=1, ncols=1)
        self.figure3.subplots_adjust(left=0.08, right=0.97, bottom=0.1, top=0.9)
        self.canvas3 = FigureCanvas(self.figure3)

        # canvases to the layout
        self.rampLayout.addWidget(self.canvas2)
        self.rampLayout.addWidget(self.canvas3)

        # Set the layout for Ramp_advance_graphicsview_1
        self.Ramp_advance_graphicsview_1.setLayout(self.rampLayout)
            
        self.profiles_advance = None
        self.title = ""
 




        # RAMP Lite Main Functionality
        
        self.Togglebutton_1.clicked.connect(self.toggleWidget_1)
        self.Togglebutton_2.clicked.connect(self.toggleWidget_2)
        self.Togglebutton_3.clicked.connect(self.toggleWidget_3)
        self.Togglebutton_4.clicked.connect(self.toggleWidget_4)
        self.Togglebutton_5.clicked.connect(self.toggleWidget_5)
        self.Togglebutton_6.clicked.connect(self.toggleWidget_6)
        self.Togglebutton_7.clicked.connect(self.toggleWidget_7)
        self.Togglebutton_8.clicked.connect(self.toggleWidget_8)
        self.Togglebutton_9.clicked.connect(self.toggleWidget_9)
        self.Togglebutton_10.clicked.connect(self.toggleWidget_10)
        self.Togglebutton_11.clicked.connect(self.toggleWidget_11)
        self.Togglebutton_12.clicked.connect(self.toggleWidget_12)
        self.Togglebutton_13.clicked.connect(self.toggleWidget_13)
        self.Togglebutton_14.clicked.connect(self.toggleWidget_14)
        self.Togglebutton_15.clicked.connect(self.toggleWidget_15)
        self.Togglebutton_16.clicked.connect(self.toggleWidget_16)
        self.Togglebutton_17.clicked.connect(self.toggleWidget_17)
        self.Togglebutton_18.clicked.connect(self.toggleWidget_18)
        self.Togglebutton_19.clicked.connect(self.toggleWidget_19)
        self.Togglebutton_20.clicked.connect(self.toggleWidget_20)
        self.Togglebutton_21.clicked.connect(self.toggleWidget_21)
        self.Togglebutton_22.clicked.connect(self.toggleWidget_22)
        self.Togglebutton_23.clicked.connect(self.toggleWidget_23)
        self.Togglebutton_24.clicked.connect(self.toggleWidget_24)
        self.Togglebutton_25.clicked.connect(self.toggleWidget_25)
        self.Togglebutton_26.clicked.connect(self.toggleWidget_26)
        self.Togglebutton_27.clicked.connect(self.toggleWidget_27)
        self.Togglebutton_28.clicked.connect(self.toggleWidget_28)
        self.Togglebutton_29.clicked.connect(self.toggleWidget_29)
        self.Togglebutton_30.clicked.connect(self.toggleWidget_30)
        
        
        


    def toggleWidget_1(self):
        if self.widget_1.isHidden(): 
            self.widget_1.show(); 
            self.Togglebutton_1.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_1.hide(); 
            self.Togglebutton_1.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_2(self):
        if self.widget_2.isHidden(): 
            self.widget_2.show(); 
            self.Togglebutton_2.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_2.hide(); 
            self.Togglebutton_2.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_3(self):
        if self.widget_3.isHidden(): 
            self.widget_3.show(); 
            self.Togglebutton_3.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_3.hide(); 
            self.Togglebutton_3.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_4(self):
        if self.widget_4.isHidden(): 
            self.widget_4.show(); 
            self.Togglebutton_4.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_4.hide(); 
            self.Togglebutton_4.setText("◀")
    
    def toggleWidget_5(self):
        if self.widget_5.isHidden(): 
            self.widget_5.show(); 
            self.Togglebutton_5.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_5.hide(); 
            self.Togglebutton_5.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_6(self):
        if self.widget_6.isHidden(): 
            self.widget_6.show(); 
            self.Togglebutton_6.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_6.hide(); 
            self.Togglebutton_6.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_7(self):
        if self.widget_7.isHidden(): 
            self.widget_7.show(); 
            self.Togglebutton_7.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_7.hide(); 
            self.Togglebutton_7.setText("◀")
    
    def toggleWidget_8(self):
        if self.widget_8.isHidden(): 
            self.widget_8.show(); 
            self.Togglebutton_8.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_8.hide(); 
            self.Togglebutton_8.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_9(self):
        if self.widget_9.isHidden(): 
            self.widget_9.show(); 
            self.Togglebutton_9.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_9.hide(); 
            self.Togglebutton_9.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_10(self):
        if self.widget_10.isHidden(): 
            self.widget_10.show(); 
            self.Togglebutton_10.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_10.hide(); 
            self.Togglebutton_10.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_11(self):
        if self.widget_11.isHidden(): 
            self.widget_11.show(); 
            self.Togglebutton_11.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_11.hide(); 
            self.Togglebutton_11.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_12(self):
        if self.widget_12.isHidden(): 
            self.widget_12.show(); 
            self.Togglebutton_12.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_12.hide(); 
            self.Togglebutton_12.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_13(self):
        if self.widget_13.isHidden(): 
            self.widget_13.show(); 
            self.Togglebutton_13.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_13.hide(); 
            self.Togglebutton_13.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_14(self):
        if self.widget_14.isHidden(): 
            self.widget_14.show(); 
            self.Togglebutton_14.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_14.hide(); 
            self.Togglebutton_14.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_15(self):
        if self.widget_15.isHidden(): 
            self.widget_15.show(); 
            self.Togglebutton_15.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_15.hide(); 
            self.Togglebutton_15.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_16(self):
        if self.widget_16.isHidden(): 
            self.widget_16.show(); 
            self.Togglebutton_16.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_16.hide(); 
            self.Togglebutton_16.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_17(self):
        if self.widget_17.isHidden(): 
            self.widget_17.show(); 
            self.Togglebutton_17.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_17.hide(); 
            self.Togglebutton_17.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_18(self):
        if self.widget_18.isHidden(): 
            self.widget_18.show(); 
            self.Togglebutton_18.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_18.hide(); 
            self.Togglebutton_18.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_19(self):
        if self.widget_19.isHidden(): 
            self.widget_19.show(); 
            self.Togglebutton_19.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_19.hide(); 
            self.Togglebutton_19.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_20(self):
        if self.widget_20.isHidden(): 
            self.widget_20.show(); 
            self.Togglebutton_20.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_20.hide(); 
            self.Togglebutton_20.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_21(self):
        if self.widget_21.isHidden(): 
            self.widget_21.show(); 
            self.Togglebutton_21.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_21.hide(); 
            self.Togglebutton_21.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_22(self):
        if self.widget_22.isHidden(): 
            self.widget_22.show(); 
            self.Togglebutton_22.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_22.hide(); 
            self.Togglebutton_22.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_23(self):
        if self.widget_23.isHidden(): 
            self.widget_23.show(); 
            self.Togglebutton_23.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_23.hide(); 
            self.Togglebutton_23.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_24(self):
        if self.widget_24.isHidden(): 
            self.widget_24.show(); 
            self.Togglebutton_24.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_24.hide(); 
            self.Togglebutton_24.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_25(self):
        if self.widget_25.isHidden(): 
            self.widget_25.show(); 
            self.Togglebutton_25.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_25.hide(); 
            self.Togglebutton_25.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_26(self):
        if self.widget_26.isHidden(): 
            self.widget_26.show(); 
            self.Togglebutton_26.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_26.hide(); 
            self.Togglebutton_26.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_27(self):
        if self.widget_27.isHidden(): 
            self.widget_27.show(); 
            self.Togglebutton_27.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_27.hide(); 
            self.Togglebutton_27.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_28(self):
        if self.widget_28.isHidden(): 
            self.widget_28.show(); 
            self.Togglebutton_28.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_28.hide(); 
            self.Togglebutton_28.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_29(self):
        if self.widget_29.isHidden(): 
            self.widget_29.show(); 
            self.Togglebutton_29.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_29.hide(); 
            self.Togglebutton_29.setText("◀")   # Black left pointing unicode triangle
    
    def toggleWidget_30(self):
        if self.widget_30.isHidden(): 
            self.widget_30.show(); 
            self.Togglebutton_30.setText("▼")  # Black down pointing unicode triangle
        else: 
            self.widget_30.hide(); 
            self.Togglebutton_30.setText("◀")   # Black left pointing unicode triangle


    def handle_appliancename_change(self):
        for lineEdit in self.appliancename_lineEdits:
            if lineEdit.text():
                self.start_dateEdit_1.setEnabled(True)
                self.ndays_spinBox_1.setEnabled(True)
                self.set_title_lineEdit_1.setEnabled(True)
                self.simulate_pushButton_1.setEnabled(True)
                break
        else:
            self.start_dateEdit_1.setEnabled(False)
            self.ndays_spinBox_1.setEnabled(False)
            self.set_title_lineEdit_1.setEnabled(False)
            self.simulate_pushButton_1.setEnabled(False)






    # RAMP Lite Simulation Functionality
    #
    #
    #
    
    def ramplite_simulation(self):
        try:
            
            user_name =self.user_name_lineEdit_1.text()
            # Define User instance
            user1 = User(user_name , 1)
            
            print(f"User Name: {user1.user_name}")
            print(f"Number of Users: {user1.num_users}")
            
            for i in range(1, 31):
    
                appliance_name = getattr(self, f'appliancename_lineEdit_{i}').text()
    
                if not appliance_name:  # Check if the name is empty
                    continue
                
                
                w1_start_i = getattr(self, f'w1start_timeEdit_{i}').time()
                w1_end_i = getattr(self, f'w1end_timeEdit_{i}').time()     
    
                w2_start_i = getattr(self, f'w2start_timeEdit_{i}').time()
                w2_end_i = getattr(self, f'w2end_timeEdit_{i}').time()     
                
                w3_start_i = getattr(self, f'w3start_timeEdit_{i}').time()
                w3_end_i = getattr(self, f'w3end_timeEdit_{i}').time()     
                
    
                
                
                user1.add_appliance(
                    name= appliance_name,
                    number=getattr(self, f'number_spinBox_{i}').value(),
                    power=getattr(self, f'power_spinBox_{i}').value(),
                    func_time=getattr(self, f'function_time_spinBox_{i}').value(),
                    num_windows=getattr(self, f'num_windows_spinBox_{i}').value(),
                    occasional_use=getattr(self, f'occationaluse_spinBox_{i}').value() / 100,
                    wd_we_type=getattr(self, f'wd_we_comboBox_{i}').currentIndex(),
                    window_1=[w1_start_i.hour() * 60 + w1_start_i.minute(), w1_end_i.hour() * 60 + w1_end_i.minute()],
                    window_2=[w2_start_i.hour() * 60 + w2_start_i.minute(), w2_end_i.hour() * 60 + w2_end_i.minute()],
                    window_3=[w3_start_i.hour() * 60 + w3_start_i.minute(), w3_end_i.hour() * 60 + w3_end_i.minute()],
                    random_var_w=getattr(self, f'r_var_spinBox_{i}').value() / 100,
                    time_fraction_random_variability=getattr(self, f'tfrv_spinBox_{i}').value() / 100,
                    thermal_p_var=getattr(self, f'thermal_v_spinBox_{i}').value() / 100,
                    func_cycle=getattr(self, f'func_cycle_spinBox_{i}').value(),
                    fixed=getattr(self, f'fixe_comboBox_{i}').currentText(),
                    flat=getattr(self, f'flat_comboBox_{i}').currentText()
                    )
        
        
        
            start_date_widget = self.start_dateEdit_1 
            date_from_widget = start_date_widget.date().toString("yyyy-MM-dd")
            user_collect = UseCase(users=[user1], date_start = date_from_widget)
    
            
            
            self.figure1.clear()
    
            n_days = self.ndays_spinBox_1.value()
            user_collect.initialize(num_days=n_days, force=True)
            
            self.profiles_lite = pd.DataFrame(index = pd.date_range(start = date_from_widget, periods = 1440*n_days,freq="T"))
            
            
            
            for user in user_collect.users:
                
                # storing daily profiles for a user
                user_profiles = []
                for day_idx, day in enumerate(user_collect.days):
                    single_profile = user.generate_single_load_profile(
                        prof_i = day_idx, # the day to generate the profile
                        day_type = get_day_type(day)    
                        )
                    
                    user_profiles.extend(single_profile)
                    
                self.profiles_lite[user.user_name] = user_profiles
            
    
            self.title = self.set_title_lineEdit_1.text()
            self.ax = self.figure1.add_subplot(111)
            self.ax.set_xlabel('Time (Minutes)')
            self.ax.set_ylabel('Power(w)')
            self.profiles_lite.plot(ax=self.ax, title=self.title)
            self.figure1.tight_layout()
            
            # Redraw the canvas
            self.canvas1.draw()
            self.figure1.tight_layout()
            
            print("Plot with Default 1 minute timestamp is generated")
            
        except Exception as e:
            print(f"An error occurred: {e}")

        
    # Generate Plots based on Timestamp selected when 'Generate Button Pressed'  
    def generate_plots_lite(self):

      
        self.ax.clear()
        

        
        if self.Minute_radioButton_1.isChecked():
            # Plot for Minute profile 
            minute_profile_lite = self.profiles_lite            
            minute_profile_lite.plot(ax=self.ax, kind="line", title=self.title, xlabel="Time (Minutes)", ylabel="Power(W)")
            self.ax.set_xlabel("Time (Minutes)", fontsize=12)  # Set font size for x-label
            self.ax.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure1.tight_layout()
            print("Plot with 1 minute timestamp is generated")

    
        elif self.FifteenMinute_radioButton_1.isChecked():
            # Plot for 15Minute profile 
            fifteen_minute_profile_lite = self.profiles_lite.resample("15T").sum()            
            fifteen_minute_profile_lite.plot(ax=self.ax, kind="line", title=self.title, xlabel="Time (15 Minutes)", ylabel="Power(W)")
            self.ax.set_xlabel("Time (1 Minutes)", fontsize=12)  # Set font size for x-label
            self.ax.set_ylabel("Power(W)", fontsize=12)  # Set font size for x-label and y-label
            self.figure1.tight_layout()
            print("Plot with 15 minute timestamp is generated")
            
        elif self.Hourly_radioButton_1.isChecked():
            # Plot for hourly profile 
            hourly_profile_lite = self.profiles_lite.resample("1H").sum()            
            hourly_profile_lite.plot(ax=self.ax, kind="line", title=self.title, xlabel="Time (Hours)", ylabel="Power(W)")
            self.ax.set_xlabel("Time (Hours)", fontsize=12)  # Set font size for x-label
            self.ax.set_ylabel("Power(W)", fontsize=12)  # Set font size for x-label and y-label
            self.figure1.tight_layout()
            print("Plot with Hourly timestamp is generated")
            
        elif self.Daily_radioButton_1.isChecked():
            # Plot for Daily profile 
            daily_profile_lite = self.profiles_lite.resample("1D").sum()            
            daily_profile_lite.plot(ax=self.ax, kind="line", title=self.title, xlabel="Time (Days)", ylabel="Power(W)")
            self.ax.set_xlabel("Time (days)", fontsize=12)  # Set font size for x-label
            self.ax.set_ylabel("Power(W)", fontsize=12)  # Set font size for x-label and y-label
            self.figure1.tight_layout()
            print("Plot with Daily timestamp is generated")
            
        elif self.Monthly_radioButton_1.isChecked():
            # Plot for hourly profile 
            monthly_profile_lite = self.profiles_lite.resample("1M").sum()            
            monthly_profile_lite.plot(ax=self.ax, kind="line", title=self.title, xlabel="Time (Months)", ylabel="Power(W)")
            self.ax.set_xlabel("Time (Months)", fontsize=12)  # Set font size for x-label
            self.ax.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure1.tight_layout()
            print("Plot with Monthly timestamp is generated")
            
        elif self.barchart_radioButton_1.isChecked():
            # Plot for Monthly bar chart
            monthly_bar_profile_lite = self.profiles_lite.resample("1M").sum()            
            monthly_bar_profile_lite.index = monthly_bar_profile_lite.index.strftime('%B')  # Format the index to month names
            monthly_bar_profile_lite.plot(ax=self.ax, kind="bar", title=self.title, xlabel="Month", ylabel="Power(W)")
            self.ax.set_xlabel("Time (Months)", fontsize=12)  # Set font size for x-label
            self.ax.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure1.tight_layout()
            print("bar Chart with Monthly timestamp is generated, Saving .CSV is not possible for this")
      

        
        # Redraw the canvases
        self.canvas1.draw()


    # Saves Plot as a image (RAMP Lite)    
    def save_figure_lite(self):
        
        options = QFileDialog.Options()
        file_name, _ = QFileDialog.getSaveFileName(self.tabWidget, "Save Figure", "", "PNG Files (*.png);;All Files (*)", options=options)

        
        if file_name:
            # Save the figure as an image with the chosen file name
            self.figure1.savefig(file_name)       
            
            print(f"Plot saved as image file: {file_name}")
        else:
            print("Plot saving canceled")
    
    
    # Saves Data frame as a .CSV file based on Timestamp Selected     
    def save_as_csv_lite(self):
        filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save as .csv", "", "CSV Files (*.csv);;All Files (*)")
    
        if filename:
            # Resample data based on the selected radio button
            if self.Minute_radioButton_1.isChecked():
                df = self.profiles_lite.resample("1T").sum()
                timestamp_message = "Minute"
            elif self.FifteenMinute_radioButton_1.isChecked():
                df = self.profiles_lite.resample("15T").sum()
                timestamp_message = "Fifteen Minute"
            elif self.Hourly_radioButton_1.isChecked():
                df = self.profiles_lite.resample("1H").sum()
                timestamp_message = "Hourly"
            elif self.Daily_radioButton_1.isChecked():
                df = self.profiles_lite.resample("1D").sum()
                timestamp_message = "Daily"
            elif self.Monthly_radioButton_1.isChecked():
                df = self.profiles_lite.resample("1M").sum()
                timestamp_message = "Monthly"
    
            # Reset index to include timestamp as a separate column
            df.reset_index(inplace=True)
    
            # Save DataFrame to CSV file
            df.to_csv(filename, index=False)
    
            # Print the message with the file path and timestamp information
            print(f"Dataframe with {timestamp_message} timestamp is saved as CSV file: {filename}")
        else:
            print("CSV saving canceled")
            
            
    # RAMP Advance 
    #
    #
    
    # Creating User and Appliance data
    
    # To create New User
    def create_user(self):
        rowPosition = self.create_user_tableWidget_1.rowCount()
        self.create_user_tableWidget_1.insertRow(rowPosition)
     
    # To remove selected User   
    def remove_user(self):
        current_row = self.create_user_tableWidget_1.currentRow()
        if current_row >= 0:
            self.create_user_tableWidget_1.removeRow(current_row)
            
    # Save User and Apliance data in UseCase and allows Data edit in 'Set Parameter' Tab       
    def save_set_parameters(self):
        try:
            
            user_app = {}
        
            for row in range(self.create_user_tableWidget_1.rowCount()):
                user = self.create_user_tableWidget_1.item(row, 0).text()
                appliances = self.create_user_tableWidget_1.item(row, 1).text().split(',')  # Split the values
        
                for app in appliances:
                    # Remove leading and trailing spaces, and quotation marks
                    app = app.strip().strip("'").strip('"')
                    
                    if user not in user_app:
                        user_app[user] = [app]
                    else:
                        user_app[user].append(app)
            print(user_app)
            # Creating a UseCase class to create the database
            use_case = UseCase()
            print(user_app)
            
            # Assigning the appliances to users
            for user, apps in user_app.items():
            
                user_instance = User(user_name=user)
            
                for app in apps:
                    app_instance = user_instance.add_appliance(name=app)
                    app_instance.windows()
            
                use_case.add_user(user_instance)
            
            
    
            # Export data to a DataFrame
            df = use_case.export_to_dataframe()
            print(df)
            
            
            for i in range(df.shape[1]):
                self.parameters_TableWidget_1.resizeColumnToContents(i)
            
            # Clear existing data in the QTableWidget
            self.parameters_TableWidget_1.clear()
            
            # Set the number of rows and columns based on the DataFrame
            self.parameters_TableWidget_1.setRowCount(df.shape[0])
            self.parameters_TableWidget_1.setColumnCount(df.shape[1])
            
            # Set the headers
            self.parameters_TableWidget_1.setHorizontalHeaderLabels(df.columns)
            
            header2 = self.parameters_TableWidget_1.horizontalHeader()
            for i in range(df.shape[1]):
                header2.setSectionResizeMode(i, QHeaderView.ResizeToContents)
            
            # Populate the table with data from the DataFrame
            for i in range(df.shape[0]):
                for j in range(df.shape[1]):
                    item = QTableWidgetItem(str(df.iloc[i, j]))
                    self.parameters_TableWidget_1.setItem(i, j, item)
            print("User and Appliance are defined. Please set parameters in the 'Set Parameters' tab.")
            
            
        except Exception as e:
            print(f"An error occurred: {e}")
    # Enables Buttons           
    def enableSaveSetButton(self):
        self.save_set_pushButton_1.setEnabled(True)
 
    def enableSaveButton(self):
        self.parameter_save_pushButton_1.setEnabled(True)

    def enableUseExportButtons(self):
        self.Use_pushButton_1.setEnabled(True)

    
    # When Pressed 'Use For Simulation' it will create .xlsx file in Current Directory
    def save_created_file(self):
        try:
            
            # Get the current working directory
            current_directory = os.getcwd()
            
            # Combine with the desired file name
            file_path = os.path.join(current_directory, "User_Appliance_Data.xlsx")
        
            # Get the number of rows and columns in the table
            num_rows = self.parameters_TableWidget_1.rowCount()
            num_cols = self.parameters_TableWidget_1.columnCount()
        
            if num_rows > 0 and num_cols > 0:
                # Get the data from 'Exported Data Table'
                data = []
                for row in range(num_rows):
                    row_data = []
                    for col in range(num_cols):
                        item = self.parameters_TableWidget_1.item(row, col)
                        if item is not None:
                            text = item.text()
                            # Determine the type of data in the column
                            try:
                                value = float(text)  # Try to convert to float
                                row_data.append(value)
                            except ValueError:
                                row_data.append(text)
                        else:
                            row_data.append("")
                    data.append(row_data)
        
                # Create a DataFrame from the data
                df = pd.DataFrame(data)
        
                # Get the header data
                header = []
                for col in range(num_cols):
                    item = self.parameters_TableWidget_1.horizontalHeaderItem(col)
                    if item is not None:
                        header.append(item.text())
                    else:
                        header.append(f"Column {col+1}")
        
                # Add header to the DataFrame
                df.columns = header
        
                # Save the DataFrame to an Excel file with appropriate data types
                writer = pd.ExcelWriter(file_path, engine='xlsxwriter')
                df.to_excel(writer, index=False, sheet_name='Sheet1')
        
                # Access the xlsxwriter workbook and worksheet objects
                workbook  = writer.book
                worksheet = writer.sheets['Sheet1']
        
                # Set column widths based on the maximum length of the data in each column
                for i, col in enumerate(df.columns):
                    max_len = max(df[col].astype(str).apply(len).max(), len(col))
                    worksheet.set_column(i, i, max_len)
        
                # Close the Pandas Excel writer and output the Excel file
                writer._save()
                print(f"File named 'User and Appliance Database' is saved to {file_path}, File will be replaced when next time you save it, You may copy and save it somewhere else for future purpose or else")
            else:
                print("No data to save.")
                
        except Exception as e:
            print(f"An error occurred: {e}")
            

            
    # IMport file function
    # If data is created in GUI then it will import File created by save-created-file method
    # Or else it allowes you to upload your own .xlsx file
    def importFile(self, use_default=False):
        try:
            
            self.select_user_comboBox_1.clear()
            self.selected_user_lineEdit_1.clear()  
            if not use_default:
                file_path, _ = QtWidgets.QFileDialog.getOpenFileName(None, "Import Edited Excel File")
                self.select_user_comboBox_1.clear()
                self.selected_user_lineEdit_1.clear() 
            else:
                # Use default file path if use_default is True
                current_directory = os.getcwd()
                file_path = os.path.join(current_directory, "User_Appliance_Data.xlsx")
                self.select_user_comboBox_1.clear()
                self.selected_user_lineEdit_1.clear() 
                
                
            if file_path:
                self.use_case = UseCase()  # Assign it to the instance variable
                self.use_case.load(file_path)
                print("File loaded successfully") # Prints if file is succesfully loaded
                
                user_names = pd.read_excel(file_path, header=None, skiprows=1).iloc[:, 0].tolist()
        
                # Remove duplicates by converting to a set and back to a list
                unique_user_names = list(set(user_names))
    
                
                # Populate the combo box with user names
                self.select_user_comboBox_1.addItems(unique_user_names)
                self.enableWidgetsAfterFileLoaded()
                self.treeview(file_path)
                
        except Exception as e:
            print(f"An error occurred: {e}")

        
    def enableWidgetsAfterFileLoaded(self):

        self.for_all_users_radioButton_1.setEnabled(True)
        self.selected_users_radioButton_1.setEnabled(True)

    # If simulation for selected users desired
    # All users will showup in Combo box and from combo box User can be added to list of selected users
    def addUserFromComboBox(self):
        try:
            
            selected_user = self.select_user_comboBox_1.currentText()
            current_text = self.selected_user_lineEdit_1.text()
            
            if current_text:
                updated_text = f"{current_text}, {selected_user}"
            else:
                updated_text = selected_user
    
            self.selected_user_lineEdit_1.setText(updated_text)
            self.selected_users.append(selected_user)
            
            print(f"{selected_user} is added to the list for simulation.")
            
        except Exception as e:
            print(f"An error occurred: {e}")

    # RAMP Advance Simulation
    def ramp_advance_simulation(self):
        
        try:
            
            plt.close('all')
            matplotlib.use('Qt5Agg')
        
            # Checks if Selected radio button is checked, if yes then selected Users will be collected for Simulation
            if self.selected_users_radioButton_1.isChecked() and hasattr(self, 'selected_users') and self.selected_users:
                selected_users = self.selected_users
            else: # else Selected user wil be considers as All Users
                selected_users = [user.user_name for user in self.use_case.users]
        
    
        
            n_days = self.ndays_spinBox_2.value() # Collects Number of days
            
            start_date_widget_2 = self.start_dateEdit_2
            date_from_widget_2 = start_date_widget_2.date()
            date_start  = date_from_widget_2.toString("yyyy-MM-dd")
            self.use_case.date_start = date_start
            self.use_case.initialize(num_days =n_days, force = True)
            self.use_case.generate_daily_load_profiles()
            
            
            selected_date = self.start_dateEdit_2.date() # Collects selected date
            
            # Define dataframe
            self.profiles_advance = pd.DataFrame(index=pd.date_range(start=selected_date.toString("yyyy-MM-dd"), periods=1440 * n_days, freq="T"))
        
            for user in self.use_case.users:
                if user.user_name in selected_users:
                    user_profiles = []
                    for day_idx, day in enumerate(self.use_case.days):
                        profile = user.generate_aggregated_load_profile(
                            prof_i=day_idx,
    
                            day_type= get_day_type(day)
                        )
        
                        user_profiles.extend(profile)
        
                    self.profiles_advance[user.user_name] = user_profiles
                    
    
            self.ax1.clear() # Clears previous plots
            self.ax2.clear()
            self.figure2.clear() # Clears previous figures
            self.figure3.clear()
    
        
            self.title1 = self.set_title_lineEdit_2.text() # Collects Title for the plot on left side
            self.ax1 = self.figure2.add_subplot(111) 
    
    
            self.profiles_advance.plot(ax=self.ax1, kind="line", title = self.title1, xlabel="Time(Minutes)", ylabel="Power(W)")
    
    
            
            self.title2 = self.set_title_lineEdit_3.text() # Collects Title for the plot on right
            self.ax2 = self.figure3.add_subplot(111)
            sum_of_all_users = self.profiles_advance.resample('1T').sum().sum(axis=1)
            sum_of_all_users.plot(ax=self.ax2, kind ='line', title = self.title2, xlabel="Time(Minutes)", ylabel="Power(W)")
    
            
            print("Plot with Default 1 minute timestamp is generated")
            
            # Redraw the canvas
            self.canvas2.draw()
            self.canvas3.draw()
    
    
            plt.show()
      
        except Exception as e:
            print(f"An error occurred: {e}")
        
        
    # Generates Plots Based on Timestamp Selected  
    def generate_plots_ramp_advance(self):
        matplotlib.use('Qt5Agg')
      
        self.ax1.clear()
        self.ax2.clear()
        
        if self.Minute_radioButton_2.isChecked():
            # Plot for Minute profile individual
            minute_profile_advance = self.profiles_advance         
            minute_profile_advance.plot(ax=self.ax1, kind="line", title=self.title1, xlabel="Time (Minutes)", ylabel="Power(W)")
            self.ax1.set_xlabel("Time (Minutes)", fontsize=12)  # Set font size for x-label
            self.ax1.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure2.tight_layout()
            
            # Plot for Minute profile sum of all users
            minute_profile_advance_sum = self.profiles_advance.resample("1T").sum().sum(axis=1)         
            minute_profile_advance_sum.plot(ax=self.ax2, kind="line", title=self.title2, xlabel="Time (MInutes)", ylabel="Power(W)")
            self.ax2.set_xlabel("Time (Minutes)", fontsize=12)  # Set font size for x-label
            self.ax2.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure3.tight_layout()
            print("Plot with 1 minute timestamp is generated")
        
        
        elif self.FifteenMinute_radioButton_2.isChecked():
            # Plot for 15Minute profile 
            fifteen_minute_profile_advance = self.profiles_advance.resample("15T").sum()            
            fifteen_minute_profile_advance.plot(ax=self.ax1, kind="line", title=self.title1, xlabel="Time (15 Minutes)", ylabel="Power(W)")
            self.ax1.set_xlabel("Time (15 Minutes)", fontsize=12)  # Set font size for x-label
            self.ax1.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure2.tight_layout()

            # Plot for 15Minute profile 
            fifteen_minute_profile_advance_sum = self.profiles_advance.resample("15T").sum().sum(axis=1)           
            fifteen_minute_profile_advance_sum.plot(ax=self.ax2, kind="line", title=self.title2, xlabel="Time (15 Minutes)", ylabel="Power(W)")
            self.ax2.set_xlabel("Time (15 Minutes)", fontsize=12)  # Set font size for x-label
            self.ax2.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure3.tight_layout()
            print("Plot with 15 minute timestamp is generated")
                        
        elif self.Hourly_radioButton_2.isChecked():
            # Plot for hourly profile 
            hourly_profile_advance = self.profiles_advance.resample("1H").sum()            
            hourly_profile_advance.plot(ax=self.ax1, kind="line", title=self.title1, xlabel="Time (Hours)", ylabel="Power(W)")
            self.ax1.set_xlabel("Time (Hours)", fontsize=12)  # Set font size for x-label
            self.ax1.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure2.tight_layout()
            
            # Plot for hourly profile 
            hourly_profile_advance_sum = self.profiles_advance.resample("1H").sum().sum(axis=1)           
            hourly_profile_advance_sum.plot(ax=self.ax2, kind="line", title=self.title2, xlabel="Time (Hours)", ylabel="Power(W)")
            self.ax2.set_xlabel("Time (Hours)", fontsize=12)  # Set font size for x-label
            self.ax2.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure3.tight_layout()
            print("Plot with Hourly timestamp is generated")
            
        elif self.Daily_radioButton_2.isChecked():
            # Plot for Daily profile 
            daily_profile_advance = self.profiles_advance.resample("1D").sum()            
            daily_profile_advance.plot(ax=self.ax1, kind="line", title=self.title1, xlabel="Time (Days)", ylabel="Power(W)")
            self.ax1.set_xlabel("Time (Days)", fontsize=12)  # Set font size for x-label
            self.ax1.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure2.tight_layout()
            
            # Plot for Daily profile 
            daily_profile_advance_sum = self.profiles_advance.resample("1D").sum().sum(axis=1)           
            daily_profile_advance_sum.plot(ax=self.ax2, kind="line", title=self.title2, xlabel="Time (Days)", ylabel="Power(W)")
            self.ax2.set_xlabel("Time (Days)", fontsize=12)  # Set font size for x-label
            self.ax2.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure3.tight_layout()
            print("Plot with Daily timestamp is generated")
            
        elif self.Monthly_radioButton_2.isChecked():
            # Plot for hourly profile 
            monthly_profile_advance = self.profiles_advance.resample("1M").sum()            
            monthly_profile_advance.plot(ax=self.ax1, kind="line", title=self.title1, xlabel="Time (Months)", ylabel="Power(W)")
            self.ax1.set_xlabel("Time (Months)", fontsize=12)  # Set font size for x-label
            self.ax1.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure2.tight_layout()
            
            # Plot for hourly profile 
            monthly_profile_advance_sum = self.profiles_advance.resample("1M").sum().sum(axis=1)         
            monthly_profile_advance_sum.plot(ax=self.ax2, kind="line", title=self.title2, xlabel="Time (Months)", ylabel="Power(W)")
            self.ax2.set_xlabel("Time (Months)", fontsize=12)  # Set font size for x-label
            self.ax2.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure3.tight_layout()
            print("Plot with Monthly timestamp is generated")
            
        elif self.barchart_radioButton_2.isChecked():
            # Plot for Monthly bar chart
            monthly_bar_profile_advance = self.profiles_advance.resample("1M").sum()            
            monthly_bar_profile_advance.index = monthly_bar_profile_advance.index.strftime('%B')  # Format the index to month names
            monthly_bar_profile_advance.plot(ax=self.ax1, kind="bar", title=self.title1, xlabel="Month", ylabel="Power(W)")
            self.ax1.set_xlabel("Time (Months)", fontsize=12)  # Set font size for x-label
            self.ax1.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure2.tight_layout()

            # Plot for Monthly bar chart
            monthly_bar_profile_advance_sum = self.profiles_advance.resample("1M").sum().sum(axis=1)          
            monthly_bar_profile_advance_sum.index = monthly_bar_profile_advance_sum.index.strftime('%B')  # Format the index to month names
            monthly_bar_profile_advance_sum.plot(ax=self.ax2, kind="bar", title=self.title2, xlabel="Month", ylabel="Power(W)")
            self.ax2.set_xlabel("Time (Months)", fontsize=12)  # Set font size for x-label
            self.ax2.set_ylabel("Power(W)", fontsize=12) # Set font size for x-label and y-label
            self.figure3.tight_layout()
            print("Bar Chart with Monthly timestamp is generated")


        # Adjust layout
        
        
        # Redraw the canvases
        self.canvas2.draw()
        self.canvas3.draw()

    # Saves Current plots
    def save_image_1(self):   
        if self.figure2.axes:
            filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save Ax1 Image", "", "Images (*.png *.xpm *.jpg *.bmp);;All Files (*)")
            if filename:
                self.figure2.savefig(filename)
                print(f"Plot With individual users is saved as image file to {filename}")
    
    def save_image_2(self):
        if self.figure3.axes:
            filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save Ax2 Image", "", "Images (*.png *.xpm *.jpg *.bmp);;All Files (*)")
            if filename:
                self.figure3.savefig(filename)
                print(f"Plot With sum of all users is saved as image file to {filename}")
                
                
    
    # Saves dataframe as .CSV file based on Timestamp Selected
    def save_as_csv_advance_individual_user(self):
        if self.Minute_radioButton_2.isChecked():

                filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save as .csv", "", "CSV Files (*.csv);;All Files (*)")
                if filename:
                    df = self.profiles_advance.resample("1T").sum()
                    df.reset_index(inplace=True)
                    df.to_csv(filename, index=False)
                    print(f"Dataframe with one minute timestamp(individual) is saved as CSV file to {filename}")

    
        elif self.FifteenMinute_radioButton_2.isChecked():

                filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save as .csv", "", "CSV Files (*.csv);;All Files (*)")
                if filename:
                    df = self.profiles_advance.resample("15T").sum()
                    df.reset_index(inplace=True)
                    df.to_csv(filename, index=False)
                    print(f"Dataframe with 15 minute timestamp(individual) is saved as CSV file to {filename}")

    
        elif self.Hourly_radioButton_2.isChecked():

                filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save as .csv", "", "CSV Files (*.csv);;All Files (*)")
                if filename:
                    df = self.profiles_advance.resample("1H").sum()
                    df.reset_index(inplace=True)
                    df.to_csv(filename, index=False)
                    print(f"Dataframe with Hourly timestamp(individual) is saved as CSV file to {filename}")


        elif self.Daily_radioButton_2.isChecked():

                filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save as .csv", "", "CSV Files (*.csv);;All Files (*)")
                if filename:
                    df = self.profiles_advance.resample("1D").sum()
                    df.reset_index(inplace=True)
                    df.to_csv(filename, index=False)
                    print(f"Dataframe with Daily timestamp(individual) is saved as CSV file to {filename}")


        elif self.Monthly_radioButton_2.isChecked():

                filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save as .csv", "", "CSV Files (*.csv);;All Files (*)")
                if filename:
                    df = self.profiles_advance.resample("1M").sum()
                    df.reset_index(inplace=True)
                    df.to_csv(filename, index=False)
                    print(f"Dataframe with Monthly timestamp(individual) is saved as CSV file to {filename}")
        

                    
    def save_as_csv_advance_sum_of_users(self):
        if self.Minute_radioButton_2.isChecked():
            filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save as .csv", "", "CSV Files (*.csv);;All Files (*)")
            if filename:
                df = self.profiles_advance.resample("1T").sum().sum(axis=1)
                df.to_csv(filename, index=True, index_label='Timestamp')
                print(f"Dataframe with one minute timestamp(Aggregated) is saved as CSV file to {filename}")

        elif self.FifteenMinute_radioButton_2.isChecked():
            filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save as .csv", "", "CSV Files (*..csv);;All Files (*)")
            if filename:
                df = self.profiles_advance.resample("15T").sum().sum(axis=1)
                df.to_csv(filename, index=True, index_label='Timestamp')
                print(f"Dataframe with 15 minute timestamp(Aggregated) is saved as CSV file to {filename}")
                

        elif self.Hourly_radioButton_2.isChecked():
            filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save as .csv", "", "CSV Files (*.csv);;All Files (*)")
            if filename:
                df = self.profiles_advance.resample("1H").sum().sum(axis=1)
                df.to_csv(filename, index=True, index_label='Timestamp')
                print(f"Dataframe with Hourly timestamp(Aggregated) is saved as CSV file to {filename}")

        elif self.Daily_radioButton_2.isChecked():
            filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save as .csv", "", "CSV Files (*.csv);;All Files (*)")
            if filename:
                df = self.profiles_advance.resample("1D").sum().sum(axis=1)
                df.to_csv(filename, index=True, index_label='Timestamp')
                print(f"Dataframe with Daily timestamp(Aggregated) is saved as CSV file to {filename}")

        elif self.Monthly_radioButton_2.isChecked():
            filename, _ = QtWidgets.QFileDialog.getSaveFileName(None, "Save as .csv", "", "CSV Files (*.csv);;All Files (*)")
            if filename:
                df = self.profiles_advance.resample("1M").sum().sum(axis=1)
                df.to_csv(filename, index=True, index_label='Timestamp')
                print(f"Dataframe with Monthly timestamp(Aggregated) is saved as CSV file to {filename}")


            
    # Tree Visulization Tab
    #
    #
    #
    
    def treeview(self, file_path):
        try:
            
        
            # Read the Excel file currently used for Simulation
            df = pd.read_excel(file_path)
    
            # Create a QStandardItemModel with additional columns
            self.model = QStandardItemModel()
            self.model.setHorizontalHeaderLabels(['User Name> Appliance> Name / Number', 'power', 'num_windows', 'func_time', 'wd_we_type'])
    
            # Initialize variables to keep track of the current parent item
            current_user_name = None
            parent_item = None
            
            
            # Mapping for wd_we_type indices to their corresponding texts
            wd_we_type_mapping = {0: 'Weekdays', 1: 'Weekends', 2: 'Whole Week'}
    
            for index, row in df.iterrows():
                user_name = str(row['user_name'])
                name = str(row['name'])
                number = str(row['number'])
                power = f'power(W)={row["power"]}'
                num_windows = f'Number of Windows={row["num_windows"]}'
                func_time = f'Function time(Minutes) = {row["func_time"]}'
                wd_we_type = f'On Which days = {row["wd_we_type"]}'
                
                
                # Retrieve text for wd_we_type index
                wd_we_type_index = row["wd_we_type"]
                wd_we_type_text = wd_we_type_mapping.get(wd_we_type_index, f'Unknown: {wd_we_type_index}')
            
                wd_we_type = f'On Which days = {wd_we_type_text}'
    
                if user_name == current_user_name:
                    # If user_name is the same, append to the existing parent item
                    child_item2 = QStandardItem(number)
                    child_item3 = QStandardItem(power)
                    child_item4 = QStandardItem(num_windows)
                    child_item5 = QStandardItem(func_time)
                    child_item6 = QStandardItem(wd_we_type)
                    child_item1 = QStandardItem(name)
                    child_item1.appendRow([child_item2, child_item3, child_item4, child_item5, child_item6])
                    parent_item.appendRow([child_item1])
                else:
                    # If user_name is different, create a new parent item
                    parent_item = QStandardItem(user_name)
                    child_item1 = QStandardItem(name)
                    child_item2 = QStandardItem(number)
                    child_item3 = QStandardItem(power)
                    child_item4 = QStandardItem(num_windows)
                    child_item5 = QStandardItem(func_time)
                    child_item6 = QStandardItem(wd_we_type)
                    child_item1.appendRow([child_item2, child_item3, child_item4, child_item5, child_item6])
    
                    parent_item.appendRow([child_item1])
                    self.model.appendRow(parent_item)
    
                    current_user_name = user_name
    
            # Create a QTreeView
            self.treeView_1.setModel(self.model)
            
            # Collapse all nodes by default
            self.treeView_1.collapseAll()
    
            font = QtGui.QFont()
            font.setPointSize(13)
            self.treeView_1.setFont(font)
            
            # Set default widt for each column manually
            column_widths = [200,200, 200, 260, 260, 260]  # Replace these values with your desired widths
        
            for column, width in enumerate(column_widths):
                self.treeView_1.setColumnWidth(column, width)
                
        except Exception as e:
            print(f"An error occurred: {e}")
    



    def __del__(self):
        sys.stdout = sys.__stdout__
        sys.stderr = sys.__stderr__



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ui = Ui_MainWindow()
    MainWindow = QtWidgets.QMainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())


